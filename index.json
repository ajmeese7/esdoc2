[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/Doc/AbstractDoc.js",
    "content": "import path from \"path\";\nimport ParamParser from \"../Parser/ParamParser.js\";\nimport ASTUtil from \"../Util/ASTUtil.js\";\nimport InvalidCodeLogger from \"../Util/InvalidCodeLogger.js\";\nimport ASTNodeContainer from \"../Util/ASTNodeContainer.js\";\nimport babelGenerator from \"babel-generator\";\n\n/**\n * Abstract Doc Class.\n * @todo rename this class name.\n */\nexport default class AbstractDoc {\n  /**\n   * create instance.\n   * @param {AST} ast - this is AST that contains this doc.\n   * @param {ASTNode} node - this is self node.\n   * @param {PathResolver} pathResolver - this is file path resolver that contains this doc.\n   * @param {Tag[]} commentTags - this is tags that self node has.\n   */\n  constructor(ast, node, pathResolver, commentTags = []) {\n    this._ast = ast;\n    this._node = node;\n    this._pathResolver = pathResolver;\n    this._commentTags = commentTags;\n    this._value = {};\n\n    Reflect.defineProperty(this._node, \"doc\", {value: this});\n\n    this._value.__docId__ = ASTNodeContainer.addNode(node);\n\n    this._apply();\n  }\n\n  /** @type {DocObject[]} */\n  get value() {\n    return JSON.parse(JSON.stringify(this._value));\n  }\n\n  /**\n   * apply doc comment.\n   * @protected\n   */\n  _apply() {\n    this._$kind();\n    this._$variation();\n    this._$name();\n    this._$memberof();\n    this._$member();\n    this._$content();\n    this._$generator();\n    this._$async();\n\n    this._$static();\n    this._$longname();\n    this._$access();\n    this._$export();\n    this._$importPath();\n    this._$importStyle();\n    this._$desc();\n    this._$example();\n    this._$see();\n    this._$lineNumber();\n    this._$deprecated();\n    this._$experimental();\n    this._$since();\n    this._$version();\n    this._$todo();\n    this._$ignore();\n    this._$pseudoExport();\n    this._$undocument();\n    this._$unknown();\n    this._$param();\n    this._$property();\n    this._$return();\n    this._$type();\n    this._$abstract();\n    this._$override();\n    this._$throws();\n    this._$emits();\n    this._$listens();\n    this._$decorator();\n  }\n\n  /**\n   * decide `kind`.\n   * @abstract\n   */\n  _$kind() {}\n\n  /** for @_variation */\n  /**\n   * decide `variation`.\n   * @todo implements `@variation`.\n   * @abstract\n   */\n  _$variation() {}\n\n  /**\n   * decide `name`\n   * @abstract\n   */\n  _$name() {}\n\n  /**\n   * decide `memberof`.\n   * @abstract\n   */\n  _$memberof() {}\n\n  /**\n   * decide `member`.\n   * @abstract\n   */\n  _$member() {}\n\n  /**\n   * decide `content`.\n   * @abstract\n   */\n  _$content() {}\n\n  /**\n   * decide `generator`.\n   * @abstract\n   */\n  _$generator() {}\n\n  /**\n   * decide `async`.\n   * @abstract\n   */\n  _$async() {}\n\n  /**\n   * decide `static`.\n   */\n  _$static() {\n    if (\"static\" in this._node) {\n      this._value.static = this._node.static;\n    } else {\n      this._value.static = true;\n    }\n  }\n\n  /**\n   * decide `longname`.\n   */\n  _$longname() {\n    const memberof = this._value.memberof;\n    const name = this._value.name;\n    const scope = this._value.static ? \".\" : \"#\";\n    if (memberof.includes(\"~\")) {\n      this._value.longname = `${memberof}${scope}${name}`;\n    } else {\n      this._value.longname = `${memberof}~${name}`;\n    }\n  }\n\n  /**\n   * decide `access`.\n   * process also @public, @private and @protected.\n   */\n  _$access() {\n    const tag = this._find([\"@access\", \"@public\", \"@private\", \"@protected\"]);\n    if (tag) {\n      let access;\n      /* eslint-disable max-statements-per-line */\n      switch (tag.tagName) {\n        case \"@access\": access = tag.tagValue; break;\n        case \"@public\": access = \"public\"; break;\n        case \"@protected\": access = \"protected\"; break;\n        case \"@private\": access = \"private\"; break;\n        default:\n          throw new Error(`unexpected token: ${tag.tagName}`);\n      }\n\n      this._value.access = access;\n    } else {\n      this._value.access = null;\n    }\n  }\n\n  /**\n   * avoid unknown tag.\n   */\n  _$public() {}\n\n  /**\n   * avoid unknown tag.\n   */\n  _$protected() {}\n\n  /**\n   * avoid unknown tag.\n   */\n  _$private() {}\n\n  /**\n   * decide `export`.\n   */\n  _$export() {\n    let parent = this._node.parent;\n    while (parent) {\n      if (parent.type === \"ExportDefaultDeclaration\") {\n        this._value.export = true;\n        return;\n      } else if (parent.type === \"ExportNamedDeclaration\") {\n        this._value.export = true;\n        return;\n      }\n\n      parent = parent.parent;\n    }\n\n    this._value.export = false;\n  }\n\n  /**\n   * decide `importPath`.\n   */\n  _$importPath() {\n    this._value.importPath = this._pathResolver.importPath;\n  }\n\n  /**\n   * decide `importStyle`.\n   */\n  _$importStyle() {\n    if (this._node.__PseudoExport__) {\n      this._value.importStyle = null;\n      return;\n    }\n\n    let parent = this._node.parent;\n    const name = this._value.name;\n    while (parent) {\n      if (parent.type === \"ExportDefaultDeclaration\") {\n        this._value.importStyle = name;\n        return;\n      } else if (parent.type === \"ExportNamedDeclaration\") {\n        this._value.importStyle = `{${name}}`;\n        return;\n      }\n      parent = parent.parent;\n    }\n\n    this._value.importStyle = null;\n  }\n\n  /**\n   * decide `description`.\n   */\n  _$desc() {\n    this._value.description = this._findTagValue([\"@desc\"]);\n  }\n\n  /**\n   * decide `examples`.\n   */\n  _$example() {\n    const tags = this._findAll([\"@example\"]);\n    if (!tags) return;\n    if (!tags.length) return;\n\n    this._value.examples = [];\n    for (const tag of tags) {\n      this._value.examples.push(tag.tagValue);\n    }\n  }\n\n  /**\n   * decide `see`.\n   */\n  _$see() {\n    const tags = this._findAll([\"@see\"]);\n    if (!tags) return;\n    if (!tags.length) return;\n\n    this._value.see = [];\n    for (const tag of tags) {\n      this._value.see.push(tag.tagValue);\n    }\n  }\n\n  /**\n   * decide `lineNumber`.\n   */\n  _$lineNumber() {\n    const tag = this._find([\"@lineNumber\"]);\n    if (tag) {\n      this._value.lineNumber = parseInt(tag.tagValue, 10);\n    } else {\n      const node = this._node;\n      if (node.loc) {\n        this._value.lineNumber = node.loc.start.line;\n      }\n    }\n  }\n\n  /**\n   * decide `deprecated`.\n   */\n  _$deprecated() {\n    const tag = this._find([\"@deprecated\"]);\n    if (tag) {\n      if (tag.tagValue) {\n        this._value.deprecated = tag.tagValue;\n      } else {\n        this._value.deprecated = true;\n      }\n    }\n  }\n\n  /**\n   * decide `experimental`.\n   */\n  _$experimental() {\n    const tag = this._find([\"@experimental\"]);\n    if (tag) {\n      if (tag.tagValue) {\n        this._value.experimental = tag.tagValue;\n      } else {\n        this._value.experimental = true;\n      }\n    }\n  }\n\n  /**\n   * decide `since`.\n   */\n  _$since() {\n    const tag = this._find([\"@since\"]);\n    if (tag) {\n      this._value.since = tag.tagValue;\n    }\n  }\n\n  /**\n   * decide `version`.\n   */\n  _$version() {\n    const tag = this._find([\"@version\"]);\n    if (tag) {\n      this._value.version = tag.tagValue;\n    }\n  }\n\n  /**\n   * decide `todo`.\n   */\n  _$todo() {\n    const tags = this._findAll([\"@todo\"]);\n    if (tags) {\n      this._value.todo = [];\n      for (const tag of tags) {\n        this._value.todo.push(tag.tagValue);\n      }\n    }\n  }\n\n  /**\n   * decide `ignore`.\n   */\n  _$ignore() {\n    const tag = this._find([\"@ignore\"]);\n    if (tag) {\n      this._value.ignore = true;\n    }\n  }\n\n  /**\n   * decide `pseudoExport`.\n   */\n  _$pseudoExport() {\n    if (this._node.__PseudoExport__) {\n      this._value.pseudoExport = true;\n    }\n  }\n\n  /**\n   * decide `undocument` with internal tag.\n   */\n  _$undocument() {\n    const tag = this._find([\"@undocument\"]);\n    if (tag) {\n      this._value.undocument = true;\n    }\n  }\n\n  /**\n   * decide `unknown`.\n   */\n  _$unknown() {\n    for (const tag of this._commentTags) {\n      const methodName = tag.tagName.replace(/^[@]/, \"_$\");\n      if (this[methodName]) continue;\n\n      if (!this._value.unknown) this._value.unknown = [];\n      this._value.unknown.push(tag);\n    }\n  }\n\n  /**\n   * decide `param`.\n   */\n  _$param() {\n    const values = this._findAllTagValues([\"@param\"]);\n    if (!values) return;\n\n    this._value.params = [];\n    for (const value of values) {\n      const {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value);\n      if (!typeText || !paramName) {\n        InvalidCodeLogger.show(this._pathResolver.fileFullPath, this._node);\n        continue;\n      }\n      const result = ParamParser.parseParam(typeText, paramName, paramDesc);\n      this._value.params.push(result);\n    }\n  }\n\n  /**\n   * decide `return`.\n   */\n  _$return() {\n    const value = this._findTagValue([\"@return\", \"@returns\"]);\n    if (!value) return;\n\n    const {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value, true, false, true);\n    const result = ParamParser.parseParam(typeText, paramName, paramDesc);\n    this._value.return = result;\n  }\n\n  /**\n   * decide `property`.\n   */\n  _$property() {\n    const values = this._findAllTagValues([\"@property\"]);\n    if (!values) return;\n\n    this._value.properties = [];\n    for (const value of values) {\n      const {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value);\n      const result = ParamParser.parseParam(typeText, paramName, paramDesc);\n      this._value.properties.push(result);\n    }\n  }\n\n  /**\n   * decide `type`.\n   */\n  _$type() {\n    const value = this._findTagValue([\"@type\"]);\n    if (!value) return;\n\n    const {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value, true, false, false);\n    const result = ParamParser.parseParam(typeText, paramName, paramDesc);\n    this._value.type = result;\n  }\n\n  /**\n   * decide `abstract`.\n   */\n  _$abstract() {\n    const tag = this._find([\"@abstract\"]);\n    if (tag) {\n      this._value.abstract = true;\n    }\n  }\n\n  /**\n   * decide `override`.\n   */\n  _$override() {\n    const tag = this._find([\"@override\"]);\n    if (tag) {\n      this._value.override = true;\n    }\n  }\n\n  /**\n   * decide `throws`.\n   */\n  _$throws() {\n    const values = this._findAllTagValues([\"@throws\"]);\n    if (!values) return;\n\n    this._value.throws = [];\n    for (const value of values) {\n      const {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value, true, false, true);\n      const result = ParamParser.parseParam(typeText, paramName, paramDesc);\n      this._value.throws.push({\n        types: result.types,\n        description: result.description\n      });\n    }\n  }\n\n  /**\n   * decide `emits`.\n   */\n  _$emits() {\n    const values = this._findAllTagValues([\"@emits\"]);\n    if (!values) return;\n\n    this._value.emits = [];\n    for (const value of values) {\n      const {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value, true, false, true);\n      const result = ParamParser.parseParam(typeText, paramName, paramDesc);\n      this._value.emits.push({\n        types: result.types,\n        description: result.description\n      });\n    }\n  }\n\n  /**\n   * decide `listens`.\n   */\n  _$listens() {\n    const values = this._findAllTagValues([\"@listens\"]);\n    if (!values) return;\n\n    this._value.listens = [];\n    for (const value of values) {\n      const {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value, true, false, true);\n      const result = ParamParser.parseParam(typeText, paramName, paramDesc);\n      this._value.listens.push({\n        types: result.types,\n        description: result.description\n      });\n    }\n  }\n\n  /**\n   * decide `decorator`.\n   */\n  _$decorator() {\n    if (!this._node.decorators) return;\n\n    this._value.decorators = [];\n    for (const decorator of this._node.decorators) {\n      const value = {};\n      switch (decorator.expression.type) {\n        case \"Identifier\":\n          value.name = decorator.expression.name;\n          value.arguments = null;\n          break;\n        case \"CallExpression\":\n          value.name = babelGenerator(decorator.expression).code.replace(/[(].*/, \"\");\n          value.arguments = babelGenerator(decorator.expression).code.replace(/^[^(]+/, \"\");\n          break;\n        case \"MemberExpression\":\n          value.name = babelGenerator(decorator.expression).code.replace(/[(].*/, \"\");\n          value.arguments = null;\n          break;\n        default:\n          throw new Error(`unknown decorator expression type: ${decorator.expression.type}`);\n      }\n      this._value.decorators.push(value);\n    }\n  }\n\n  /**\n   * find all tags.\n   * @param {string[]} names - tag names.\n   * @returns {Tag[]|null} found tags.\n   * @private\n   */\n  _findAll(names) {\n    const results = [];\n    for (const tag of this._commentTags) {\n      if (names.includes(tag.tagName)) results.push(tag);\n    }\n\n    if (results.length) {\n      return results;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * find last tag.\n   * @param {string[]} names - tag names.\n   * @returns {Tag|null} found tag.\n   * @protected\n   */\n  _find(names) {\n    const results = this._findAll(names);\n    if (results && results.length) {\n      return results[results.length - 1];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * find all tag values.\n   * @param {string[]} names - tag names.\n   * @returns {*[]|null} found values.\n   * @private\n   */\n  _findAllTagValues(names) {\n    const tags = this._findAll(names);\n    if (!tags) return null;\n\n    const results = [];\n    for (const tag of tags) {\n      results.push(tag.tagValue);\n    }\n\n    return results;\n  }\n\n  /**\n   * find ta value.\n   * @param {string[]} names - tag names.\n   * @returns {*|null} found value.\n   * @private\n   */\n  _findTagValue(names) {\n    const tag = this._find(names);\n    if (tag) {\n      return tag.tagValue;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * resolve long name.\n   * if the name relates import path, consider import path.\n   * @param {string} name - identifier name.\n   * @returns {string} resolved name.\n   * @private\n   */\n  _resolveLongname(name) {\n    let importPath = ASTUtil.findPathInImportDeclaration(this._ast, name);\n    if (!importPath) return name;\n\n    if (importPath.charAt(0) === \".\" || importPath.charAt(0) === \"/\") {\n      if (!path.extname(importPath)) importPath += \".js\";\n\n      const resolvedPath = this._pathResolver.resolve(importPath);\n      const longname = `${resolvedPath}~${name}`;\n      return longname;\n    } else {\n      const longname = `${importPath}~${name}`;\n      return longname;\n    }\n  }\n\n  /**\n   * flatten member expression property name.\n   * if node structure is [foo [bar [baz [this] ] ] ], flatten is ``this.baz.bar.foo``\n   * @param {ASTNode} node - target member expression node.\n   * @returns {string} flatten property.\n   * @private\n   */\n  _flattenMemberExpression(node) {\n    const results = [];\n    let target = node;\n\n    while (target) {\n      if (target.type === \"ThisExpression\") {\n        results.push(\"this\");\n        break;\n      } else if (target.type === \"Identifier\") {\n        results.push(target.name);\n        break;\n      } else if (target.type === \"CallExpression\") {\n        results.push(target.callee.name);\n        break;\n      } else {\n        results.push(target.property.name);\n        target = target.object;\n      }\n    }\n\n    return results.reverse().join(\".\");\n  }\n\n  /**\n   * find class in same file, import or external.\n   * @param {string} className - target class name.\n   * @returns {string} found class long name.\n   * @private\n   */\n  _findClassLongname(className) {\n    // find in same file.\n    for (const node of this._ast.program.body) {\n      if (![\"ExportDefaultDeclaration\", \"ExportNamedDeclaration\"].includes(node.type)) continue;\n      if (node.declaration && node.declaration.type === \"ClassDeclaration\" && node.declaration.id.name === className) {\n        return `${this._pathResolver.filePath}~${className}`;\n      }\n    }\n\n    // find in import.\n    const importPath = ASTUtil.findPathInImportDeclaration(this._ast, className);\n    if (importPath) return this._resolveLongname(className);\n\n    // find in external\n    return className;\n  }\n}\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Doc/AbstractDoc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "AbstractDoc",
    "memberof": "src/Doc/AbstractDoc.js",
    "static": true,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Doc/AbstractDoc.js",
    "importStyle": "AbstractDoc",
    "description": "Abstract Doc Class.",
    "lineNumber": 12,
    "todo": [
      "rename this class name."
    ],
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#constructor",
    "access": "public",
    "description": "create instance.",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "AST"
        ],
        "spread": false,
        "optional": false,
        "name": "ast",
        "description": "this is AST that contains this doc."
      },
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "this is self node."
      },
      {
        "nullable": null,
        "types": [
          "PathResolver"
        ],
        "spread": false,
        "optional": false,
        "name": "pathResolver",
        "description": "this is file path resolver that contains this doc."
      },
      {
        "nullable": null,
        "types": [
          "Tag[]"
        ],
        "spread": false,
        "optional": false,
        "name": "commentTags",
        "description": "this is tags that self node has."
      }
    ]
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "_ast",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_ast",
    "access": "private",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "_node",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_node",
    "access": "private",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "_pathResolver",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_pathResolver",
    "access": "private",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "_commentTags",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_commentTags",
    "access": "private",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "_value",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_value",
    "access": "private",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "get",
    "name": "value",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#value",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "DocObject[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "_apply",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_apply",
    "access": "protected",
    "description": "apply doc comment.",
    "lineNumber": 43,
    "params": [],
    "return": null
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "_$kind",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$kind",
    "access": "private",
    "description": "decide `kind`.",
    "lineNumber": 88,
    "abstract": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "_$variation",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$variation",
    "access": "private",
    "description": "decide `variation`.",
    "lineNumber": 96,
    "todo": [
      "implements `@variation`."
    ],
    "abstract": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "_$name",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$name",
    "access": "private",
    "description": "decide `name`",
    "lineNumber": 102,
    "abstract": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "_$memberof",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$memberof",
    "access": "private",
    "description": "decide `memberof`.",
    "lineNumber": 108,
    "abstract": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "_$member",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$member",
    "access": "private",
    "description": "decide `member`.",
    "lineNumber": 114,
    "abstract": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "_$content",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$content",
    "access": "private",
    "description": "decide `content`.",
    "lineNumber": 120,
    "abstract": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "_$generator",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$generator",
    "access": "private",
    "description": "decide `generator`.",
    "lineNumber": 126,
    "abstract": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "_$async",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$async",
    "access": "private",
    "description": "decide `async`.",
    "lineNumber": 132,
    "abstract": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "_$static",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$static",
    "access": "private",
    "description": "decide `static`.",
    "lineNumber": 137,
    "params": [],
    "return": null
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "_$longname",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$longname",
    "access": "private",
    "description": "decide `longname`.",
    "lineNumber": 148,
    "params": [],
    "return": null
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "_$access",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$access",
    "access": "private",
    "description": "decide `access`.\nprocess also @public, @private and @protected.",
    "lineNumber": 163,
    "params": [],
    "return": null
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "_$public",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$public",
    "access": "private",
    "description": "avoid unknown tag.",
    "lineNumber": 186,
    "params": [],
    "return": null
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "_$protected",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$protected",
    "access": "private",
    "description": "avoid unknown tag.",
    "lineNumber": 191,
    "params": [],
    "return": null
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "_$private",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$private",
    "access": "private",
    "description": "avoid unknown tag.",
    "lineNumber": 196,
    "params": [],
    "return": null
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "_$export",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$export",
    "access": "private",
    "description": "decide `export`.",
    "lineNumber": 201,
    "params": [],
    "return": null
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "_$importPath",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$importPath",
    "access": "private",
    "description": "decide `importPath`.",
    "lineNumber": 221,
    "params": [],
    "return": null
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "_$importStyle",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$importStyle",
    "access": "private",
    "description": "decide `importStyle`.",
    "lineNumber": 228,
    "params": [],
    "return": null
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "_$desc",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$desc",
    "access": "private",
    "description": "decide `description`.",
    "lineNumber": 253,
    "params": [],
    "return": null
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "_$example",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$example",
    "access": "private",
    "description": "decide `examples`.",
    "lineNumber": 260,
    "params": [],
    "return": null
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "_$see",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$see",
    "access": "private",
    "description": "decide `see`.",
    "lineNumber": 274,
    "params": [],
    "return": null
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "_$lineNumber",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$lineNumber",
    "access": "private",
    "description": "decide `lineNumber`.",
    "lineNumber": 288,
    "params": [],
    "return": null
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "_$deprecated",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$deprecated",
    "access": "private",
    "description": "decide `deprecated`.",
    "lineNumber": 303,
    "params": [],
    "return": null
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "_$experimental",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$experimental",
    "access": "private",
    "description": "decide `experimental`.",
    "lineNumber": 317,
    "params": [],
    "return": null
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "_$since",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$since",
    "access": "private",
    "description": "decide `since`.",
    "lineNumber": 331,
    "params": [],
    "return": null
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "_$version",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$version",
    "access": "private",
    "description": "decide `version`.",
    "lineNumber": 341,
    "params": [],
    "return": null
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "_$todo",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$todo",
    "access": "private",
    "description": "decide `todo`.",
    "lineNumber": 351,
    "params": [],
    "return": null
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "_$ignore",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$ignore",
    "access": "private",
    "description": "decide `ignore`.",
    "lineNumber": 364,
    "params": [],
    "return": null
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "_$pseudoExport",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$pseudoExport",
    "access": "private",
    "description": "decide `pseudoExport`.",
    "lineNumber": 374,
    "params": [],
    "return": null
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "_$undocument",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$undocument",
    "access": "private",
    "description": "decide `undocument` with internal tag.",
    "lineNumber": 383,
    "params": [],
    "return": null
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "_$unknown",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$unknown",
    "access": "private",
    "description": "decide `unknown`.",
    "lineNumber": 393,
    "params": [],
    "return": null
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "_$param",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$param",
    "access": "private",
    "description": "decide `param`.",
    "lineNumber": 406,
    "params": [],
    "return": null
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "_$return",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$return",
    "access": "private",
    "description": "decide `return`.",
    "lineNumber": 425,
    "params": [],
    "return": null
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "_$property",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$property",
    "access": "private",
    "description": "decide `property`.",
    "lineNumber": 437,
    "params": [],
    "return": null
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "_$type",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$type",
    "access": "private",
    "description": "decide `type`.",
    "lineNumber": 452,
    "params": [],
    "return": null
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "_$abstract",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$abstract",
    "access": "private",
    "description": "decide `abstract`.",
    "lineNumber": 464,
    "params": [],
    "return": null
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "_$override",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$override",
    "access": "private",
    "description": "decide `override`.",
    "lineNumber": 474,
    "params": [],
    "return": null
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "_$throws",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$throws",
    "access": "private",
    "description": "decide `throws`.",
    "lineNumber": 484,
    "params": [],
    "return": null
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "_$emits",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$emits",
    "access": "private",
    "description": "decide `emits`.",
    "lineNumber": 502,
    "params": [],
    "return": null
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "_$listens",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$listens",
    "access": "private",
    "description": "decide `listens`.",
    "lineNumber": 520,
    "params": [],
    "return": null
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "_$decorator",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_$decorator",
    "access": "private",
    "description": "decide `decorator`.",
    "lineNumber": 538,
    "params": [],
    "return": null
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "_findAll",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_findAll",
    "access": "private",
    "description": "find all tags.",
    "lineNumber": 570,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Tag[]|null} found tags."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "names",
        "description": "tag names."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Tag[]",
        "null"
      ],
      "spread": false,
      "description": "found tags."
    }
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "_find",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_find",
    "access": "protected",
    "description": "find last tag.",
    "lineNumber": 589,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Tag|null} found tag."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "names",
        "description": "tag names."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Tag",
        "null"
      ],
      "spread": false,
      "description": "found tag."
    }
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "_findAllTagValues",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_findAllTagValues",
    "access": "private",
    "description": "find all tag values.",
    "lineNumber": 604,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*[]|null} found values."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "names",
        "description": "tag names."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*[]",
        "null"
      ],
      "spread": false,
      "description": "found values."
    }
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "_findTagValue",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_findTagValue",
    "access": "private",
    "description": "find ta value.",
    "lineNumber": 622,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*|null} found value."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "names",
        "description": "tag names."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*",
        "null"
      ],
      "spread": false,
      "description": "found value."
    }
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "_resolveLongname",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_resolveLongname",
    "access": "private",
    "description": "resolve long name.\nif the name relates import path, consider import path.",
    "lineNumber": 638,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} resolved name."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "identifier name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "resolved name."
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "_flattenMemberExpression",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_flattenMemberExpression",
    "access": "private",
    "description": "flatten member expression property name.\nif node structure is [foo [bar [baz [this] ] ] ], flatten is ``this.baz.bar.foo``",
    "lineNumber": 661,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} flatten property."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "target member expression node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "flatten property."
    }
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "_findClassLongname",
    "memberof": "src/Doc/AbstractDoc.js~AbstractDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AbstractDoc.js~AbstractDoc#_findClassLongname",
    "access": "private",
    "description": "find class in same file, import or external.",
    "lineNumber": 690,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} found class long name."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "target class name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "found class long name."
    }
  },
  {
    "__docId__": 105,
    "kind": "file",
    "name": "src/Doc/AssignmentDoc.js",
    "content": "import AbstractDoc from \"./AbstractDoc.js\";\n\n/**\n * Doc Class for Assignment AST node.\n */\nexport default class AssignmentDoc extends AbstractDoc {\n  /**\n   * specify ``variable`` to kind.\n   */\n  _$kind() {\n    super._$kind();\n    this._value.kind = \"variable\";\n  }\n\n  /**\n   * take out self name from self node.\n   */\n  _$name() {\n    super._$name();\n    const name = this._flattenMemberExpression(this._node.left).replace(/^this\\./, \"\");\n    this._value.name = name;\n  }\n\n  /**\n   * take out self memberof from file path.\n   */\n  _$memberof() {\n    super._$memberof();\n    this._value.memberof = this._pathResolver.filePath;\n  }\n}\n\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Doc/AssignmentDoc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 106,
    "kind": "class",
    "name": "AssignmentDoc",
    "memberof": "src/Doc/AssignmentDoc.js",
    "static": true,
    "longname": "src/Doc/AssignmentDoc.js~AssignmentDoc",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Doc/AssignmentDoc.js",
    "importStyle": "AssignmentDoc",
    "description": "Doc Class for Assignment AST node.",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/Doc/AbstractDoc.js~AbstractDoc"
    ]
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "_$kind",
    "memberof": "src/Doc/AssignmentDoc.js~AssignmentDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AssignmentDoc.js~AssignmentDoc#_$kind",
    "access": "private",
    "description": "specify ``variable`` to kind.",
    "lineNumber": 10,
    "params": [],
    "return": null
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "_$name",
    "memberof": "src/Doc/AssignmentDoc.js~AssignmentDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AssignmentDoc.js~AssignmentDoc#_$name",
    "access": "private",
    "description": "take out self name from self node.",
    "lineNumber": 18,
    "params": [],
    "return": null
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "_$memberof",
    "memberof": "src/Doc/AssignmentDoc.js~AssignmentDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/AssignmentDoc.js~AssignmentDoc#_$memberof",
    "access": "private",
    "description": "take out self memberof from file path.",
    "lineNumber": 27,
    "params": [],
    "return": null
  },
  {
    "__docId__": 110,
    "kind": "file",
    "name": "src/Doc/ClassDoc.js",
    "content": "import fs from \"fs-extra\";\nimport AbstractDoc from \"./AbstractDoc.js\";\nimport ParamParser from \"../Parser/ParamParser.js\";\nimport NamingUtil from \"../Util/NamingUtil.js\";\n\n/**\n * Doc Class from Class Declaration AST node.\n */\nexport default class ClassDoc extends AbstractDoc {\n  /**\n   * apply own tag.\n   * @private\n   */\n  _apply() {\n    super._apply();\n\n    this._$interface();\n    this._$extends();\n    this._$implements();\n  }\n\n  /** specify ``class`` to kind. */\n  _$kind() {\n    super._$kind();\n    this._value.kind = \"class\";\n  }\n\n  /** take out self name from self node */\n  _$name() {\n    super._$name();\n\n    if (this._node.id) {\n      this._value.name = this._node.id.name;\n    } else {\n      this._value.name = NamingUtil.filePathToName(this._pathResolver.filePath);\n    }\n  }\n\n  /** take out self memberof from file path. */\n  _$memberof() {\n    super._$memberof();\n    this._value.memberof = this._pathResolver.filePath;\n  }\n\n  /** for @interface */\n  _$interface() {\n    const tag = this._find([\"@interface\"]);\n    if (tag) {\n      this._value.interface = [\"\", \"true\", true].includes(tag.tagValue);\n    } else {\n      this._value.interface = false;\n    }\n  }\n\n  /** for @extends, does not need to use this tag. */\n  _$extends() {\n    const values = this._findAllTagValues([\"@extends\", \"@extend\"]);\n    if (values) {\n      this._value.extends = [];\n      for (const value of values) {\n        const {typeText} = ParamParser.parseParamValue(value, true, false, false);\n        this._value.extends.push(typeText);\n      }\n      return;\n    }\n\n    if (this._node.superClass) {\n      const node = this._node;\n      let longnames = [];\n      const targets = [];\n\n      if (node.superClass.type === \"CallExpression\") {\n        targets.push(node.superClass.callee, ...node.superClass.arguments);\n      } else {\n        targets.push(node.superClass);\n      }\n\n      for (const target of targets) {\n        /* eslint-disable default-case */\n        switch (target.type) {\n          case \"Identifier\":\n            longnames.push(this._resolveLongname(target.name));\n            break;\n          case \"MemberExpression\": {\n            const fullIdentifier = this._flattenMemberExpression(target);\n            const rootIdentifier = fullIdentifier.split(\".\")[0];\n            const rootLongname = this._resolveLongname(rootIdentifier);\n            const filePath = rootLongname.replace(/~.*/, \"\");\n            longnames.push(`${filePath}~${fullIdentifier}`);\n          }\n            break;\n        }\n      }\n\n      if (node.superClass.type === \"CallExpression\") {\n        // expression extends may have non-class, so filter only class by name rule.\n        longnames = longnames.filter((v)=> v.match(/^[A-Z]|^[$_][A-Z]/));\n\n        const filePath = this._pathResolver.fileFullPath;\n        const line = node.superClass.loc.start.line;\n        const start = node.superClass.loc.start.column;\n        const end = node.superClass.loc.end.column;\n        this._value.expressionExtends = this._readSelection(filePath, line, start, end);\n      }\n\n      if (longnames.length) this._value.extends = longnames;\n    }\n  }\n\n  /** for @implements */\n  _$implements() {\n    const values = this._findAllTagValues([\"@implements\", \"@implement\"]);\n    if (!values) return;\n\n    this._value.implements = [];\n    for (const value of values) {\n      const {typeText} = ParamParser.parseParamValue(value, true, false, false);\n      this._value.implements.push(typeText);\n    }\n  }\n\n  /**\n   * read selection text in file.\n   * @param {string} filePath - target file full path.\n   * @param {number} line - line number (one origin).\n   * @param {number} startColumn - start column number (one origin).\n   * @param {number} endColumn - end column number (one origin).\n   * @returns {string} selection text\n   * @private\n   */\n  _readSelection(filePath, line, startColumn, endColumn) {\n    const code = fs.readFileSync(filePath).toString();\n    const lines = code.split(\"\\n\");\n    const selectionLine = lines[line - 1];\n    const tmp = [];\n    for (let i = startColumn; i < endColumn; i++) {\n      tmp.push(selectionLine.charAt(i));\n    }\n    return tmp.join(\"\");\n  }\n}\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Doc/ClassDoc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 111,
    "kind": "class",
    "name": "ClassDoc",
    "memberof": "src/Doc/ClassDoc.js",
    "static": true,
    "longname": "src/Doc/ClassDoc.js~ClassDoc",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Doc/ClassDoc.js",
    "importStyle": "ClassDoc",
    "description": "Doc Class from Class Declaration AST node.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/Doc/AbstractDoc.js~AbstractDoc"
    ]
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "_apply",
    "memberof": "src/Doc/ClassDoc.js~ClassDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/ClassDoc.js~ClassDoc#_apply",
    "access": "private",
    "description": "apply own tag.",
    "lineNumber": 14,
    "params": [],
    "return": null
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "_$kind",
    "memberof": "src/Doc/ClassDoc.js~ClassDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/ClassDoc.js~ClassDoc#_$kind",
    "access": "private",
    "description": "specify ``class`` to kind.",
    "lineNumber": 23,
    "params": [],
    "return": null
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "_$name",
    "memberof": "src/Doc/ClassDoc.js~ClassDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/ClassDoc.js~ClassDoc#_$name",
    "access": "private",
    "description": "take out self name from self node",
    "lineNumber": 29,
    "params": [],
    "return": null
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "_$memberof",
    "memberof": "src/Doc/ClassDoc.js~ClassDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/ClassDoc.js~ClassDoc#_$memberof",
    "access": "private",
    "description": "take out self memberof from file path.",
    "lineNumber": 40,
    "params": [],
    "return": null
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "_$interface",
    "memberof": "src/Doc/ClassDoc.js~ClassDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/ClassDoc.js~ClassDoc#_$interface",
    "access": "private",
    "description": "for @interface",
    "lineNumber": 46,
    "params": [],
    "return": null
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "_$extends",
    "memberof": "src/Doc/ClassDoc.js~ClassDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/ClassDoc.js~ClassDoc#_$extends",
    "access": "private",
    "description": "for @extends, does not need to use this tag.",
    "lineNumber": 56,
    "params": [],
    "return": null
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "_$implements",
    "memberof": "src/Doc/ClassDoc.js~ClassDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/ClassDoc.js~ClassDoc#_$implements",
    "access": "private",
    "description": "for @implements",
    "lineNumber": 111,
    "params": [],
    "return": null
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "_readSelection",
    "memberof": "src/Doc/ClassDoc.js~ClassDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/ClassDoc.js~ClassDoc#_readSelection",
    "access": "private",
    "description": "read selection text in file.",
    "lineNumber": 131,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} selection text"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "target file full path."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "line",
        "description": "line number (one origin)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "startColumn",
        "description": "start column number (one origin)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "endColumn",
        "description": "end column number (one origin)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "selection text"
    }
  },
  {
    "__docId__": 120,
    "kind": "file",
    "name": "src/Doc/ClassPropertyDoc.js",
    "content": "import AbstractDoc from \"./AbstractDoc.js\";\nimport MethodDoc from \"./MethodDoc.js\";\n\n/**\n * Doc Class from ClassProperty AST node.\n */\nexport default class ClassPropertyDoc extends AbstractDoc {\n  /**\n   * apply own tag.\n   * @private\n   */\n  _apply() {\n    super._apply();\n\n    Reflect.deleteProperty(this._value, \"export\");\n    Reflect.deleteProperty(this._value, \"importPath\");\n    Reflect.deleteProperty(this._value, \"importStyle\");\n  }\n\n  /** specify ``member`` to kind. */\n  _$kind() {\n    super._$kind();\n    this._value.kind = \"member\";\n  }\n\n  /** take out self name from self node */\n  _$name() {\n    super._$name();\n    this._value.name = this._node.key.name;\n  }\n\n  /** borrow {@link MethodDoc#@_memberof} */\n  _$memberof() {\n    Reflect.apply(MethodDoc.prototype._$memberof, this, []);\n  }\n}\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Doc/ClassPropertyDoc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 121,
    "kind": "class",
    "name": "ClassPropertyDoc",
    "memberof": "src/Doc/ClassPropertyDoc.js",
    "static": true,
    "longname": "src/Doc/ClassPropertyDoc.js~ClassPropertyDoc",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Doc/ClassPropertyDoc.js",
    "importStyle": "ClassPropertyDoc",
    "description": "Doc Class from ClassProperty AST node.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/Doc/AbstractDoc.js~AbstractDoc"
    ]
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "_apply",
    "memberof": "src/Doc/ClassPropertyDoc.js~ClassPropertyDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/ClassPropertyDoc.js~ClassPropertyDoc#_apply",
    "access": "private",
    "description": "apply own tag.",
    "lineNumber": 12,
    "params": [],
    "return": null
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "_$kind",
    "memberof": "src/Doc/ClassPropertyDoc.js~ClassPropertyDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/ClassPropertyDoc.js~ClassPropertyDoc#_$kind",
    "access": "private",
    "description": "specify ``member`` to kind.",
    "lineNumber": 21,
    "params": [],
    "return": null
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "_$name",
    "memberof": "src/Doc/ClassPropertyDoc.js~ClassPropertyDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/ClassPropertyDoc.js~ClassPropertyDoc#_$name",
    "access": "private",
    "description": "take out self name from self node",
    "lineNumber": 27,
    "params": [],
    "return": null
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "_$memberof",
    "memberof": "src/Doc/ClassPropertyDoc.js~ClassPropertyDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/ClassPropertyDoc.js~ClassPropertyDoc#_$memberof",
    "access": "private",
    "description": "borrow {@link MethodDoc#@_memberof}",
    "lineNumber": 33,
    "params": [],
    "return": null
  },
  {
    "__docId__": 126,
    "kind": "file",
    "name": "src/Doc/ExternalDoc.js",
    "content": "import log from \"npmlog\";\nimport AbstractDoc from \"./AbstractDoc.js\";\nimport ParamParser from \"../Parser/ParamParser.js\";\n/**\n * Doc Class from virtual comment node of external.\n */\nexport default class ExternalDoc extends AbstractDoc {\n  /**\n   * apply own tag.\n   * @private\n   */\n  _apply() {\n    super._apply();\n\n    Reflect.deleteProperty(this._value, \"export\");\n    Reflect.deleteProperty(this._value, \"importPath\");\n    Reflect.deleteProperty(this._value, \"importStyle\");\n  }\n\n  /** specify ``external`` to kind. */\n  _$kind() {\n    super._$kind();\n    this._value.kind = \"external\";\n  }\n\n  /** take out self name from tag */\n  _$name() {\n    const value = this._findTagValue([\"@external\"]);\n    if (!value) {\n      log.warn(\"can not resolve name.\");\n    }\n\n    this._value.name = value;\n\n    const tags = this._findAll([\"@external\"]);\n    if (!tags) {\n      log.warn(\"can not resolve name.\");\n      return;\n    }\n\n    let name;\n    for (const tag of tags) {\n      const {typeText, paramDesc} = ParamParser.parseParamValue(tag.tagValue, true, false, true);\n      name = typeText;\n      this._value.externalLink = paramDesc;\n    }\n\n    this._value.name = name;\n  }\n\n  /** take out self memberof from file path. */\n  _$memberof() {\n    super._$memberof();\n    this._value.memberof = this._pathResolver.filePath;\n  }\n\n  /** specify name to longname */\n  _$longname() {\n    super._$longname();\n    if (this._value.longname) return;\n    this._value.longname = this._value.name;\n  }\n\n  /** avoid unknown tag */\n  _$external() {}\n}\n\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Doc/ExternalDoc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 127,
    "kind": "class",
    "name": "ExternalDoc",
    "memberof": "src/Doc/ExternalDoc.js",
    "static": true,
    "longname": "src/Doc/ExternalDoc.js~ExternalDoc",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Doc/ExternalDoc.js",
    "importStyle": "ExternalDoc",
    "description": "Doc Class from virtual comment node of external.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/Doc/AbstractDoc.js~AbstractDoc"
    ]
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "_apply",
    "memberof": "src/Doc/ExternalDoc.js~ExternalDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/ExternalDoc.js~ExternalDoc#_apply",
    "access": "private",
    "description": "apply own tag.",
    "lineNumber": 12,
    "params": [],
    "return": null
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "_$kind",
    "memberof": "src/Doc/ExternalDoc.js~ExternalDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/ExternalDoc.js~ExternalDoc#_$kind",
    "access": "private",
    "description": "specify ``external`` to kind.",
    "lineNumber": 21,
    "params": [],
    "return": null
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "_$name",
    "memberof": "src/Doc/ExternalDoc.js~ExternalDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/ExternalDoc.js~ExternalDoc#_$name",
    "access": "private",
    "description": "take out self name from tag",
    "lineNumber": 27,
    "params": [],
    "return": null
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "_$memberof",
    "memberof": "src/Doc/ExternalDoc.js~ExternalDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/ExternalDoc.js~ExternalDoc#_$memberof",
    "access": "private",
    "description": "take out self memberof from file path.",
    "lineNumber": 52,
    "params": [],
    "return": null
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "_$longname",
    "memberof": "src/Doc/ExternalDoc.js~ExternalDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/ExternalDoc.js~ExternalDoc#_$longname",
    "access": "private",
    "description": "specify name to longname",
    "lineNumber": 58,
    "params": [],
    "return": null
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "_$external",
    "memberof": "src/Doc/ExternalDoc.js~ExternalDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/ExternalDoc.js~ExternalDoc#_$external",
    "access": "private",
    "description": "avoid unknown tag",
    "lineNumber": 65,
    "params": [],
    "return": null
  },
  {
    "__docId__": 134,
    "kind": "file",
    "name": "src/Doc/FileDoc.js",
    "content": "import fs from \"fs\";\nimport AbstractDoc from \"./AbstractDoc.js\";\n\n/**\n * Doc Class from source file.\n */\nexport default class FileDoc extends AbstractDoc {\n  /**\n   * apply own tag.\n   * @private\n   */\n  _apply() {\n    super._apply();\n\n    Reflect.deleteProperty(this._value, \"export\");\n    Reflect.deleteProperty(this._value, \"importPath\");\n    Reflect.deleteProperty(this._value, \"importStyle\");\n  }\n\n  /** specify ``file`` to kind. */\n  _$kind() {\n    super._$kind();\n    this._value.kind = \"file\";\n  }\n\n  /** take out self name from file path */\n  _$name() {\n    super._$name();\n    this._value.name = this._pathResolver.filePath;\n  }\n\n  /** specify name to longname */\n  _$longname() {\n    this._value.longname = this._pathResolver.fileFullPath;\n  }\n\n  /** specify file content to value.content */\n  _$content() {\n    super._$content();\n\n    const filePath = this._pathResolver.fileFullPath;\n    const content = fs.readFileSync(filePath, {encode: \"utf8\"}).toString();\n    this._value.content = content;\n  }\n}\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Doc/FileDoc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 135,
    "kind": "class",
    "name": "FileDoc",
    "memberof": "src/Doc/FileDoc.js",
    "static": true,
    "longname": "src/Doc/FileDoc.js~FileDoc",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Doc/FileDoc.js",
    "importStyle": "FileDoc",
    "description": "Doc Class from source file.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/Doc/AbstractDoc.js~AbstractDoc"
    ]
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "_apply",
    "memberof": "src/Doc/FileDoc.js~FileDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/FileDoc.js~FileDoc#_apply",
    "access": "private",
    "description": "apply own tag.",
    "lineNumber": 12,
    "params": [],
    "return": null
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "_$kind",
    "memberof": "src/Doc/FileDoc.js~FileDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/FileDoc.js~FileDoc#_$kind",
    "access": "private",
    "description": "specify ``file`` to kind.",
    "lineNumber": 21,
    "params": [],
    "return": null
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "_$name",
    "memberof": "src/Doc/FileDoc.js~FileDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/FileDoc.js~FileDoc#_$name",
    "access": "private",
    "description": "take out self name from file path",
    "lineNumber": 27,
    "params": [],
    "return": null
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "_$longname",
    "memberof": "src/Doc/FileDoc.js~FileDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/FileDoc.js~FileDoc#_$longname",
    "access": "private",
    "description": "specify name to longname",
    "lineNumber": 33,
    "params": [],
    "return": null
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "_$content",
    "memberof": "src/Doc/FileDoc.js~FileDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/FileDoc.js~FileDoc#_$content",
    "access": "private",
    "description": "specify file content to value.content",
    "lineNumber": 38,
    "params": [],
    "return": null
  },
  {
    "__docId__": 141,
    "kind": "file",
    "name": "src/Doc/FunctionDoc.js",
    "content": "import babelGenerator from \"babel-generator\";\nimport AbstractDoc from \"./AbstractDoc.js\";\nimport NamingUtil from \"../Util/NamingUtil.js\";\n\n/**\n * Doc Class from Function declaration AST node.\n */\nexport default class FunctionDoc extends AbstractDoc {\n  /** specify ``function`` to kind. */\n  _$kind() {\n    super._$kind();\n    this._value.kind = \"function\";\n  }\n\n  /** take out self name from self node */\n  _$name() {\n    super._$name();\n\n    if (this._node.id) {\n      if (this._node.id.type === \"MemberExpression\") {\n        // e.g. foo[bar.baz] = function bal(){}\n        const expression = babelGenerator(this._node.id).code;\n        this._value.name = `[${expression}]`;\n      } else {\n        this._value.name = this._node.id.name;\n      }\n    } else {\n      this._value.name = NamingUtil.filePathToName(this._pathResolver.filePath);\n    }\n  }\n\n  /** take out self name from file path */\n  _$memberof() {\n    super._$memberof();\n    this._value.memberof = this._pathResolver.filePath;\n  }\n\n  /** check generator property in self node */\n  _$generator() {\n    super._$generator();\n    this._value.generator = this._node.generator;\n  }\n\n  /**\n   * use async property of self node.\n   */\n  _$async() {\n    super._$async();\n    this._value.async = this._node.async;\n  }\n}\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Doc/FunctionDoc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 142,
    "kind": "class",
    "name": "FunctionDoc",
    "memberof": "src/Doc/FunctionDoc.js",
    "static": true,
    "longname": "src/Doc/FunctionDoc.js~FunctionDoc",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Doc/FunctionDoc.js",
    "importStyle": "FunctionDoc",
    "description": "Doc Class from Function declaration AST node.",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "src/Doc/AbstractDoc.js~AbstractDoc"
    ]
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "_$kind",
    "memberof": "src/Doc/FunctionDoc.js~FunctionDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/FunctionDoc.js~FunctionDoc#_$kind",
    "access": "private",
    "description": "specify ``function`` to kind.",
    "lineNumber": 10,
    "params": [],
    "return": null
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "_$name",
    "memberof": "src/Doc/FunctionDoc.js~FunctionDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/FunctionDoc.js~FunctionDoc#_$name",
    "access": "private",
    "description": "take out self name from self node",
    "lineNumber": 16,
    "params": [],
    "return": null
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "_$memberof",
    "memberof": "src/Doc/FunctionDoc.js~FunctionDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/FunctionDoc.js~FunctionDoc#_$memberof",
    "access": "private",
    "description": "take out self name from file path",
    "lineNumber": 33,
    "params": [],
    "return": null
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "_$generator",
    "memberof": "src/Doc/FunctionDoc.js~FunctionDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/FunctionDoc.js~FunctionDoc#_$generator",
    "access": "private",
    "description": "check generator property in self node",
    "lineNumber": 39,
    "params": [],
    "return": null
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "_$async",
    "memberof": "src/Doc/FunctionDoc.js~FunctionDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/FunctionDoc.js~FunctionDoc#_$async",
    "access": "private",
    "description": "use async property of self node.",
    "lineNumber": 47,
    "params": [],
    "return": null
  },
  {
    "__docId__": 148,
    "kind": "file",
    "name": "src/Doc/MemberDoc.js",
    "content": "import AbstractDoc from \"./AbstractDoc.js\";\nimport MethodDoc from \"./MethodDoc.js\";\nimport babelGenerator from \"babel-generator\";\n\n/**\n * Doc Class from Member Expression AST node.\n */\nexport default class MemberDoc extends AbstractDoc {\n  /**\n   * apply own tag.\n   * @private\n   */\n  _apply() {\n    super._apply();\n\n    Reflect.deleteProperty(this._value, \"export\");\n    Reflect.deleteProperty(this._value, \"importPath\");\n    Reflect.deleteProperty(this._value, \"importStyle\");\n  }\n\n  /** specify ``member`` to kind. */\n  _$kind() {\n    super._$kind();\n    this._value.kind = \"member\";\n  }\n\n  /** use static property in class */\n  _$static() {\n    let parent = this._node.parent;\n    while (parent) {\n      if (parent.type === \"ClassMethod\") {\n        this._value.static = parent.static;\n        break;\n      }\n      parent = parent.parent;\n    }\n  }\n\n  /** take out self name from self node */\n  _$name() {\n    let name;\n    if (this._node.left.computed) {\n      const expression = babelGenerator(this._node.left.property).code.replace(/^this/, \"\");\n      name = `[${expression}]`;\n    } else {\n      name = this._flattenMemberExpression(this._node.left).replace(/^this\\./, \"\");\n    }\n    this._value.name = name;\n  }\n\n  /** borrow {@link MethodDoc#@_memberof} */\n  _$memberof() {\n    Reflect.apply(MethodDoc.prototype._$memberof, this, []);\n  }\n}\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Doc/MemberDoc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 149,
    "kind": "class",
    "name": "MemberDoc",
    "memberof": "src/Doc/MemberDoc.js",
    "static": true,
    "longname": "src/Doc/MemberDoc.js~MemberDoc",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Doc/MemberDoc.js",
    "importStyle": "MemberDoc",
    "description": "Doc Class from Member Expression AST node.",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "src/Doc/AbstractDoc.js~AbstractDoc"
    ]
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "_apply",
    "memberof": "src/Doc/MemberDoc.js~MemberDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/MemberDoc.js~MemberDoc#_apply",
    "access": "private",
    "description": "apply own tag.",
    "lineNumber": 13,
    "params": [],
    "return": null
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "_$kind",
    "memberof": "src/Doc/MemberDoc.js~MemberDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/MemberDoc.js~MemberDoc#_$kind",
    "access": "private",
    "description": "specify ``member`` to kind.",
    "lineNumber": 22,
    "params": [],
    "return": null
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "_$static",
    "memberof": "src/Doc/MemberDoc.js~MemberDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/MemberDoc.js~MemberDoc#_$static",
    "access": "private",
    "description": "use static property in class",
    "lineNumber": 28,
    "params": [],
    "return": null
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "_$name",
    "memberof": "src/Doc/MemberDoc.js~MemberDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/MemberDoc.js~MemberDoc#_$name",
    "access": "private",
    "description": "take out self name from self node",
    "lineNumber": 40,
    "params": [],
    "return": null
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "_$memberof",
    "memberof": "src/Doc/MemberDoc.js~MemberDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/MemberDoc.js~MemberDoc#_$memberof",
    "access": "private",
    "description": "borrow {@link MethodDoc#@_memberof}",
    "lineNumber": 52,
    "params": [],
    "return": null
  },
  {
    "__docId__": 155,
    "kind": "file",
    "name": "src/Doc/MethodDoc.js",
    "content": "import AbstractDoc from \"./AbstractDoc.js\";\nimport babelGenerator from \"babel-generator\";\n\n/**\n * Doc Class from Method Definition AST node.\n */\nexport default class MethodDoc extends AbstractDoc {\n  /**\n   * apply own tag.\n   * @private\n   */\n  _apply() {\n    super._apply();\n\n    Reflect.deleteProperty(this._value, \"export\");\n    Reflect.deleteProperty(this._value, \"importPath\");\n    Reflect.deleteProperty(this._value, \"importStyle\");\n  }\n\n  /** use kind property of self node. */\n  _$kind() {\n    super._$kind();\n    this._value.kind = this._node.kind;\n  }\n\n  /** take out self name from self node */\n  _$name() {\n    super._$name();\n\n    if (this._node.computed) {\n      const expression = babelGenerator(this._node.key).code;\n      this._value.name = `[${expression}]`;\n    } else {\n      this._value.name = this._node.key.name;\n    }\n  }\n\n  /** take out memberof from parent class node */\n  _$memberof() {\n    super._$memberof();\n\n    let memberof;\n    let parent = this._node.parent;\n    while (parent) {\n      if (parent.type === \"ClassDeclaration\" || parent.type === \"ClassExpression\") {\n        memberof = `${this._pathResolver.filePath}~${parent.doc.value.name}`;\n        this._value.memberof = memberof;\n        return;\n      }\n      parent = parent.parent;\n    }\n  }\n\n  /** use generator property of self node. */\n  _$generator() {\n    super._$generator();\n\n    this._value.generator = this._node.generator;\n  }\n\n  /**\n   * use async property of self node.\n   */\n  _$async() {\n    super._$async();\n\n    this._value.async = this._node.async;\n  }\n}\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Doc/MethodDoc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 156,
    "kind": "class",
    "name": "MethodDoc",
    "memberof": "src/Doc/MethodDoc.js",
    "static": true,
    "longname": "src/Doc/MethodDoc.js~MethodDoc",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Doc/MethodDoc.js",
    "importStyle": "MethodDoc",
    "description": "Doc Class from Method Definition AST node.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/Doc/AbstractDoc.js~AbstractDoc"
    ]
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "_apply",
    "memberof": "src/Doc/MethodDoc.js~MethodDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/MethodDoc.js~MethodDoc#_apply",
    "access": "private",
    "description": "apply own tag.",
    "lineNumber": 12,
    "params": [],
    "return": null
  },
  {
    "__docId__": 158,
    "kind": "method",
    "name": "_$kind",
    "memberof": "src/Doc/MethodDoc.js~MethodDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/MethodDoc.js~MethodDoc#_$kind",
    "access": "private",
    "description": "use kind property of self node.",
    "lineNumber": 21,
    "params": [],
    "return": null
  },
  {
    "__docId__": 159,
    "kind": "method",
    "name": "_$name",
    "memberof": "src/Doc/MethodDoc.js~MethodDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/MethodDoc.js~MethodDoc#_$name",
    "access": "private",
    "description": "take out self name from self node",
    "lineNumber": 27,
    "params": [],
    "return": null
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "_$memberof",
    "memberof": "src/Doc/MethodDoc.js~MethodDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/MethodDoc.js~MethodDoc#_$memberof",
    "access": "private",
    "description": "take out memberof from parent class node",
    "lineNumber": 39,
    "params": [],
    "return": null
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "_$generator",
    "memberof": "src/Doc/MethodDoc.js~MethodDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/MethodDoc.js~MethodDoc#_$generator",
    "access": "private",
    "description": "use generator property of self node.",
    "lineNumber": 55,
    "params": [],
    "return": null
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "_$async",
    "memberof": "src/Doc/MethodDoc.js~MethodDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/MethodDoc.js~MethodDoc#_$async",
    "access": "private",
    "description": "use async property of self node.",
    "lineNumber": 64,
    "params": [],
    "return": null
  },
  {
    "__docId__": 163,
    "kind": "file",
    "name": "src/Doc/TypedefDoc.js",
    "content": "import log from \"npmlog\";\nimport AbstractDoc from \"./AbstractDoc.js\";\nimport ParamParser from \"../Parser/ParamParser.js\";\n\n/**\n * Doc class for virtual comment node of typedef.\n */\nexport default class TypedefDoc extends AbstractDoc {\n  /**\n   * apply own tag.\n   * @private\n   */\n  _apply() {\n    super._apply();\n\n    this._$typedef();\n\n    Reflect.deleteProperty(this._value, \"export\");\n    Reflect.deleteProperty(this._value, \"importPath\");\n    Reflect.deleteProperty(this._value, \"importStyle\");\n  }\n\n  /** specify ``typedef`` to kind. */\n  _$kind() {\n    super._$kind();\n    this._value.kind = \"typedef\";\n  }\n\n  /** set name by using tag. */\n  _$name() {\n    const tags = this._findAll([\"@typedef\"]);\n    if (!tags) {\n      log.warn(\"can not resolve name.\");\n      return;\n    }\n\n    let name;\n    for (const tag of tags) {\n      const {paramName} = ParamParser.parseParamValue(tag.tagValue, true, true, false);\n      name = paramName;\n    }\n\n    this._value.name = name;\n  }\n\n  /** set memberof by using file path. */\n  _$memberof() {\n    super._$memberof();\n\n    let memberof;\n    let parent = this._node.parent;\n    while (parent) {\n      if (parent.type === \"ClassDeclaration\") {\n        memberof = `${this._pathResolver.filePath}~${parent.id.name}`;\n        this._value.memberof = memberof;\n        return;\n      }\n      parent = parent.parent;\n    }\n\n    this._value.memberof = this._pathResolver.filePath;\n  }\n\n  /** for @typedef */\n  _$typedef() {\n    const value = this._findTagValue([\"@typedef\"]);\n    if (!value) return;\n\n    const {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value, true, true, false);\n    const result = ParamParser.parseParam(typeText, paramName, paramDesc);\n\n    log.verbose(\"@typedef\", result);\n\n    Reflect.deleteProperty(result, \"description\");\n    Reflect.deleteProperty(result, \"nullable\");\n    Reflect.deleteProperty(result, \"spread\");\n\n    this._value.type = result;\n  }\n}\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Doc/TypedefDoc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 164,
    "kind": "class",
    "name": "TypedefDoc",
    "memberof": "src/Doc/TypedefDoc.js",
    "static": true,
    "longname": "src/Doc/TypedefDoc.js~TypedefDoc",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Doc/TypedefDoc.js",
    "importStyle": "TypedefDoc",
    "description": "Doc class for virtual comment node of typedef.",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "src/Doc/AbstractDoc.js~AbstractDoc"
    ]
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "_apply",
    "memberof": "src/Doc/TypedefDoc.js~TypedefDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/TypedefDoc.js~TypedefDoc#_apply",
    "access": "private",
    "description": "apply own tag.",
    "lineNumber": 13,
    "params": [],
    "return": null
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "_$kind",
    "memberof": "src/Doc/TypedefDoc.js~TypedefDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/TypedefDoc.js~TypedefDoc#_$kind",
    "access": "private",
    "description": "specify ``typedef`` to kind.",
    "lineNumber": 24,
    "params": [],
    "return": null
  },
  {
    "__docId__": 167,
    "kind": "method",
    "name": "_$name",
    "memberof": "src/Doc/TypedefDoc.js~TypedefDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/TypedefDoc.js~TypedefDoc#_$name",
    "access": "private",
    "description": "set name by using tag.",
    "lineNumber": 30,
    "params": [],
    "return": null
  },
  {
    "__docId__": 168,
    "kind": "method",
    "name": "_$memberof",
    "memberof": "src/Doc/TypedefDoc.js~TypedefDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/TypedefDoc.js~TypedefDoc#_$memberof",
    "access": "private",
    "description": "set memberof by using file path.",
    "lineNumber": 47,
    "params": [],
    "return": null
  },
  {
    "__docId__": 169,
    "kind": "method",
    "name": "_$typedef",
    "memberof": "src/Doc/TypedefDoc.js~TypedefDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/TypedefDoc.js~TypedefDoc#_$typedef",
    "access": "private",
    "description": "for @typedef",
    "lineNumber": 65,
    "params": [],
    "return": null
  },
  {
    "__docId__": 170,
    "kind": "file",
    "name": "src/Doc/VariableDoc.js",
    "content": "import AbstractDoc from \"./AbstractDoc.js\";\n\n/**\n * Doc Class from Variable Declaration AST node.\n */\nexport default class VariableDoc extends AbstractDoc {\n  /** specify ``variable`` to kind. */\n  _$kind() {\n    super._$kind();\n    this._value.kind = \"variable\";\n  }\n\n  /** set name by using self node. */\n  _$name() {\n    super._$name();\n\n    const type = this._node.declarations[0].id.type;\n    switch (type) {\n      case \"Identifier\":\n        this._value.name = this._node.declarations[0].id.name;\n        break;\n      case \"ObjectPattern\":\n        // TODO: optimize for multi variables.\n        // e.g. export const {a, b} = obj\n        this._value.name = this._node.declarations[0].id.properties[0].key.name;\n        break;\n      case \"ArrayPattern\":\n        // TODO: optimize for multi variables.\n        // e.g. export cont [a, b] = arr\n        this._value.name = this._node.declarations[0].id.elements.find(v => v).name;\n        break;\n      default:\n        throw new Error(`unknown declarations type: ${type}`);\n    }\n  }\n\n  /** set memberof by using file path. */\n  _$memberof() {\n    super._$memberof();\n    this._value.memberof = this._pathResolver.filePath;\n  }\n}\n\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Doc/VariableDoc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 171,
    "kind": "class",
    "name": "VariableDoc",
    "memberof": "src/Doc/VariableDoc.js",
    "static": true,
    "longname": "src/Doc/VariableDoc.js~VariableDoc",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Doc/VariableDoc.js",
    "importStyle": "VariableDoc",
    "description": "Doc Class from Variable Declaration AST node.",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/Doc/AbstractDoc.js~AbstractDoc"
    ]
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "_$kind",
    "memberof": "src/Doc/VariableDoc.js~VariableDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/VariableDoc.js~VariableDoc#_$kind",
    "access": "private",
    "description": "specify ``variable`` to kind.",
    "lineNumber": 8,
    "params": [],
    "return": null
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "_$name",
    "memberof": "src/Doc/VariableDoc.js~VariableDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/VariableDoc.js~VariableDoc#_$name",
    "access": "private",
    "description": "set name by using self node.",
    "lineNumber": 14,
    "params": [],
    "return": null
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "_$memberof",
    "memberof": "src/Doc/VariableDoc.js~VariableDoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Doc/VariableDoc.js~VariableDoc#_$memberof",
    "access": "private",
    "description": "set memberof by using file path.",
    "lineNumber": 38,
    "params": [],
    "return": null
  },
  {
    "__docId__": 175,
    "kind": "file",
    "name": "src/ESDoc.js",
    "content": "import fs from \"fs-extra\";\nimport path from \"path\";\nimport assert from \"assert\";\nimport ASTUtil from \"./Util/ASTUtil.js\";\nimport ESParser from \"./Parser/ESParser\";\nimport PathResolver from \"./Util/PathResolver.js\";\nimport DocFactory from \"./Factory/DocFactory.js\";\nimport InvalidCodeLogger from \"./Util/InvalidCodeLogger.js\";\nimport Plugin from \"./Plugin/Plugin.js\";\nimport {Transform} from \"stream\";\nimport json from \"big-json\";\nimport mkdirp from \"mkdirp\";\nimport log from \"npmlog\";\n\n/**\n * API Documentation Generator.\n *\n * @example\n * let config = {source: \"./src\", destination: \"./esdoc2\"};\n * esdoc2.generate(config, (results, config)=>{\n *   console.log(results);\n * });\n */\nexport default class ESDoc {\n  /**\n   * Generate documentation.\n   * @param {ESDocConfig} config - config for generation.\n   */\n  static generate(config) {\n    return new Promise((resolve) => {\n      assert(config.source);\n      assert(config.destination);\n\n      this._checkOldConfig(config);\n\n      Plugin.init(config.plugins);\n      Plugin.onStart();\n      config = Plugin.onHandleConfig(config);\n\n      this._setDefaultConfig(config);\n\n      const includes = config.includes.map((v) => new RegExp(v));\n      const excludes = config.excludes.map((v) => new RegExp(v));\n\n      let packageName = null;\n      let mainFilePath = null;\n      if (config.package) {\n        try {\n          const packageJSON = fs.readFileSync(config.package, {encode: \"utf8\"});\n          const packageConfig = JSON.parse(packageJSON);\n          packageName = packageConfig.name;\n          mainFilePath = packageConfig.main;\n        } catch (e) {\n        // ignore\n        }\n      }\n\n      let results = [];\n      const sourceDirPath = path.resolve(config.source);\n      const onWriteFinish = () => {\n        log.info(\"esdoc2\", \"finished generating files\");\n\n        // publish\n        this._publish(config);\n\n        Plugin.onComplete();\n\n        this._memUsage();\n        resolve(true);\n      };\n\n      const fatalError = err => {\n        log.error(err);\n        process.exit(1);\n      };\n\n      const stringifyWriteTransform = new Transform({\n        writableObjectMode: true,\n        readableObjectMode: true,\n        transform: function(chunk, encoding, transformCallback) {\n          const fullPath = path.resolve(config.destination, `ast/${chunk.filePath}.json`);\n          mkdirp(fullPath.split(\"/\").slice(0, -1).join(\"/\")).catch((err) => {\n            if (err) fatalError(err);\n            log.verbose(\"transform\", fullPath);\n            const fileWriteStream = fs.createWriteStream(fullPath);\n            fileWriteStream.on(\"error\", fatalError);\n            fileWriteStream.on(\"finish\", () => log.verbose(\"write\", fullPath));\n            fileWriteStream.on(\"finish\", transformCallback);\n\n            const stringifyStream = json.createStringifyStream({body: chunk.ast});\n            stringifyStream.on(\"error\", fatalError);\n            stringifyStream.on(\"end\", fileWriteStream.end);\n            stringifyStream.on(\"end\", () => log.verbose(\"stringified\", fullPath));\n            stringifyStream.pipe(fileWriteStream);\n          });\n        }\n      });\n\n      stringifyWriteTransform.on(\"finish\", onWriteFinish);\n      stringifyWriteTransform.on(\"error\", fatalError);\n\n      this._walk(config.source, (filePath) => {\n        const relativeFilePath = path.relative(sourceDirPath, filePath);\n        let match = false;\n        for (const reg of includes) {\n          if (relativeFilePath.match(reg)) {\n            match = true;\n            break;\n          }\n        }\n        if (!match) return;\n\n        for (const reg of excludes) {\n          if (relativeFilePath.match(reg)) return;\n        }\n\n        log.info(\"parse\", filePath);\n        const temp = this._traverse(config.source, filePath, packageName, mainFilePath);\n        if (!temp) return;\n        results.push(...temp.results);\n        stringifyWriteTransform.write({filePath: `source${path.sep}${relativeFilePath}`, ast: temp.ast});\n      });\n\n      stringifyWriteTransform.end();\n\n      // config.index\n      if (config.index) {\n        results.push(this._generateForIndex(config));\n      }\n\n      // config.package\n      if (config.package) {\n        results.push(this._generateForPackageJSON(config));\n      }\n\n      results = this._resolveDuplication(results);\n\n      results = Plugin.onHandleDocs(results);\n\n      // index.json\n      {\n        const dumpPath = path.resolve(config.destination, \"index.json\");\n        fs.outputFileSync(dumpPath, JSON.stringify(results, null, 2));\n      }\n    });\n  }\n\n  /**\n   * check esdoc2 config. and if it is old, exit with warning message.\n   * @param {ESDocConfig} config - check config\n   * @private\n   */\n  static _checkOldConfig(config) {\n    let exit = false;\n\n    const keys = [\n      [\"access\", \"esdoc2-standard-plugin\"],\n      [\"autoPrivate\", \"esdoc2-standard-plugin\"],\n      [\"unexportIdentifier\", \"esdoc2-standard-plugin\"],\n      [\"undocumentIdentifier\", \"esdoc2-standard-plugin\"],\n      [\"builtinExternal\", \"esdoc2-standard-plugin\"],\n      [\"coverage\", \"esdoc2-standard-plugin\"],\n      [\"test\", \"esdoc2-standard-plugin\"],\n      [\"title\", \"esdoc2-standard-plugin\"],\n      [\"manual\", \"esdoc2-standard-plugin\"],\n      [\"lint\", \"esdoc2-standard-plugin\"],\n      [\"includeSource\", \"esdoc2-exclude-source-plugin\"],\n      [\"styles\", \"esdoc2-inject-style-plugin\"],\n      [\"scripts\", \"esdoc2-inject-script-plugin\"],\n      [\"experimentalProposal\", \"esdoc2-ecmascript-proposal-plugin\"]\n    ];\n\n    for (const [key, plugin] of keys) {\n      if (key in config) {\n        console.error(`\u001b[31merror: config.${key} is invalid. Please use ${plugin}. how to migration: https://esdoc2.org/manual/migration.html\u001b[0m`);\n        exit = true;\n      }\n    }\n\n    if (exit) process.exit(1);\n  }\n\n  /**\n   * set default config to specified config.\n   * @param {ESDocConfig} config - specified config.\n   * @private\n   */\n  static _setDefaultConfig(config) {\n    if (!config.includes) config.includes = [\"\\\\.js$\"];\n\n    if (!config.excludes) config.excludes = [\"\\\\.config\\\\.js$\", \"\\\\.test\\\\.js$\"];\n\n    if (!config.index) config.index = \"./README.md\";\n\n    if (!config.package) config.package = \"./package.json\";\n  }\n\n  /**\n   * walk recursive in directory.\n   * @param {string} dirPath - target directory path.\n   * @param {function(entryPath: string)} callback - callback for find file.\n   * @private\n   */\n  static _walk(dirPath, callback) {\n    const entries = fs.readdirSync(dirPath);\n\n    for (const entry of entries) {\n      const entryPath = path.resolve(dirPath, entry);\n      const stat = fs.statSync(entryPath);\n\n      if (stat.isFile()) {\n        callback(entryPath);\n      } else if (stat.isDirectory()) {\n        this._walk(entryPath, callback);\n      }\n    }\n  }\n\n  /**\n   * traverse doc comment in JavaScript file.\n   * @param {string} inDirPath - root directory path.\n   * @param {string} filePath - target JavaScript file path.\n   * @param {string} [packageName] - npm package name of target.\n   * @param {string} [mainFilePath] - npm main file path of target.\n   * @returns {Object} - return document that is traversed.\n   * @property {DocObject[]} results - this is contained JavaScript file.\n   * @property {AST} ast - this is AST of JavaScript file.\n   * @private\n   */\n  static _traverse(inDirPath, filePath, packageName, mainFilePath) {\n    log.verbose(`parsing: ${filePath}`);\n    let ast;\n    try {\n      ast = ESParser.parse(filePath);\n    } catch (e) {\n      InvalidCodeLogger.showFile(filePath, e);\n      return null;\n    }\n\n    const pathResolver = new PathResolver(inDirPath, filePath, packageName, mainFilePath);\n    const factory = new DocFactory(ast, pathResolver);\n\n    ASTUtil.traverse(ast, (node, parent) => {\n      try {\n        factory.push(node, parent);\n      } catch (e) {\n        InvalidCodeLogger.show(filePath, node);\n        throw e;\n      }\n    });\n\n    return {results: factory.results, ast: ast};\n  }\n\n  /**\n   * generate index doc\n   * @param {ESDocConfig} config\n   * @returns {Tag}\n   * @private\n   */\n  static _generateForIndex(config) {\n    const indexContent = fs.readFileSync(config.index, {encode: \"utf8\"}).toString();\n    const tag = {\n      kind: \"index\",\n      content: indexContent,\n      longname: path.resolve(config.index),\n      name: config.index,\n      static: true,\n      access: \"public\"\n    };\n\n    return tag;\n  }\n\n  /**\n   * generate package doc\n   * @param {ESDocConfig} config\n   * @returns {Tag}\n   * @private\n   */\n  static _generateForPackageJSON(config) {\n    let packageJSON = \"\";\n    let packagePath = \"\";\n    try {\n      packageJSON = fs.readFileSync(config.package, {encoding: \"utf-8\"});\n      packagePath = path.resolve(config.package);\n    } catch (e) {\n      // ignore\n    }\n\n    const tag = {\n      kind: \"packageJSON\",\n      content: packageJSON,\n      longname: packagePath,\n      name: path.basename(packagePath),\n      static: true,\n      access: \"public\"\n    };\n\n    return tag;\n  }\n\n  /**\n   * resolve duplication docs\n   * @param {Tag[]} docs\n   * @returns {Tag[]}\n   * @private\n   */\n  static _resolveDuplication(docs) {\n    const memberDocs = docs.filter((doc) => doc.kind === \"member\");\n    const removeIds = [];\n\n    for (const memberDoc of memberDocs) {\n      // member duplicate with getter/setter/method.\n      // when it, remove member.\n      // getter/setter/method are high priority.\n      const sameLongnameDoc = docs.find((doc) => doc.longname === memberDoc.longname && doc.kind !== \"member\");\n      if (sameLongnameDoc) {\n        removeIds.push(memberDoc.__docId__);\n        continue;\n      }\n\n      const dup = docs.filter((doc) => doc.longname === memberDoc.longname && doc.kind === \"member\");\n      if (dup.length > 1) {\n        const ids = dup.map(v => v.__docId__);\n        ids.sort((a, b) => {\n          return a < b ? -1 : 1;\n        });\n        ids.shift();\n        removeIds.push(...ids);\n      }\n    }\n\n    return docs.filter((doc) => !removeIds.includes(doc.__docId__));\n  }\n\n  /**\n   * publish content\n   * @param {ESDocConfig} config\n   * @private\n   */\n  static _publish(config) {\n    try {\n      const write = (filePath, content, option) => {\n        const _filePath = path.resolve(config.destination, filePath);\n        content = Plugin.onHandleContent(content, _filePath);\n\n        log.info(\"write\", _filePath);\n        fs.outputFileSync(_filePath, content, option);\n      };\n\n      const copy = (srcPath, destPath) => {\n        const _destPath = path.resolve(config.destination, destPath);\n        log.info(\"copy\", _destPath);\n        fs.copySync(srcPath, _destPath);\n      };\n\n      const read = (filePath) => {\n        const _filePath = path.resolve(config.destination, filePath);\n        return fs.readFileSync(_filePath).toString();\n      };\n\n      Plugin.onPublish(write, copy, read);\n    } catch (e) {\n      InvalidCodeLogger.showError(e);\n      process.exit(1);\n    }\n  }\n\n  /**\n   * show memory usage stat\n   * @return {undefined} no return\n   */\n  static _memUsage() {\n    const used = process.memoryUsage();\n    Object.keys(used).forEach(key => {\n      log.verbose(`${key} ${Math.round(used[key] / 1024 / 1024 * 100) / 100} MB`);\n    });\n  }\n}\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/ESDoc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 176,
    "kind": "class",
    "name": "ESDoc",
    "memberof": "src/ESDoc.js",
    "static": true,
    "longname": "src/ESDoc.js~ESDoc",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/ESDoc.js",
    "importStyle": "ESDoc",
    "description": "API Documentation Generator.",
    "examples": [
      "let config = {source: \"./src\", destination: \"./esdoc2\"};\nesdoc2.generate(config, (results, config)=>{\n  console.log(results);\n});"
    ],
    "lineNumber": 24,
    "interface": false
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "generate",
    "memberof": "src/ESDoc.js~ESDoc",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ESDoc.js~ESDoc.generate",
    "access": "public",
    "description": "Generate documentation.",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "ESDocConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "config for generation."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "_checkOldConfig",
    "memberof": "src/ESDoc.js~ESDoc",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ESDoc.js~ESDoc._checkOldConfig",
    "access": "private",
    "description": "check esdoc2 config. and if it is old, exit with warning message.",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "ESDocConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "check config"
      }
    ],
    "return": null
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "_setDefaultConfig",
    "memberof": "src/ESDoc.js~ESDoc",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ESDoc.js~ESDoc._setDefaultConfig",
    "access": "private",
    "description": "set default config to specified config.",
    "lineNumber": 188,
    "params": [
      {
        "nullable": null,
        "types": [
          "ESDocConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "specified config."
      }
    ],
    "return": null
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "_walk",
    "memberof": "src/ESDoc.js~ESDoc",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ESDoc.js~ESDoc._walk",
    "access": "private",
    "description": "walk recursive in directory.",
    "lineNumber": 204,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "dirPath",
        "description": "target directory path."
      },
      {
        "nullable": null,
        "types": [
          "function(entryPath: string)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "callback for find file."
      }
    ],
    "return": null
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "_traverse",
    "memberof": "src/ESDoc.js~ESDoc",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ESDoc.js~ESDoc._traverse",
    "access": "private",
    "description": "traverse doc comment in JavaScript file.",
    "lineNumber": 230,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} - return document that is traversed."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "inDirPath",
        "description": "root directory path."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "target JavaScript file path."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "packageName",
        "description": "npm package name of target."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "mainFilePath",
        "description": "npm main file path of target."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "DocObject[]"
        ],
        "spread": false,
        "optional": false,
        "name": "results",
        "description": "this is contained JavaScript file."
      },
      {
        "nullable": null,
        "types": [
          "AST"
        ],
        "spread": false,
        "optional": false,
        "name": "ast",
        "description": "this is AST of JavaScript file."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "return document that is traversed."
    }
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "_generateForIndex",
    "memberof": "src/ESDoc.js~ESDoc",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ESDoc.js~ESDoc._generateForIndex",
    "access": "private",
    "description": "generate index doc",
    "lineNumber": 261,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Tag}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ESDocConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Tag"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 183,
    "kind": "method",
    "name": "_generateForPackageJSON",
    "memberof": "src/ESDoc.js~ESDoc",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ESDoc.js~ESDoc._generateForPackageJSON",
    "access": "private",
    "description": "generate package doc",
    "lineNumber": 281,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Tag}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ESDocConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Tag"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 184,
    "kind": "method",
    "name": "_resolveDuplication",
    "memberof": "src/ESDoc.js~ESDoc",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ESDoc.js~ESDoc._resolveDuplication",
    "access": "private",
    "description": "resolve duplication docs",
    "lineNumber": 309,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Tag[]}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Tag[]"
        ],
        "spread": false,
        "optional": false,
        "name": "docs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Tag[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 185,
    "kind": "method",
    "name": "_publish",
    "memberof": "src/ESDoc.js~ESDoc",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ESDoc.js~ESDoc._publish",
    "access": "private",
    "description": "publish content",
    "lineNumber": 342,
    "params": [
      {
        "nullable": null,
        "types": [
          "ESDocConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "_memUsage",
    "memberof": "src/ESDoc.js~ESDoc",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ESDoc.js~ESDoc._memUsage",
    "access": "private",
    "description": "show memory usage stat",
    "lineNumber": 374,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": "no return"
    },
    "params": []
  },
  {
    "__docId__": 187,
    "kind": "file",
    "name": "src/ESDocCLI.js",
    "content": "#!/usr/bin/env node\nimport fs from \"fs\";\nimport path from \"path\";\nimport minimist from \"minimist\";\nimport esdoc2 from \"./ESDoc.js\";\nimport NPMUtil from \"./Util/NPMUtil.js\";\nimport log from \"npmlog\";\n\nlog.heading = \"ESDoc2\";\nlog.info(\"using\", \"node@%s\", process.version);\nlog.info(\"using\", \"esdoc2@%s\", NPMUtil.findPackage().version);\n/**\n * Command Line Interface for esdoc2.\n *\n * @example\n * let cli = new ESDocCLI(process.argv);\n * cli.exec();\n */\nexport default class ESDocCLI {\n  /**\n   * Create instance.\n   * @param {Object} argv - this is node.js argv(``process.argv``)\n   */\n  constructor(argv) {\n    /** @type {ESDocCLIArgv} */\n    this._argv = minimist(argv.slice(2));\n\n    if (this._argv.h || this._argv.help) {\n      this._showHelp();\n      process.exit(0);\n    }\n\n    if (this._argv.v || this._argv.version) {\n      this._showVersion();\n      process.exit(0);\n    }\n\n    process.on(\"unhandledRejection\", (reason, p) => {\n      console.error(\"Unhandled Rejection at: Promise\", p, \"reason:\", reason);\n    });\n  }\n\n  /**\n   * execute to generate document.\n   */\n  exec() {\n    let config;\n\n    const configPath = this._findConfigFilePath();\n    log.info(\"config\", configPath);\n    if (configPath) {\n      config = this._createConfigFromJSONFile(configPath);\n    } else {\n      config = this._createConfigFromPackageJSON();\n    }\n\n    if (config) {\n      esdoc2.generate(config);\n    } else {\n      this._showHelp();\n      process.exit(1);\n    }\n  }\n\n  /**\n   * show help of esdoc2\n   * @private\n   */\n  _showHelp() {\n    console.log(\"Usage: esdoc [-c esdoc.json]\");\n    console.log(\"\");\n    console.log(\"Options:\");\n    console.log(\"  -c\", \"specify config file\");\n    console.log(\"  -h\", \"output usage information\");\n    console.log(\"  -v\", \"output the version number\");\n    console.log(\"\");\n    console.log(\"esdoc2 finds configuration by the order:\");\n    console.log(\"  1. `-c your-esdoc.json`\");\n    console.log(\"  2. `.esdoc.json` in current directory\");\n    console.log(\"  3. `.esdoc.js` in current directory\");\n    console.log(\"  4. `esdoc` property in package.json\");\n  }\n\n  /**\n   * show version of esdoc2\n   * @private\n   */\n  _showVersion() {\n    const packageObj = NPMUtil.findPackage();\n    if (packageObj) {\n      console.log(packageObj.version);\n    } else {\n      console.log(\"0.0.0\");\n    }\n  }\n\n  /**\n   * find esdoc2 config file.\n   * @returns {string|null} config file path.\n   * @private\n   */\n  _findConfigFilePath() {\n    if (this._argv.c) {\n      return this._argv.c;\n    }\n\n    try {\n      const filePath = path.resolve(\"./.esdoc.json\");\n      fs.readFileSync(filePath);\n      return filePath;\n    } catch (e) {\n      // ignore\n    }\n\n    try {\n      const filePath = path.resolve(\"./.esdoc.js\");\n      fs.readFileSync(filePath);\n      return filePath;\n    } catch (e) {\n      // ignore\n    }\n\n    return null;\n  }\n\n  /**\n   * create config object from config file.\n   * @param {string} configFilePath - config file path.\n   * @return {ESDocConfig} config object.\n   * @private\n   */\n  _createConfigFromJSONFile(configFilePath) {\n    configFilePath = path.resolve(configFilePath);\n    const ext = path.extname(configFilePath);\n    if (ext === \".js\") {\n      /* eslint-disable global-require */\n      return require(configFilePath);\n    } else {\n      const configJSON = fs.readFileSync(configFilePath, {encode: \"utf8\"});\n      const config = JSON.parse(configJSON);\n      return config;\n    }\n  }\n\n  /**\n   * create config object from package.json.\n   * @return {ESDocConfig|null} config object.\n   * @private\n   */\n  _createConfigFromPackageJSON() {\n    try {\n      const filePath = path.resolve(\"./package.json\");\n      const packageJSON = fs.readFileSync(filePath, \"utf8\").toString();\n      const packageObj = JSON.parse(packageJSON);\n      return packageObj.esdoc2;\n    } catch (e) {\n      // ignore\n    }\n\n    return null;\n  }\n}\n\n// if this file is directory executed, work as CLI.\nconst executedFilePath = fs.realpathSync(process.argv[1]);\nif (executedFilePath === __filename) {\n  const cli = new ESDocCLI(process.argv);\n  cli.exec();\n}\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/ESDocCLI.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 188,
    "kind": "class",
    "name": "ESDocCLI",
    "memberof": "src/ESDocCLI.js",
    "static": true,
    "longname": "src/ESDocCLI.js~ESDocCLI",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/ESDocCLI.js",
    "importStyle": "ESDocCLI",
    "description": "Command Line Interface for esdoc2.",
    "examples": [
      "let cli = new ESDocCLI(process.argv);\ncli.exec();"
    ],
    "lineNumber": 19,
    "interface": false
  },
  {
    "__docId__": 189,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/ESDocCLI.js~ESDocCLI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ESDocCLI.js~ESDocCLI#constructor",
    "access": "public",
    "description": "Create instance.",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "argv",
        "description": "this is node.js argv(``process.argv``)"
      }
    ]
  },
  {
    "__docId__": 190,
    "kind": "member",
    "name": "_argv",
    "memberof": "src/ESDocCLI.js~ESDocCLI",
    "static": false,
    "longname": "src/ESDocCLI.js~ESDocCLI#_argv",
    "access": "private",
    "description": null,
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "ESDocCLIArgv"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 191,
    "kind": "method",
    "name": "exec",
    "memberof": "src/ESDocCLI.js~ESDocCLI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ESDocCLI.js~ESDocCLI#exec",
    "access": "public",
    "description": "execute to generate document.",
    "lineNumber": 46,
    "params": [],
    "return": null
  },
  {
    "__docId__": 192,
    "kind": "method",
    "name": "_showHelp",
    "memberof": "src/ESDocCLI.js~ESDocCLI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ESDocCLI.js~ESDocCLI#_showHelp",
    "access": "private",
    "description": "show help of esdoc2",
    "lineNumber": 69,
    "params": [],
    "return": null
  },
  {
    "__docId__": 193,
    "kind": "method",
    "name": "_showVersion",
    "memberof": "src/ESDocCLI.js~ESDocCLI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ESDocCLI.js~ESDocCLI#_showVersion",
    "access": "private",
    "description": "show version of esdoc2",
    "lineNumber": 88,
    "params": [],
    "return": null
  },
  {
    "__docId__": 194,
    "kind": "method",
    "name": "_findConfigFilePath",
    "memberof": "src/ESDocCLI.js~ESDocCLI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ESDocCLI.js~ESDocCLI#_findConfigFilePath",
    "access": "private",
    "description": "find esdoc2 config file.",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|null} config file path."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "null"
      ],
      "spread": false,
      "description": "config file path."
    },
    "params": []
  },
  {
    "__docId__": 195,
    "kind": "method",
    "name": "_createConfigFromJSONFile",
    "memberof": "src/ESDocCLI.js~ESDocCLI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ESDocCLI.js~ESDocCLI#_createConfigFromJSONFile",
    "access": "private",
    "description": "create config object from config file.",
    "lineNumber": 132,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "configFilePath",
        "description": "config file path."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ESDocConfig"
      ],
      "spread": false,
      "description": "config object."
    }
  },
  {
    "__docId__": 196,
    "kind": "method",
    "name": "_createConfigFromPackageJSON",
    "memberof": "src/ESDocCLI.js~ESDocCLI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ESDocCLI.js~ESDocCLI#_createConfigFromPackageJSON",
    "access": "private",
    "description": "create config object from package.json.",
    "lineNumber": 150,
    "return": {
      "nullable": null,
      "types": [
        "ESDocConfig",
        "null"
      ],
      "spread": false,
      "description": "config object."
    },
    "params": []
  },
  {
    "__docId__": 197,
    "kind": "variable",
    "name": "executedFilePath",
    "memberof": "src/ESDocCLI.js",
    "static": true,
    "longname": "src/ESDocCLI.js~executedFilePath",
    "access": "public",
    "export": false,
    "importPath": "esdoc2/out/src/ESDocCLI.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 165,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 198,
    "kind": "file",
    "name": "src/Factory/DocFactory.js",
    "content": "import log from \"npmlog\";\nimport CommentParser from \"../Parser/CommentParser.js\";\nimport FileDoc from \"../Doc/FileDoc.js\";\nimport ClassDoc from \"../Doc/ClassDoc.js\";\nimport MethodDoc from \"../Doc/MethodDoc.js\";\nimport ClassProperty from \"../Doc/ClassPropertyDoc\";\nimport MemberDoc from \"../Doc/MemberDoc.js\";\nimport FunctionDoc from \"../Doc/FunctionDoc.js\";\nimport VariableDoc from \"../Doc/VariableDoc.js\";\nimport AssignmentDoc from \"../Doc/AssignmentDoc.js\";\nimport TypedefDoc from \"../Doc/TypedefDoc.js\";\nimport ExternalDoc from \"../Doc/ExternalDoc.js\";\nimport ASTUtil from \"../Util/ASTUtil.js\";\n\nconst already = Symbol(\"already\");\n\n/**\n * Doc factory class.\n *\n * @example\n * let factory = new DocFactory(ast, pathResolver);\n * factory.push(node, parentNode);\n * let results = factory.results;\n */\nexport default class DocFactory {\n  /**\n   * @type {DocObject[]}\n   */\n  get results() {\n    return [...this._results];\n  }\n\n  /**\n   * create instance.\n   * @param {AST} ast - AST of source code.\n   * @param {PathResolver} pathResolver - path resolver of source code.\n   */\n  constructor(ast, pathResolver) {\n    this._ast = ast;\n    this._pathResolver = pathResolver;\n    this._results = [];\n    this._processedClassNodes = [];\n\n    this._inspectExportDefaultDeclaration();\n    this._inspectExportNamedDeclaration();\n\n    // file doc\n    const doc = new FileDoc(ast, ast, pathResolver, []);\n    this._results.push(doc.value);\n    log.verbose(\"add\", doc.value);\n    // ast does not child, so only comment.\n    if (ast.program.body.length === 0 && ast.program.innerComments) {\n      const results = this._traverseComments(ast, null, ast.program.innerComments);\n      this._results.push(...results);\n    }\n  }\n\n  /**\n   * inspect ExportDefaultDeclaration.\n   *\n   * case1: separated export\n   *\n   * ```javascript\n   * class Foo {}\n   * export default Foo;\n   * ```\n   *\n   * case2: export instance(directly).\n   *\n   * ```javascript\n   * class Foo {}\n   * export default new Foo();\n   * ```\n   *\n   * case3: export instance(indirectly).\n   *\n   * ```javascript\n   * class Foo {}\n   * let foo = new Foo();\n   * export default foo;\n   * ```\n   *\n   * @private\n   * @todo support function export.\n   */\n  _inspectExportDefaultDeclaration() {\n    const pseudoExportNodes = [];\n\n    for (const exportNode of this._ast.program.body) {\n      if (exportNode.type !== \"ExportDefaultDeclaration\") continue;\n\n      let targetClassName = null;\n      let targetVariableName = null;\n      let pseudoClassExport;\n\n      switch (exportNode.declaration.type) {\n        case \"NewExpression\":\n          if (exportNode.declaration.callee.type === \"Identifier\") {\n            targetClassName = exportNode.declaration.callee.name;\n          } else if (exportNode.declaration.callee.type === \"MemberExpression\") {\n            targetClassName = exportNode.declaration.callee.property.name;\n          } else {\n            targetClassName = \"\";\n          }\n          targetVariableName = targetClassName.replace(/^./, c => c.toLowerCase());\n          pseudoClassExport = true;\n          break;\n        case \"Identifier\": {\n          const varNode = ASTUtil.findVariableDeclarationAndNewExpressionNode(exportNode.declaration.name, this._ast);\n          if (varNode) {\n            targetClassName = varNode.declarations[0].init.callee.name;\n            targetVariableName = exportNode.declaration.name;\n            pseudoClassExport = true;\n            ASTUtil.sanitize(varNode);\n          } else {\n            targetClassName = exportNode.declaration.name;\n            pseudoClassExport = false;\n          }\n          break;\n        }\n        default:\n          log.warn(\"ast\", `unknown export declaration type. type = \"${exportNode.declaration.type}\"`);\n          break;\n      }\n\n      const {classNode, exported} = ASTUtil.findClassDeclarationNode(targetClassName, this._ast);\n      if (classNode) {\n        if (!exported) {\n          const pseudoExportNode1 = this._copy(exportNode);\n          pseudoExportNode1.declaration = this._copy(classNode);\n          pseudoExportNode1.leadingComments = null;\n          pseudoExportNode1.declaration.__PseudoExport__ = pseudoClassExport;\n          pseudoExportNodes.push(pseudoExportNode1);\n          ASTUtil.sanitize(classNode);\n        }\n\n        if (targetVariableName) {\n          const pseudoExportNode2 = this._copy(exportNode);\n          pseudoExportNode2.declaration = ASTUtil.createVariableDeclarationAndNewExpressionNode(targetVariableName, targetClassName, exportNode.loc);\n          pseudoExportNodes.push(pseudoExportNode2);\n        }\n\n        ASTUtil.sanitize(exportNode);\n      }\n\n      const functionNode = ASTUtil.findFunctionDeclarationNode(exportNode.declaration.name, this._ast);\n      if (functionNode) {\n        const pseudoExportNode = this._copy(exportNode);\n        pseudoExportNode.declaration = this._copy(functionNode);\n        ASTUtil.sanitize(exportNode);\n        ASTUtil.sanitize(functionNode);\n        pseudoExportNodes.push(pseudoExportNode);\n      }\n\n      const variableNode = ASTUtil.findVariableDeclarationNode(exportNode.declaration.name, this._ast);\n      if (variableNode) {\n        const pseudoExportNode = this._copy(exportNode);\n        pseudoExportNode.declaration = this._copy(variableNode);\n        ASTUtil.sanitize(exportNode);\n        ASTUtil.sanitize(variableNode);\n        pseudoExportNodes.push(pseudoExportNode);\n      }\n    }\n\n    this._ast.program.body.push(...pseudoExportNodes);\n  }\n\n  /* eslint-disable max-statements */\n  /**\n   * inspect ExportNamedDeclaration.\n   *\n   * case1: separated export\n   *\n   * ```javascript\n   * class Foo {}\n   * export {Foo};\n   * ```\n   *\n   * case2: export instance(indirectly).\n   *\n   * ```javascript\n   * class Foo {}\n   * let foo = new Foo();\n   * export {foo};\n   * ```\n   *\n   * @private\n   * @todo support function export.\n   */\n  _inspectExportNamedDeclaration() {\n    const pseudoExportNodes = [];\n\n    for (const exportNode of this._ast.program.body) {\n      if (exportNode.type !== \"ExportNamedDeclaration\") continue;\n\n      if (exportNode.declaration && exportNode.declaration.type === \"VariableDeclaration\") {\n        for (const declaration of exportNode.declaration.declarations) {\n          if (!declaration.init || declaration.init.type !== \"NewExpression\") continue;\n\n          const {classNode, exported} = ASTUtil.findClassDeclarationNode(declaration.init.callee.name, this._ast);\n          if (classNode && !exported) {\n            const pseudoExportNode = this._copy(exportNode);\n            pseudoExportNode.declaration = this._copy(classNode);\n            pseudoExportNode.leadingComments = null;\n            pseudoExportNodes.push(pseudoExportNode);\n            pseudoExportNode.declaration.__PseudoExport__ = true;\n            ASTUtil.sanitize(classNode);\n          }\n        }\n        continue;\n      }\n\n      for (const specifier of exportNode.specifiers) {\n        if (specifier.type !== \"ExportSpecifier\") continue;\n\n        let targetClassName = null;\n        let pseudoClassExport;\n\n        const varNode = ASTUtil.findVariableDeclarationAndNewExpressionNode(specifier.exported.name, this._ast);\n        if (varNode) {\n          targetClassName = varNode.declarations[0].init.callee.name;\n          pseudoClassExport = true;\n\n          const pseudoExportNode = this._copy(exportNode);\n          pseudoExportNode.declaration = this._copy(varNode);\n          pseudoExportNode.specifiers = null;\n          pseudoExportNodes.push(pseudoExportNode);\n\n          ASTUtil.sanitize(varNode);\n        } else {\n          targetClassName = specifier.exported.name;\n          pseudoClassExport = false;\n        }\n\n        const {classNode, exported} = ASTUtil.findClassDeclarationNode(targetClassName, this._ast);\n        if (classNode && !exported) {\n          const pseudoExportNode = this._copy(exportNode);\n          pseudoExportNode.declaration = this._copy(classNode);\n          pseudoExportNode.leadingComments = null;\n          pseudoExportNode.specifiers = null;\n          pseudoExportNode.declaration.__PseudoExport__ = pseudoClassExport;\n          pseudoExportNodes.push(pseudoExportNode);\n          ASTUtil.sanitize(classNode);\n        }\n\n        const functionNode = ASTUtil.findFunctionDeclarationNode(specifier.exported.name, this._ast);\n        if (functionNode) {\n          const pseudoExportNode = this._copy(exportNode);\n          pseudoExportNode.declaration = this._copy(functionNode);\n          pseudoExportNode.leadingComments = null;\n          pseudoExportNode.specifiers = null;\n          ASTUtil.sanitize(functionNode);\n          pseudoExportNodes.push(pseudoExportNode);\n        }\n\n        const variableNode = ASTUtil.findVariableDeclarationNode(specifier.exported.name, this._ast);\n        if (variableNode) {\n          const pseudoExportNode = this._copy(exportNode);\n          pseudoExportNode.declaration = this._copy(variableNode);\n          pseudoExportNode.leadingComments = null;\n          pseudoExportNode.specifiers = null;\n          ASTUtil.sanitize(variableNode);\n          pseudoExportNodes.push(pseudoExportNode);\n        }\n      }\n    }\n\n    this._ast.program.body.push(...pseudoExportNodes);\n  }\n\n  /**\n   * push node, and factory processes node.\n   * @param {ASTNode} node - target node.\n   * @param {ASTNode} parentNode - parent node of target node.\n   */\n  push(node, parentNode) {\n    if (node === this._ast) return;\n\n    if (node[already]) return;\n\n    const isLastNodeInParent = this._isLastNodeInParent(node, parentNode);\n\n    node[already] = true;\n    Reflect.defineProperty(node, \"parent\", {value: parentNode});\n\n    // unwrap export declaration\n    if ([\"ExportDefaultDeclaration\", \"ExportNamedDeclaration\"].includes(node.type)) {\n      parentNode = node;\n      node = this._unwrapExportDeclaration(node);\n      if (!node) return;\n      node[already] = true;\n      Reflect.defineProperty(node, \"parent\", {value: parentNode});\n    }\n\n    // if node has decorators, leading comments is attached to decorators.\n    if (node.decorators && node.decorators[0].leadingComments) {\n      if (!node.leadingComments || !node.leadingComments.length) {\n        node.leadingComments = node.decorators[0].leadingComments;\n      }\n    }\n\n    let results;\n    results = this._traverseComments(parentNode, node, node.leadingComments);\n    this._results.push(...results);\n\n    // for trailing comments.\n    // traverse with only last node, because prevent duplication of trailing comments.\n    if (node.trailingComments && isLastNodeInParent) {\n      results = this._traverseComments(parentNode, null, node.trailingComments);\n      this._results.push(...results);\n    }\n  }\n\n  /**\n   * traverse comments of node, and create doc object.\n   * @param {ASTNode|AST} parentNode - parent of target node.\n   * @param {?ASTNode} node - target node.\n   * @param {ASTNode[]} comments - comment nodes.\n   * @returns {DocObject[]} created doc objects.\n   * @private\n   */\n  _traverseComments(parentNode, node, comments) {\n    if (!node) {\n      const virtualNode = {};\n      Reflect.defineProperty(virtualNode, \"parent\", {value: parentNode});\n      node = virtualNode;\n    }\n\n    if (comments && comments.length) {\n      const temp = [];\n      for (const comment of comments) {\n        if (CommentParser.isESDoc(comment)) temp.push(comment);\n      }\n      comments = temp;\n    } else {\n      comments = [];\n    }\n\n    if (comments.length === 0) {\n      comments = [{type: \"CommentBlock\", value: \"* @undocument\"}];\n    }\n\n    const results = [];\n    const lastComment = comments[comments.length - 1];\n    for (const comment of comments) {\n      const tags = CommentParser.parse(comment);\n\n      let doc;\n      if (comment === lastComment) {\n        doc = this._createDoc(node, tags);\n      } else {\n        const virtualNode = {};\n        Reflect.defineProperty(virtualNode, \"parent\", {value: parentNode});\n        doc = this._createDoc(virtualNode, tags);\n      }\n\n      if (doc) results.push(doc.value);\n    }\n\n    return results;\n  }\n\n  /**\n   * create Doc.\n   * @param {ASTNode} node - target node.\n   * @param {Tag[]} tags - tags of target node.\n   * @returns {AbstractDoc} created Doc.\n   * @private\n   */\n  _createDoc(node, tags) {\n    const result = this._decideType(tags, node);\n    const type = result.type;\n    node = result.node;\n\n    if (!type) return null;\n\n    if (type === \"Class\") {\n      this._processedClassNodes.push(node);\n    }\n\n    let Clazz;\n    /* eslint-disable max-statements-per-line */\n    switch (type) {\n      case \"Class\": Clazz = ClassDoc; break;\n      case \"Method\": Clazz = MethodDoc; break;\n      case \"ClassProperty\": Clazz = ClassProperty; break;\n      case \"Member\": Clazz = MemberDoc; break;\n      case \"Function\": Clazz = FunctionDoc; break;\n      case \"Variable\": Clazz = VariableDoc; break;\n      case \"Assignment\": Clazz = AssignmentDoc; break;\n      case \"Typedef\": Clazz = TypedefDoc; break;\n      case \"External\": Clazz = ExternalDoc; break;\n      default:\n        throw new Error(`unexpected type: ${type}`);\n    }\n\n    if (!Clazz) return null;\n    if (!node.type) node.type = type;\n\n    return new Clazz(this._ast, node, this._pathResolver, tags);\n  }\n\n  /**\n   * decide Doc type by using tags and node.\n   * @param {Tag[]} tags - tags of node.\n   * @param {ASTNode} node - target node.\n   * @returns {{type: ?string, node: ?ASTNode}} decided type.\n   * @private\n   */\n  _decideType(tags, node) {\n    let type = null;\n    for (const tag of tags) {\n      const tagName = tag.tagName;\n      /* eslint-disable default-case */\n      switch (tagName) {\n        case \"@typedef\": type = \"Typedef\"; break;\n        case \"@external\": type = \"External\"; break;\n      }\n    }\n\n    if (type) return {type, node};\n\n    if (!node) return {type, node};\n\n    /* eslint-disable default-case */\n    switch (node.type) {\n      case \"ClassDeclaration\":\n        return this._decideClassDeclarationType(node);\n      case \"ClassMethod\":\n        return this._decideMethodDefinitionType(node);\n      case \"ClassProperty\":\n        return this._decideClassPropertyType(node);\n      case \"ExpressionStatement\":\n        return this._decideExpressionStatementType(node);\n      case \"FunctionDeclaration\":\n        return this._decideFunctionDeclarationType(node);\n      case \"FunctionExpression\":\n        return this._decideFunctionExpressionType(node);\n      case \"VariableDeclaration\":\n        return this._decideVariableType(node);\n      case \"AssignmentExpression\":\n        return this._decideAssignmentType(node);\n      case \"ArrowFunctionExpression\":\n        return this._decideArrowFunctionExpressionType(node);\n    }\n\n    return {type: null, node: null};\n  }\n\n  /**\n   * decide Doc type from class declaration node.\n   * @param {ASTNode} node - target node that is class declaration node.\n   * @returns {{type: string, node: ASTNode}} decided type.\n   * @private\n   */\n  _decideClassDeclarationType(node) {\n    if (!this._isTopDepthInBody(node, this._ast.program.body)) return {type: null, node: null};\n\n    return {type: \"Class\", node: node};\n  }\n\n  /**\n   * decide Doc type from method definition node.\n   * @param {ASTNode} node - target node that is method definition node.\n   * @returns {{type: ?string, node: ?ASTNode}} decided type.\n   * @private\n   */\n  _decideMethodDefinitionType(node) {\n    const classNode = this._findUp(node, [\"ClassDeclaration\", \"ClassExpression\"]);\n    if (this._processedClassNodes.includes(classNode)) {\n      return {type: \"Method\", node: node};\n    } else {\n      log.warn(\"node\", \"this method is not in class\", node);\n      return {type: null, node: null};\n    }\n  }\n\n  /**\n   * decide Doc type from class property node.\n   * @param {ASTNode} node - target node that is classs property node.\n   * @returns {{type: ?string, node: ?ASTNode}} decided type.\n   * @private\n   */\n  _decideClassPropertyType(node) {\n    const classNode = this._findUp(node, [\"ClassDeclaration\", \"ClassExpression\"]);\n    if (this._processedClassNodes.includes(classNode)) {\n      return {type: \"ClassProperty\", node: node};\n    } else {\n      log.warn(\"node\", \"this class property is not in class\", node);\n      return {type: null, node: null};\n    }\n  }\n\n  /**\n   * decide Doc type from function declaration node.\n   * @param {ASTNode} node - target node that is function declaration node.\n   * @returns {{type: string, node: ASTNode}} decided type.\n   * @private\n   */\n  _decideFunctionDeclarationType(node) {\n    if (!this._isTopDepthInBody(node, this._ast.program.body)) return {type: null, node: null};\n\n    return {type: \"Function\", node: node};\n  }\n\n  /**\n   * decide Doc type from function expression node.\n   * babylon 6.11.2 judges`export default async function foo(){}` to be `FunctionExpression`.\n   * I expect `FunctionDeclaration`. this behavior may be bug of babylon.\n   * for now, workaround for it with this method.\n   * @param {ASTNode} node - target node that is function expression node.\n   * @returns {{type: string, node: ASTNode}} decided type.\n   * @private\n   * @todo inspect with newer babylon.\n   */\n  _decideFunctionExpressionType(node) {\n    if (!node.async) return {type: null, node: null};\n    if (!this._isTopDepthInBody(node, this._ast.program.body)) return {type: null, node: null};\n\n    return {type: \"Function\", node: node};\n  }\n\n  /**\n   * decide Doc type from arrow function expression node.\n   * @param {ASTNode} node - target node that is arrow function expression node.\n   * @returns {{type: string, node: ASTNode}} decided type.\n   * @private\n   */\n  _decideArrowFunctionExpressionType(node) {\n    if (!this._isTopDepthInBody(node, this._ast.program.body)) return {type: null, node: null};\n\n    return {type: \"Function\", node: node};\n  }\n\n  /**\n   * decide Doc type from expression statement node.\n   * @param {ASTNode} node - target node that is expression statement node.\n   * @returns {{type: ?string, node: ?ASTNode}} decided type.\n   * @private\n   */\n  _decideExpressionStatementType(node) {\n    const isTop = this._isTopDepthInBody(node, this._ast.program.body);\n    Reflect.defineProperty(node.expression, \"parent\", {value: node});\n    node = node.expression;\n    node[already] = true;\n\n    let innerType;\n    let innerNode;\n\n    if (!node.right) return {type: null, node: null};\n\n    switch (node.right.type) {\n      case \"FunctionExpression\":\n        innerType = \"Function\";\n        break;\n      case \"ClassExpression\":\n        innerType = \"Class\";\n        break;\n      default:\n        if (node.left.type === \"MemberExpression\" && node.left.object.type === \"ThisExpression\") {\n          const classNode = this._findUp(node, [\"ClassExpression\", \"ClassDeclaration\"]);\n          if (!this._processedClassNodes.includes(classNode)) {\n            log.warn(\"node\", \"this member is not in class.\", this._pathResolver.filePath, node);\n            return {type: null, node: null};\n          }\n\n          return {type: \"Member\", node: node};\n        } else {\n          return {type: null, node: null};\n        }\n    }\n\n    if (!isTop) return {type: null, node: null};\n\n    /* eslint-disable prefer-const */\n    innerNode = node.right;\n    innerNode.id = this._copy(node.left.id || node.left.property);\n    Reflect.defineProperty(innerNode, \"parent\", {value: node});\n    innerNode[already] = true;\n\n    return {type: innerType, node: innerNode};\n  }\n\n  /**\n   * decide Doc type from variable node.\n   * @param {ASTNode} node - target node that is variable node.\n   * @returns {{type: string, node: ASTNode}} decided type.\n   * @private\n   */\n  _decideVariableType(node) {\n    if (!this._isTopDepthInBody(node, this._ast.program.body)) return {type: null, node: null};\n\n    let innerType = null;\n    let innerNode = null;\n\n    if (!node.declarations[0].init) return {type: innerType, node: innerNode};\n\n    switch (node.declarations[0].init.type) {\n      case \"FunctionExpression\":\n        innerType = \"Function\";\n        break;\n      case \"ClassExpression\":\n        innerType = \"Class\";\n        break;\n      case \"ArrowFunctionExpression\":\n        innerType = \"Function\";\n        break;\n      default:\n        return {type: \"Variable\", node: node};\n    }\n\n    innerNode = node.declarations[0].init;\n    innerNode.id = this._copy(node.declarations[0].id);\n    Reflect.defineProperty(innerNode, \"parent\", {value: node});\n    innerNode[already] = true;\n\n    return {type: innerType, node: innerNode};\n  }\n\n  /**\n   * decide Doc type from assignment node.\n   * @param {ASTNode} node - target node that is assignment node.\n   * @returns {{type: string, node: ASTNode}} decided type.\n   * @private\n   */\n  _decideAssignmentType(node) {\n    if (!this._isTopDepthInBody(node, this._ast.program.body)) return {type: null, node: null};\n\n    let innerType;\n    let innerNode;\n\n    switch (node.right.type) {\n      case \"FunctionExpression\":\n        innerType = \"Function\";\n        break;\n      case \"ClassExpression\":\n        innerType = \"Class\";\n        break;\n      default:\n        return {type: \"Assignment\", node: node};\n    }\n\n    /* eslint-disable prefer-const */\n    innerNode = node.right;\n    innerNode.id = this._copy(node.left.id || node.left.property);\n    Reflect.defineProperty(innerNode, \"parent\", {value: node});\n    innerNode[already] = true;\n\n    return {type: innerType, node: innerNode};\n  }\n\n  /**\n   * unwrap exported node.\n   * @param {ASTNode} node - target node that is export declaration node.\n   * @returns {ASTNode|null} unwrapped child node of exported node.\n   * @private\n   */\n  _unwrapExportDeclaration(node) {\n    // e.g. `export A from './A.js'` has not declaration\n    if (!node.declaration) return null;\n\n    const exportedASTNode = node.declaration;\n    if (!exportedASTNode.leadingComments) exportedASTNode.leadingComments = [];\n    exportedASTNode.leadingComments.push(...node.leadingComments || []);\n\n    if (!exportedASTNode.trailingComments) exportedASTNode.trailingComments = [];\n    exportedASTNode.trailingComments.push(...node.trailingComments || []);\n\n    return exportedASTNode;\n  }\n\n  /**\n   * judge node is last in parent.\n   * @param {ASTNode} node - target node.\n   * @param {ASTNode} parentNode - target parent node.\n   * @returns {boolean} if true, the node is last in parent.\n   * @private\n   */\n  _isLastNodeInParent(node, parentNode) {\n    if (parentNode && parentNode.body) {\n      const lastNode = parentNode.body[parentNode.body.length - 1];\n      return node === lastNode;\n    }\n\n    return false;\n  }\n\n  /**\n   * judge node is top in body.\n   * @param {ASTNode} node - target node.\n   * @param {ASTNode[]} body - target body node.\n   * @returns {boolean} if true, the node is top in body.\n   * @private\n   */\n  _isTopDepthInBody(node, body) {\n    if (!body) return false;\n    if (!Array.isArray(body)) return false;\n\n    const parentNode = node.parent;\n    if ([\"ExportDefaultDeclaration\", \"ExportNamedDeclaration\"].includes(parentNode.type)) {\n      node = parentNode;\n    }\n\n    for (const _node of body) {\n      if (node === _node) return true;\n    }\n    return false;\n  }\n\n  /**\n   * deep copy object.\n   * @param {Object} obj - target object.\n   * @return {Object} copied object.\n   * @private\n   */\n  _copy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n\n  /**\n   * find node while goes up.\n   * @param {ASTNode} node - start node.\n   * @param {string[]} types - ASTNode types.\n   * @returns {ASTNode|null} found first node.\n   * @private\n   */\n  _findUp(node, types) {\n    let parent = node.parent;\n    while (parent) {\n      if (types.includes(parent.type)) return parent;\n      parent = parent.parent;\n    }\n\n    return null;\n  }\n}\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Factory/DocFactory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 199,
    "kind": "variable",
    "name": "already",
    "memberof": "src/Factory/DocFactory.js",
    "static": true,
    "longname": "src/Factory/DocFactory.js~already",
    "access": "public",
    "export": false,
    "importPath": "esdoc2/out/src/Factory/DocFactory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 200,
    "kind": "class",
    "name": "DocFactory",
    "memberof": "src/Factory/DocFactory.js",
    "static": true,
    "longname": "src/Factory/DocFactory.js~DocFactory",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Factory/DocFactory.js",
    "importStyle": "DocFactory",
    "description": "Doc factory class.",
    "examples": [
      "let factory = new DocFactory(ast, pathResolver);\nfactory.push(node, parentNode);\nlet results = factory.results;"
    ],
    "lineNumber": 25,
    "interface": false
  },
  {
    "__docId__": 201,
    "kind": "get",
    "name": "results",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#results",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "DocObject[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 202,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#constructor",
    "access": "public",
    "description": "create instance.",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "AST"
        ],
        "spread": false,
        "optional": false,
        "name": "ast",
        "description": "AST of source code."
      },
      {
        "nullable": null,
        "types": [
          "PathResolver"
        ],
        "spread": false,
        "optional": false,
        "name": "pathResolver",
        "description": "path resolver of source code."
      }
    ]
  },
  {
    "__docId__": 203,
    "kind": "member",
    "name": "_ast",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_ast",
    "access": "private",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "member",
    "name": "_pathResolver",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_pathResolver",
    "access": "private",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 205,
    "kind": "member",
    "name": "_results",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_results",
    "access": "private",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "member",
    "name": "_processedClassNodes",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_processedClassNodes",
    "access": "private",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "_inspectExportDefaultDeclaration",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_inspectExportDefaultDeclaration",
    "access": "private",
    "description": "inspect ExportDefaultDeclaration.\n\ncase1: separated export\n\n```javascript\nclass Foo {}\nexport default Foo;\n```\n\ncase2: export instance(directly).\n\n```javascript\nclass Foo {}\nexport default new Foo();\n```\n\ncase3: export instance(indirectly).\n\n```javascript\nclass Foo {}\nlet foo = new Foo();\nexport default foo;\n```",
    "lineNumber": 86,
    "todo": [
      "support function export."
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 208,
    "kind": "method",
    "name": "_inspectExportNamedDeclaration",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_inspectExportNamedDeclaration",
    "access": "private",
    "description": "inspect ExportNamedDeclaration.\n\ncase1: separated export\n\n```javascript\nclass Foo {}\nexport {Foo};\n```\n\ncase2: export instance(indirectly).\n\n```javascript\nclass Foo {}\nlet foo = new Foo();\nexport {foo};\n```",
    "lineNumber": 190,
    "todo": [
      "support function export."
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "push",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#push",
    "access": "public",
    "description": "push node, and factory processes node.",
    "lineNumber": 276,
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "target node."
      },
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "parentNode",
        "description": "parent node of target node."
      }
    ],
    "return": null
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "_traverseComments",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_traverseComments",
    "access": "private",
    "description": "traverse comments of node, and create doc object.",
    "lineNumber": 322,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DocObject[]} created doc objects."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode",
          "AST"
        ],
        "spread": false,
        "optional": false,
        "name": "parentNode",
        "description": "parent of target node."
      },
      {
        "nullable": true,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "target node."
      },
      {
        "nullable": null,
        "types": [
          "ASTNode[]"
        ],
        "spread": false,
        "optional": false,
        "name": "comments",
        "description": "comment nodes."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DocObject[]"
      ],
      "spread": false,
      "description": "created doc objects."
    }
  },
  {
    "__docId__": 211,
    "kind": "method",
    "name": "_createDoc",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_createDoc",
    "access": "private",
    "description": "create Doc.",
    "lineNumber": 370,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AbstractDoc} created Doc."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "target node."
      },
      {
        "nullable": null,
        "types": [
          "Tag[]"
        ],
        "spread": false,
        "optional": false,
        "name": "tags",
        "description": "tags of target node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AbstractDoc"
      ],
      "spread": false,
      "description": "created Doc."
    }
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "_decideType",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_decideType",
    "access": "private",
    "description": "decide Doc type by using tags and node.",
    "lineNumber": 410,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{type: ?string, node: ?ASTNode}} decided type."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Tag[]"
        ],
        "spread": false,
        "optional": false,
        "name": "tags",
        "description": "tags of node."
      },
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "target node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{type: ?string, node: ?ASTNode}"
      ],
      "spread": false,
      "description": "decided type."
    }
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "_decideClassDeclarationType",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_decideClassDeclarationType",
    "access": "private",
    "description": "decide Doc type from class declaration node.",
    "lineNumber": 456,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{type: string, node: ASTNode}} decided type."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "target node that is class declaration node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{type: string, node: ASTNode}"
      ],
      "spread": false,
      "description": "decided type."
    }
  },
  {
    "__docId__": 214,
    "kind": "method",
    "name": "_decideMethodDefinitionType",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_decideMethodDefinitionType",
    "access": "private",
    "description": "decide Doc type from method definition node.",
    "lineNumber": 468,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{type: ?string, node: ?ASTNode}} decided type."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "target node that is method definition node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{type: ?string, node: ?ASTNode}"
      ],
      "spread": false,
      "description": "decided type."
    }
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "_decideClassPropertyType",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_decideClassPropertyType",
    "access": "private",
    "description": "decide Doc type from class property node.",
    "lineNumber": 484,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{type: ?string, node: ?ASTNode}} decided type."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "target node that is classs property node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{type: ?string, node: ?ASTNode}"
      ],
      "spread": false,
      "description": "decided type."
    }
  },
  {
    "__docId__": 216,
    "kind": "method",
    "name": "_decideFunctionDeclarationType",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_decideFunctionDeclarationType",
    "access": "private",
    "description": "decide Doc type from function declaration node.",
    "lineNumber": 500,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{type: string, node: ASTNode}} decided type."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "target node that is function declaration node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{type: string, node: ASTNode}"
      ],
      "spread": false,
      "description": "decided type."
    }
  },
  {
    "__docId__": 217,
    "kind": "method",
    "name": "_decideFunctionExpressionType",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_decideFunctionExpressionType",
    "access": "private",
    "description": "decide Doc type from function expression node.\nbabylon 6.11.2 judges`export default async function foo(){}` to be `FunctionExpression`.\nI expect `FunctionDeclaration`. this behavior may be bug of babylon.\nfor now, workaround for it with this method.",
    "lineNumber": 516,
    "todo": [
      "inspect with newer babylon."
    ],
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{type: string, node: ASTNode}} decided type."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "target node that is function expression node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{type: string, node: ASTNode}"
      ],
      "spread": false,
      "description": "decided type."
    }
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "_decideArrowFunctionExpressionType",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_decideArrowFunctionExpressionType",
    "access": "private",
    "description": "decide Doc type from arrow function expression node.",
    "lineNumber": 529,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{type: string, node: ASTNode}} decided type."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "target node that is arrow function expression node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{type: string, node: ASTNode}"
      ],
      "spread": false,
      "description": "decided type."
    }
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "_decideExpressionStatementType",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_decideExpressionStatementType",
    "access": "private",
    "description": "decide Doc type from expression statement node.",
    "lineNumber": 541,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{type: ?string, node: ?ASTNode}} decided type."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "target node that is expression statement node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{type: ?string, node: ?ASTNode}"
      ],
      "spread": false,
      "description": "decided type."
    }
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "_decideVariableType",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_decideVariableType",
    "access": "private",
    "description": "decide Doc type from variable node.",
    "lineNumber": 590,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{type: string, node: ASTNode}} decided type."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "target node that is variable node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{type: string, node: ASTNode}"
      ],
      "spread": false,
      "description": "decided type."
    }
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "_decideAssignmentType",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_decideAssignmentType",
    "access": "private",
    "description": "decide Doc type from assignment node.",
    "lineNumber": 626,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{type: string, node: ASTNode}} decided type."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "target node that is assignment node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{type: string, node: ASTNode}"
      ],
      "spread": false,
      "description": "decided type."
    }
  },
  {
    "__docId__": 222,
    "kind": "method",
    "name": "_unwrapExportDeclaration",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_unwrapExportDeclaration",
    "access": "private",
    "description": "unwrap exported node.",
    "lineNumber": 658,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ASTNode|null} unwrapped child node of exported node."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "target node that is export declaration node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ASTNode",
        "null"
      ],
      "spread": false,
      "description": "unwrapped child node of exported node."
    }
  },
  {
    "__docId__": 223,
    "kind": "method",
    "name": "_isLastNodeInParent",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_isLastNodeInParent",
    "access": "private",
    "description": "judge node is last in parent.",
    "lineNumber": 679,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} if true, the node is last in parent."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "target node."
      },
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "parentNode",
        "description": "target parent node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "if true, the node is last in parent."
    }
  },
  {
    "__docId__": 224,
    "kind": "method",
    "name": "_isTopDepthInBody",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_isTopDepthInBody",
    "access": "private",
    "description": "judge node is top in body.",
    "lineNumber": 695,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} if true, the node is top in body."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "target node."
      },
      {
        "nullable": null,
        "types": [
          "ASTNode[]"
        ],
        "spread": false,
        "optional": false,
        "name": "body",
        "description": "target body node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "if true, the node is top in body."
    }
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "_copy",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_copy",
    "access": "private",
    "description": "deep copy object.",
    "lineNumber": 716,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "target object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "copied object."
    }
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "_findUp",
    "memberof": "src/Factory/DocFactory.js~DocFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Factory/DocFactory.js~DocFactory#_findUp",
    "access": "private",
    "description": "find node while goes up.",
    "lineNumber": 727,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ASTNode|null} found first node."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "start node."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "types",
        "description": "ASTNode types."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ASTNode",
        "null"
      ],
      "spread": false,
      "description": "found first node."
    }
  },
  {
    "__docId__": 227,
    "kind": "file",
    "name": "src/Parser/CommentParser.js",
    "content": "/**\n * Doc Comment Parser class.\n *\n * @example\n * for (let comment of node.leadingComments) {\n *   let tags = CommentParser.parse(comment);\n *   console.log(tags);\n * }\n */\nexport default class CommentParser {\n  /**\n   * parse comment to tags.\n   * @param {ASTNode} commentNode - comment node.\n   * @param {string} commentNode.value - comment body.\n   * @param {string} commentNode.type - CommentBlock or CommentLine.\n   * @returns {Tag[]} parsed comment.\n   */\n  static parse(commentNode) {\n    if (!this.isESDoc(commentNode)) return [];\n\n    let comment = commentNode.value;\n\n    // TODO: refactor\n    comment = comment.replace(/\\r\\n/gm, \"\\n\"); // for Windows\n    comment = comment.replace(/^[\\t ]*/gm, \"\"); // remove line head space\n    comment = comment.replace(/^\\*[\\t ]?/, \"\"); // remove first '*'\n    comment = comment.replace(/[\\t ]$/, \"\"); // remove last space\n    comment = comment.replace(/^\\*[\\t ]?/gm, \"\"); // remove line head '*'\n    if (comment.charAt(0) !== \"@\") comment = `@desc ${comment}`; // auto insert @desc\n    comment = comment.replace(/[\\t ]*$/, \"\"); // remove tail space.\n    comment = comment.replace(/```[\\s\\S]*?```/g, (match) => match.replace(/@/g, \"\\\\ESCAPED_AT\\\\\")); // escape code in descriptions\n    comment = comment.replace(/^[\\t ]*(@\\w+)$/gm, \"$1 \\\\TRUE\"); // auto insert tag text to non-text tag (e.g. @interface)\n    comment = comment.replace(/^[\\t ]*(@\\w+)[\\t ](.*)/gm, \"\\\\Z$1\\\\Z$2\"); // insert separator (\\\\Z@tag\\\\Ztext)\n    const lines = comment.split(\"\\\\Z\");\n\n    let tagName = \"\";\n    let tagValue = \"\";\n    const tags = [];\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n      if (line.charAt(0) === \"@\") {\n        tagName = line;\n        const nextLine = lines[i + 1];\n        if (nextLine.charAt(0) === \"@\") {\n          tagValue = \"\";\n        } else {\n          tagValue = nextLine;\n          i++;\n        }\n        tagValue = tagValue.replace(\"\\\\TRUE\", \"\")\n          .replace(/\\\\ESCAPED_AT\\\\/g, \"@\")\n          .replace(/^\\n/, \"\")\n          .replace(/\\n*$/, \"\");\n        tags.push({tagName, tagValue});\n      }\n    }\n    return tags;\n  }\n\n  /**\n   * parse node to tags.\n   * @param {ASTNode} node - node.\n   * @returns {{tags: Tag[], commentNode: CommentNode}} parsed comment.\n   */\n  static parseFromNode(node) {\n    if (!node.leadingComments) node.leadingComments = [{type: \"CommentBlock\", value: \"\"}];\n    const commentNode = node.leadingComments[node.leadingComments.length - 1];\n    const tags = this.parse(commentNode);\n\n    return {tags, commentNode};\n  }\n\n  /**\n   * judge doc comment or not.\n   * @param {ASTNode} commentNode - comment node.\n   * @returns {boolean} if true, this comment node is doc comment.\n   */\n  static isESDoc(commentNode) {\n    if (commentNode.type !== \"CommentBlock\") return false;\n    return commentNode.value.charAt(0) === \"*\";\n  }\n\n  /**\n   * build comment from tags\n   * @param {Tag[]} tags\n   * @returns {string} block comment value.\n   */\n  static buildComment(tags) {\n    return tags.reduce((comment, tag) => {\n      const line = tag.tagValue.replace(/\\n/g, \"\\n * \");\n      return `${comment} * ${tag.tagName} \\n * ${line} \\n`;\n    }, \"*\\n\");\n  }\n}\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Parser/CommentParser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 228,
    "kind": "class",
    "name": "CommentParser",
    "memberof": "src/Parser/CommentParser.js",
    "static": true,
    "longname": "src/Parser/CommentParser.js~CommentParser",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Parser/CommentParser.js",
    "importStyle": "CommentParser",
    "description": "Doc Comment Parser class.",
    "examples": [
      "for (let comment of node.leadingComments) {\n  let tags = CommentParser.parse(comment);\n  console.log(tags);\n}"
    ],
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 229,
    "kind": "method",
    "name": "parse",
    "memberof": "src/Parser/CommentParser.js~CommentParser",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Parser/CommentParser.js~CommentParser.parse",
    "access": "public",
    "description": "parse comment to tags.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Tag[]} parsed comment."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "commentNode",
        "description": "comment node."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "commentNode.value",
        "description": "comment body."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "commentNode.type",
        "description": "CommentBlock or CommentLine."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Tag[]"
      ],
      "spread": false,
      "description": "parsed comment."
    }
  },
  {
    "__docId__": 230,
    "kind": "method",
    "name": "parseFromNode",
    "memberof": "src/Parser/CommentParser.js~CommentParser",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Parser/CommentParser.js~CommentParser.parseFromNode",
    "access": "public",
    "description": "parse node to tags.",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{tags: Tag[], commentNode: CommentNode}} parsed comment."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{tags: Tag[], commentNode: CommentNode}"
      ],
      "spread": false,
      "description": "parsed comment."
    }
  },
  {
    "__docId__": 231,
    "kind": "method",
    "name": "isESDoc",
    "memberof": "src/Parser/CommentParser.js~CommentParser",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Parser/CommentParser.js~CommentParser.isESDoc",
    "access": "public",
    "description": "judge doc comment or not.",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} if true, this comment node is doc comment."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "commentNode",
        "description": "comment node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "if true, this comment node is doc comment."
    }
  },
  {
    "__docId__": 232,
    "kind": "method",
    "name": "buildComment",
    "memberof": "src/Parser/CommentParser.js~CommentParser",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Parser/CommentParser.js~CommentParser.buildComment",
    "access": "public",
    "description": "build comment from tags",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} block comment value."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Tag[]"
        ],
        "spread": false,
        "optional": false,
        "name": "tags",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "block comment value."
    }
  },
  {
    "__docId__": 233,
    "kind": "file",
    "name": "src/Parser/ESParser.js",
    "content": "import fs from \"fs-extra\";\nimport Plugin from \"../Plugin/Plugin.js\";\nimport * as babylon from \"babylon\";\n\n/**\n * ECMAScript Parser class.\n *\n * @example\n * let ast = ESParser.parse('./src/foo.js');\n */\nexport default class ESParser {\n  /**\n   * parse ECMAScript source code.\n   * @param {string} filePath - source code file path.\n   * @returns {AST} AST of source code.\n   */\n  static parse(filePath) {\n    let code = fs.readFileSync(filePath, {encode: \"utf8\"}).toString();\n    code = Plugin.onHandleCode(code, filePath);\n    if (code.charAt(0) === \"#\") code = code.replace(/^#!/, \"//\");\n\n    let parserOption = {sourceType: \"module\", plugins: []};\n    let parser = (code) => {\n      return babylon.parse(code, parserOption);\n    };\n\n    ({parser, parserOption} = Plugin.onHandleCodeParser(parser, parserOption, filePath, code));\n\n    let ast = parser(code);\n\n    ast = Plugin.onHandleAST(ast, filePath, code);\n\n    return ast;\n  }\n}\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Parser/ESParser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 234,
    "kind": "class",
    "name": "ESParser",
    "memberof": "src/Parser/ESParser.js",
    "static": true,
    "longname": "src/Parser/ESParser.js~ESParser",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Parser/ESParser.js",
    "importStyle": "ESParser",
    "description": "ECMAScript Parser class.",
    "examples": [
      "let ast = ESParser.parse('./src/foo.js');"
    ],
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "parse",
    "memberof": "src/Parser/ESParser.js~ESParser",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Parser/ESParser.js~ESParser.parse",
    "access": "public",
    "description": "parse ECMAScript source code.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AST} AST of source code."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "source code file path."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AST"
      ],
      "spread": false,
      "description": "AST of source code."
    }
  },
  {
    "__docId__": 236,
    "kind": "file",
    "name": "src/Parser/ParamParser.js",
    "content": "import assert from \"assert\";\n\n/**\n * Param Type Parser class.\n */\nexport default class ParamParser {\n  /**\n   * parse param value.\n   * @param {string} value - param value.\n   * @param {boolean} [type=true] if true, contain param type.\n   * @param {boolean} [name=true] if true, contain param name.\n   * @param {boolean} [desc=true] if true, contain param description.\n   * @return {{typeText: string, paramName: string, paramDesc: string}} parsed value.\n   *\n   * @example\n   * let value = '{number} param - this is number param';\n   * let {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value);\n   *\n   * let value = '{number} this is number return value';\n   * let {typeText, paramDesc} = ParamParser.parseParamValue(value, true, false, true);\n   *\n   * let value = '{number}';\n   * let {typeText} = ParamParser.parseParamValue(value, true, false, false);\n   */\n  static parseParamValue(value, type = true, name = true, desc = true) {\n    value = value.trim();\n\n    let match;\n    let typeText = null;\n    let paramName = null;\n    let paramDesc = null;\n\n    // e.g {number}\n    if (type) {\n      const reg = /^\\{([^@]*?)\\}(\\s+|$)/; // ``@`` is special char in ``{@link foo}``\n      match = value.match(reg);\n      if (match) {\n        typeText = match[1];\n        value = value.replace(reg, \"\");\n      } else {\n        typeText = \"*\";\n      }\n    }\n\n    // e.g. [p1=123]\n    if (name) {\n      if (value.charAt(0) === \"[\") {\n        paramName = \"\";\n        let counter = 0;\n        for (const c of value) {\n          paramName += c;\n          if (c === \"[\") counter++;\n          if (c === \"]\") counter--;\n          if (counter === 0) break;\n        }\n\n        if (paramName) {\n          value = value.substr(paramName.length).trim();\n        }\n      } else {\n        match = value.match(/^(\\S+)/);\n        if (match) {\n          paramName = match[1];\n          value = value.replace(/^\\S+\\s*/, \"\");\n        }\n      }\n    }\n\n    // e.g. this is p1 desc.\n    if (desc) {\n      match = value.match(/^\\-?\\s*((:?.|\\n)*)$/m);\n      if (match) {\n        paramDesc = match[1];\n      }\n    }\n\n    assert(typeText || paramName || paramDesc, `param is invalid. param = \"${value}\"`);\n\n    return {typeText, paramName, paramDesc};\n  }\n\n  /**\n   * parse param text and build formatted result.\n   * @param {string} typeText - param type text.\n   * @param {string} [paramName] - param name.\n   * @param {string} [paramDesc] - param description.\n   * @returns {ParsedParam} formatted result.\n   *\n   * @example\n   * let value = '{number} param - this is number param';\n   * let {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value);\n   * let result = ParamParser.parseParam(typeText, paramName, paramDesc);\n   */\n  static parseParam(typeText = null, paramName = null, paramDesc = null) {\n    const result = {};\n\n    if (typeText) {\n      // check nullable\n      if (typeText[0] === \"?\") {\n        result.nullable = true;\n      } else if (typeText[0] === \"!\") {\n        result.nullable = false;\n      } else {\n        result.nullable = null;\n      }\n      typeText = typeText.replace(/^[?!]/, \"\");\n\n      // check record and union\n      if (typeText[0] === \"{\") {\n        result.types = [typeText];\n      } else if (typeText[0] === \"(\") {\n        typeText = typeText.replace(/^[(]/, \"\").replace(/[)]$/, \"\");\n        result.types = typeText.split(\"|\");\n      } else if (typeText.includes(\"|\")) {\n        if (typeText.match(/<.*?\\|.*?>/)) {\n          // union in generics. e.g. `Array<string|number>`\n          // hack: in this case, process this type in DocBuilder#_buildTypeDocLinkHTML\n          result.types = [typeText];\n        } else if (typeText.match(/^\\.\\.\\.\\(.*?\\)/)) {\n          // union with spread. e.g. `...(string|number)`\n          // hack: in this case, process this type in DocBuilder#_buildTypeDocLinkHTML\n          result.types = [typeText];\n        } else {\n          result.types = typeText.split(\"|\");\n        }\n      } else {\n        result.types = [typeText];\n      }\n\n      if (typeText.indexOf(\"...\") === 0) {\n        result.spread = true;\n      } else {\n        result.spread = false;\n      }\n    } else {\n      result.types = [\"\"];\n    }\n\n    if (result.types.some(t => !t)) {\n      throw new Error(`Empty Type found name=${paramName} desc=${paramDesc}`);\n    }\n\n    if (paramName) {\n      // check optional\n      if (paramName[0] === \"[\") {\n        result.optional = true;\n        paramName = paramName.replace(/^[\\[]/, \"\").replace(/[\\]]$/, \"\");\n      } else {\n        result.optional = false;\n      }\n\n      // check default value\n      const pair = paramName.split(\"=\");\n      if (pair.length === 2) {\n        result.defaultValue = pair[1];\n        try {\n          const raw = JSON.parse(pair[1]);\n          result.defaultRaw = raw;\n        } catch (e) {\n          result.defaultRaw = pair[1];\n        }\n      }\n\n      result.name = pair[0].trim();\n    }\n\n    result.description = paramDesc;\n\n    return result;\n  }\n}\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Parser/ParamParser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 237,
    "kind": "class",
    "name": "ParamParser",
    "memberof": "src/Parser/ParamParser.js",
    "static": true,
    "longname": "src/Parser/ParamParser.js~ParamParser",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Parser/ParamParser.js",
    "importStyle": "ParamParser",
    "description": "Param Type Parser class.",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 238,
    "kind": "method",
    "name": "parseParamValue",
    "memberof": "src/Parser/ParamParser.js~ParamParser",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Parser/ParamParser.js~ParamParser.parseParamValue",
    "access": "public",
    "description": "parse param value.",
    "examples": [
      "let value = '{number} param - this is number param';\nlet {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value);\n\nlet value = '{number} this is number return value';\nlet {typeText, paramDesc} = ParamParser.parseParamValue(value, true, false, true);\n\nlet value = '{number}';\nlet {typeText} = ParamParser.parseParamValue(value, true, false, false);"
    ],
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "param value."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "type",
        "description": "if true, contain param type."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "name",
        "description": "if true, contain param name."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "desc",
        "description": "if true, contain param description."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{typeText: string, paramName: string, paramDesc: string}"
      ],
      "spread": false,
      "description": "parsed value."
    }
  },
  {
    "__docId__": 239,
    "kind": "method",
    "name": "parseParam",
    "memberof": "src/Parser/ParamParser.js~ParamParser",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Parser/ParamParser.js~ParamParser.parseParam",
    "access": "public",
    "description": "parse param text and build formatted result.",
    "examples": [
      "let value = '{number} param - this is number param';\nlet {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value);\nlet result = ParamParser.parseParam(typeText, paramName, paramDesc);"
    ],
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ParsedParam} formatted result."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "typeText",
        "description": "param type text."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "paramName",
        "description": "param name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "paramDesc",
        "description": "param description."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ParsedParam"
      ],
      "spread": false,
      "description": "formatted result."
    }
  },
  {
    "__docId__": 240,
    "kind": "file",
    "name": "src/Plugin/Plugin.js",
    "content": "import path from \"path\";\n\n/**\n * Plugin system for your plugin.\n */\nclass Plugin {\n  /**\n   * create instance.\n   */\n  constructor() {\n    this._plugins = null;\n  }\n\n  /**\n   * initialize with plugin property.\n   * @param {Array<{name: string, option: object}>} plugins - expect config.plugins property.\n   */\n  init(plugins = []) {\n    this.onHandlePlugins(plugins);\n  }\n\n  /**\n   * exec plugin handler.\n   * @param {string} handlerName - handler name(e.g. onHandleCode)\n   * @param {PluginEvent} ev - plugin event object.\n   * @private\n   */\n  _execHandler(handlerName, ev) {\n    /* eslint-disable global-require */\n    for (const item of this._plugins) {\n      let plugin;\n      if (item.plugin) {\n        plugin = item.plugin;\n      } else if (item.name.match(/^[.\\/]/)) {\n        const pluginPath = path.resolve(item.name);\n        plugin = require(pluginPath);\n      } else {\n        module.paths.push(\"./node_modules\");\n        plugin = require(item.name);\n        module.paths.pop();\n      }\n\n      if (!plugin[handlerName]) continue;\n\n      ev.data.option = item.option;\n      plugin[handlerName](ev);\n    }\n  }\n\n  onHandlePlugins(plugins) {\n    this._plugins = plugins;\n    const ev = new PluginEvent({plugins});\n    this._execHandler(\"onHandlePlugins\", ev);\n    this._plugins = ev.data.plugins;\n  }\n\n  /**\n   * handle start.\n   */\n  onStart() {\n    const ev = new PluginEvent();\n    this._execHandler(\"onStart\", ev);\n  }\n\n  /**\n   * handle config.\n   * @param {ESDocConfig} config - original esdoc2 config.\n   * @returns {ESDocConfig} handled config.\n   */\n  onHandleConfig(config) {\n    const ev = new PluginEvent({config});\n    this._execHandler(\"onHandleConfig\", ev);\n    return ev.data.config;\n  }\n\n  /**\n   * handle code.\n   * @param {string} code - original code.\n   * @param {string} filePath - source code file path.\n   * @returns {string} handled code.\n   */\n  onHandleCode(code, filePath) {\n    const ev = new PluginEvent({code});\n    ev.data.filePath = filePath;\n    this._execHandler(\"onHandleCode\", ev);\n    return ev.data.code;\n  }\n\n  /**\n   * handle code parser.\n   * @param {function(code: string)} parser - original js parser.\n   * @param {object} parserOption - default babylon options.\n   * @param {string} filePath - source code file path.\n   * @param {string} code - original code.\n   * @returns {{parser: function(code: string), parserOption: Object}} handled parser.\n   */\n  onHandleCodeParser(parser, parserOption, filePath, code) {\n    const ev = new PluginEvent();\n    ev.data = {parser, parserOption, filePath, code};\n    this._execHandler(\"onHandleCodeParser\", ev);\n    return {parser: ev.data.parser, parserOption: ev.data.parserOption};\n  }\n\n  /**\n   * handle AST.\n   * @param {AST} ast - original ast.\n   * @param {string} filePath - source code file path.\n   * @param {string} code - original code.\n   * @returns {AST} handled AST.\n   */\n  onHandleAST(ast, filePath, code) {\n    const ev = new PluginEvent({ast});\n    ev.data.filePath = filePath;\n    ev.data.code = code;\n    this._execHandler(\"onHandleAST\", ev);\n    return ev.data.ast;\n  }\n\n  /**\n   * handle docs.\n   * @param {Object[]} docs - docs.\n   * @returns {Object[]} handled docs.\n   */\n  onHandleDocs(docs) {\n    const ev = new PluginEvent({docs});\n    this._execHandler(\"onHandleDocs\", ev);\n    return ev.data.docs;\n  }\n\n  /**\n   * handle publish\n   * @param {function(filePath: string, content: string)} writeFile - write content.\n   * @param {function(srcPath: string, destPath: string)} copyDir - copy directory.\n   * @param {function(filePath: string):string} readFile - read content.\n   */\n  onPublish(writeFile, copyDir, readFile) {\n    const ev = new PluginEvent({});\n\n    // hack: fixme\n    ev.data.writeFile = writeFile;\n    ev.data.copyFile = copyDir;\n    ev.data.copyDir = copyDir;\n    ev.data.readFile = readFile;\n\n    this._execHandler(\"onPublish\", ev);\n  }\n\n  /**\n   * handle content.\n   * @param {string} content - original content.\n   * @param {string} fileName - the fileName of the HTML file.\n   * @returns {string} handled HTML.\n   */\n  onHandleContent(content, fileName) {\n    const ev = new PluginEvent({content, fileName});\n    this._execHandler(\"onHandleContent\", ev);\n    return ev.data.content;\n  }\n\n  /**\n   * handle complete\n   */\n  onComplete() {\n    const ev = new PluginEvent();\n    this._execHandler(\"onComplete\", ev);\n  }\n}\n\n/**\n * Plugin Event class.\n */\nexport class PluginEvent {\n  /**\n   * create instance.\n   * @param {Object} data - event content.\n   */\n  constructor(data = {}) {\n    this.data = copy(data);\n  }\n}\n\nfunction copy(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/**\n * Instance of Plugin class.\n */\nexport default new Plugin();\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Plugin/Plugin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 241,
    "kind": "class",
    "name": "PluginEvent",
    "memberof": "src/Plugin/Plugin.js",
    "static": true,
    "longname": "src/Plugin/Plugin.js~PluginEvent",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Plugin/Plugin.js",
    "importStyle": "{PluginEvent}",
    "description": "Plugin Event class.",
    "lineNumber": 172,
    "interface": false
  },
  {
    "__docId__": 242,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Plugin/Plugin.js~PluginEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugin/Plugin.js~PluginEvent#constructor",
    "access": "public",
    "description": "create instance.",
    "lineNumber": 177,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "event content."
      }
    ]
  },
  {
    "__docId__": 243,
    "kind": "member",
    "name": "data",
    "memberof": "src/Plugin/Plugin.js~PluginEvent",
    "static": false,
    "longname": "src/Plugin/Plugin.js~PluginEvent#data",
    "access": "public",
    "description": null,
    "lineNumber": 178,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 244,
    "kind": "function",
    "name": "copy",
    "memberof": "src/Plugin/Plugin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Plugin/Plugin.js~copy",
    "access": "public",
    "export": false,
    "importPath": "esdoc2/out/src/Plugin/Plugin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 182,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 245,
    "kind": "class",
    "name": "Plugin",
    "memberof": "src/Plugin/Plugin.js",
    "static": true,
    "longname": "src/Plugin/Plugin.js~Plugin",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Plugin/Plugin.js",
    "importStyle": null,
    "description": "Plugin system for your plugin.",
    "lineNumber": 6,
    "pseudoExport": true,
    "interface": false
  },
  {
    "__docId__": 246,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Plugin/Plugin.js~Plugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugin/Plugin.js~Plugin#constructor",
    "access": "public",
    "description": "create instance.",
    "lineNumber": 10
  },
  {
    "__docId__": 247,
    "kind": "member",
    "name": "_plugins",
    "memberof": "src/Plugin/Plugin.js~Plugin",
    "static": false,
    "longname": "src/Plugin/Plugin.js~Plugin#_plugins",
    "access": "private",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 248,
    "kind": "method",
    "name": "init",
    "memberof": "src/Plugin/Plugin.js~Plugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugin/Plugin.js~Plugin#init",
    "access": "public",
    "description": "initialize with plugin property.",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<{name: string, option: object}>"
        ],
        "spread": false,
        "optional": false,
        "name": "plugins",
        "description": "expect config.plugins property."
      }
    ],
    "return": null
  },
  {
    "__docId__": 249,
    "kind": "method",
    "name": "_execHandler",
    "memberof": "src/Plugin/Plugin.js~Plugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugin/Plugin.js~Plugin#_execHandler",
    "access": "private",
    "description": "exec plugin handler.",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "handlerName",
        "description": "handler name(e.g. onHandleCode)"
      },
      {
        "nullable": null,
        "types": [
          "PluginEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "ev",
        "description": "plugin event object."
      }
    ],
    "return": null
  },
  {
    "__docId__": 250,
    "kind": "method",
    "name": "onHandlePlugins",
    "memberof": "src/Plugin/Plugin.js~Plugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugin/Plugin.js~Plugin#onHandlePlugins",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "plugins",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 253,
    "kind": "method",
    "name": "onStart",
    "memberof": "src/Plugin/Plugin.js~Plugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugin/Plugin.js~Plugin#onStart",
    "access": "public",
    "description": "handle start.",
    "lineNumber": 60,
    "params": [],
    "return": null
  },
  {
    "__docId__": 254,
    "kind": "method",
    "name": "onHandleConfig",
    "memberof": "src/Plugin/Plugin.js~Plugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugin/Plugin.js~Plugin#onHandleConfig",
    "access": "public",
    "description": "handle config.",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ESDocConfig} handled config."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ESDocConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "original esdoc2 config."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ESDocConfig"
      ],
      "spread": false,
      "description": "handled config."
    }
  },
  {
    "__docId__": 255,
    "kind": "method",
    "name": "onHandleCode",
    "memberof": "src/Plugin/Plugin.js~Plugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugin/Plugin.js~Plugin#onHandleCode",
    "access": "public",
    "description": "handle code.",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} handled code."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "code",
        "description": "original code."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "source code file path."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "handled code."
    }
  },
  {
    "__docId__": 256,
    "kind": "method",
    "name": "onHandleCodeParser",
    "memberof": "src/Plugin/Plugin.js~Plugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugin/Plugin.js~Plugin#onHandleCodeParser",
    "access": "public",
    "description": "handle code parser.",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{parser: function(code: string), parserOption: Object}} handled parser."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function(code: string)"
        ],
        "spread": false,
        "optional": false,
        "name": "parser",
        "description": "original js parser."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "parserOption",
        "description": "default babylon options."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "source code file path."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "code",
        "description": "original code."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{parser: function(code: string), parserOption: Object}"
      ],
      "spread": false,
      "description": "handled parser."
    }
  },
  {
    "__docId__": 257,
    "kind": "method",
    "name": "onHandleAST",
    "memberof": "src/Plugin/Plugin.js~Plugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugin/Plugin.js~Plugin#onHandleAST",
    "access": "public",
    "description": "handle AST.",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AST} handled AST."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "AST"
        ],
        "spread": false,
        "optional": false,
        "name": "ast",
        "description": "original ast."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "source code file path."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "code",
        "description": "original code."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AST"
      ],
      "spread": false,
      "description": "handled AST."
    }
  },
  {
    "__docId__": 258,
    "kind": "method",
    "name": "onHandleDocs",
    "memberof": "src/Plugin/Plugin.js~Plugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugin/Plugin.js~Plugin#onHandleDocs",
    "access": "public",
    "description": "handle docs.",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object[]} handled docs."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "docs",
        "description": "docs."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object[]"
      ],
      "spread": false,
      "description": "handled docs."
    }
  },
  {
    "__docId__": 259,
    "kind": "method",
    "name": "onPublish",
    "memberof": "src/Plugin/Plugin.js~Plugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugin/Plugin.js~Plugin#onPublish",
    "access": "public",
    "description": "handle publish",
    "lineNumber": 136,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(filePath: string, content: string)"
        ],
        "spread": false,
        "optional": false,
        "name": "writeFile",
        "description": "write content."
      },
      {
        "nullable": null,
        "types": [
          "function(srcPath: string, destPath: string)"
        ],
        "spread": false,
        "optional": false,
        "name": "copyDir",
        "description": "copy directory."
      },
      {
        "nullable": null,
        "types": [
          "function(filePath: string):string"
        ],
        "spread": false,
        "optional": false,
        "name": "readFile",
        "description": "read content."
      }
    ],
    "return": null
  },
  {
    "__docId__": 260,
    "kind": "method",
    "name": "onHandleContent",
    "memberof": "src/Plugin/Plugin.js~Plugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugin/Plugin.js~Plugin#onHandleContent",
    "access": "public",
    "description": "handle content.",
    "lineNumber": 154,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} handled HTML."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "content",
        "description": "original content."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fileName",
        "description": "the fileName of the HTML file."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "handled HTML."
    }
  },
  {
    "__docId__": 261,
    "kind": "method",
    "name": "onComplete",
    "memberof": "src/Plugin/Plugin.js~Plugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Plugin/Plugin.js~Plugin#onComplete",
    "access": "public",
    "description": "handle complete",
    "lineNumber": 163,
    "params": [],
    "return": null
  },
  {
    "__docId__": 262,
    "kind": "variable",
    "name": "plugin",
    "memberof": "src/Plugin/Plugin.js",
    "static": true,
    "longname": "src/Plugin/Plugin.js~plugin",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Plugin/Plugin.js",
    "importStyle": "plugin",
    "description": "Instance of Plugin class.",
    "lineNumber": 189,
    "type": {
      "types": [
        "src/Plugin/Plugin.js~Plugin"
      ]
    }
  },
  {
    "__docId__": 263,
    "kind": "file",
    "name": "src/Typedef/typedef.js",
    "content": "/**\n * esdoc2 config object.\n * @typedef {Object} ESDocConfig\n * @property {!string} source - directory path of javascript source code.\n * @property {!string} destination - directory path of output.\n * @property {string} [title]\n * @property {string[]} [includes=[\"\\\\.(js|es6)$\"]]\n * @property {string[]} [excludes=[\"\\\\.config\\\\.(js|es6)$\"]]\n * @property {string[]} [access=[\"public\", \"protected\"]]\n * @property {boolean} [autoPrivate=true]\n * @property {boolean} [builtinExternal=true]\n * @property {boolean} [unexportIdentifier=false]\n * @property {boolean} [undocumentIdentifier=true]\n * @property {boolean} [coverage=true]\n * @property {boolean} [debug=false]\n * @property {string} [index=\"./README.md\"]\n * @property {string} [package=\"./package.json\"]\n * @property {string[]} [styles=[]]\n * @property {string[]} [scripts=[]]\n * @property {{type: string, source: string, includes: string[], excludes: string[]}} test\n * @property {Object} [manual]\n * @property {boolean} manual.globalIndex\n * @property {string} manual.asset\n * @property {string} manual.index\n * @property {string[]} manual.overview\n * @property {string[]} manual.design\n * @property {string[]} manual.installation\n * @property {string[]} manual.usage\n * @property {string[]} manual.tutorial\n * @property {string[]} manual.configuration\n * @property {string[]} manual.example\n * @property {string[]} manual.advanced\n * @property {string[]} manual.faq\n * @property {string[]} manual.changelog\n * @property {Object} [experimentalProposal]\n * @property {boolean} experimentalProposal.classProperties\n * @property {boolean} experimentalProposal.objectRestSpread\n * @property {boolean} experimentalProposal.doExpressions\n * @property {boolean} experimentalProposal.functionBind\n * @property {boolean} experimentalProposal.functionSent\n * @property {boolean} experimentalProposal.asyncGenerators\n * @property {boolean} experimentalProposal.decorators\n * @property {boolean} experimentalProposal.exportExtensions\n * @property {boolean} experimentalProposal.dynamicImport\n * @see https://esdoc2.org/config.html\n */\n\n/**\n * doc comment tag.\n * @typedef {Object} Tag\n * @property {string} tagName\n * @property {*} tagValue\n */\n\n/**\n * Parsed doc comment.\n * @typedef {Object} DocObject\n */\n\n/**\n * @typedef {Object} AST\n * @property {Object} body\n * @property {Object[]} leadingComments\n * @see https://github.com/estree/estree\n */\n\n/**\n * @typedef {Object} ASTNode\n * @see https://github.com/estree/estree\n * @property {string} type\n * @property {Object} [superClass]\n * @property {Object[]} [leadingComments]\n * @property {Object[]} [trailingComments]\n * @property {Object[]} [body]\n * @property {ASTNode} [parent] - this is customize by esdoc2\n */\n\n/**\n * @typedef {Object} NPMPackageObject\n * @see https://docs.npmjs.com/files/package.json\n */\n\n/**\n * @typedef {Object} Taffy\n * @see http://www.taffydb.com/\n */\n\n/**\n * @typedef {Object} IceCap\n * @see https://github.com/h13i32maru/ice-cap\n */\n\n/**\n * @typedef {Object} CoverageObject\n * @property {string} coverage - ratio.\n * @property {number} expectCount - all identifier count.\n * @property {number} actualCount - documented identifier count.\n * @property {Object<string, Object>} files - file name and coverage.\n */\n\n/**\n * ESDocCLI uses argv\n * @typedef {Object} ESDocCLIArgv\n * @property {boolean} [h] - for help\n * @property {boolean} [help] - for help\n * @property {boolean} [v] - for version\n * @property {boolean} [version] - for version\n * @property {string} [c] - for config file path\n * @property {string[]} [_] - for source directory path\n */\n\n/**\n * @typedef {Object} DocTypedef\n */\n\n/**\n * @typedef {Object} PackageTypedef\n * @property {Object} repository\n * @property {string} repository.url\n */\n\n/**\n * @typedef {Object} ParsedParam\n * @property {boolean} [nullable]\n * @property {string[]} types\n * @property {boolean} [spread]\n * @property {boolean} [optional]\n * @property {string} [defaultValue]\n * @property {*} [defaultRaw]\n * @property {string} [name]\n * @property {string} [description]\n */\n\n/**\n * @todo remove this typedef.\n * @typedef {Object} IceCapInstanceTypedef\n * @property {function} loop\n * @property {function} attr\n * @property {function} text\n * @property {function} load\n * @property {function} into\n * @property {function} drop\n * @property {string} html\n */\n\n/**\n * @todo remove this typedef.\n * @typedef {Object} TaffyCursor\n * @property {function} each\n */\n\n/**\n * @typedef {Object} ManualConfigItem\n * @property {string} label\n * @property {string[]} paths\n * @property {string} [fileName]\n * @property {string} [reference]\n */\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Typedef/typedef.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 264,
    "kind": "typedef",
    "name": "ESDocConfig",
    "memberof": "src/Typedef/typedef.js",
    "static": true,
    "longname": "src/Typedef/typedef.js~ESDocConfig",
    "access": "public",
    "description": "esdoc2 config object.",
    "see": [
      "https://esdoc2.org/config.html"
    ],
    "properties": [
      {
        "nullable": false,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": "directory path of javascript source code."
      },
      {
        "nullable": false,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "destination",
        "description": "directory path of output."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "title",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[\"\\\\.(js|es6)$\"]",
        "defaultRaw": [
          "\\.(js|es6)$"
        ],
        "name": "includes",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[\"\\\\.config\\\\.(js|es6)$\"]",
        "defaultRaw": [
          "\\.config\\.(js|es6)$"
        ],
        "name": "excludes",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[\"public\", \"protected\"]",
        "defaultRaw": [
          "public",
          "protected"
        ],
        "name": "access",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "autoPrivate",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "builtinExternal",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "unexportIdentifier",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "undocumentIdentifier",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "coverage",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "debug",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"./README.md\"",
        "defaultRaw": "./README.md",
        "name": "index",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"./package.json\"",
        "defaultRaw": "./package.json",
        "name": "package",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "styles",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "scripts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{type: string, source: string, includes: string[], excludes: string[]}"
        ],
        "spread": false,
        "optional": false,
        "name": "test",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "manual",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "manual.globalIndex",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "manual.asset",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "manual.index",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "manual.overview",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "manual.design",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "manual.installation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "manual.usage",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "manual.tutorial",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "manual.configuration",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "manual.example",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "manual.advanced",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "manual.faq",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "manual.changelog",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "experimentalProposal",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "experimentalProposal.classProperties",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "experimentalProposal.objectRestSpread",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "experimentalProposal.doExpressions",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "experimentalProposal.functionBind",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "experimentalProposal.functionSent",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "experimentalProposal.asyncGenerators",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "experimentalProposal.decorators",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "experimentalProposal.exportExtensions",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "experimentalProposal.dynamicImport",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ESDocConfig"
    }
  },
  {
    "__docId__": 265,
    "kind": "typedef",
    "name": "Tag",
    "memberof": "src/Typedef/typedef.js",
    "static": true,
    "longname": "src/Typedef/typedef.js~Tag",
    "access": "public",
    "description": "doc comment tag.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tagName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "tagValue",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Tag"
    }
  },
  {
    "__docId__": 266,
    "kind": "typedef",
    "name": "DocObject",
    "memberof": "src/Typedef/typedef.js",
    "static": true,
    "longname": "src/Typedef/typedef.js~DocObject",
    "access": "public",
    "description": "Parsed doc comment.",
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "DocObject"
    }
  },
  {
    "__docId__": 267,
    "kind": "typedef",
    "name": "AST",
    "memberof": "src/Typedef/typedef.js",
    "static": true,
    "longname": "src/Typedef/typedef.js~AST",
    "access": "public",
    "description": "",
    "see": [
      "https://github.com/estree/estree"
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "body",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "leadingComments",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "AST"
    }
  },
  {
    "__docId__": 268,
    "kind": "typedef",
    "name": "ASTNode",
    "memberof": "src/Typedef/typedef.js",
    "static": true,
    "longname": "src/Typedef/typedef.js~ASTNode",
    "access": "public",
    "description": "",
    "see": [
      "https://github.com/estree/estree"
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "superClass",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": true,
        "name": "leadingComments",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": true,
        "name": "trailingComments",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": true,
        "name": "body",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": true,
        "name": "parent",
        "description": "this is customize by esdoc2"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ASTNode"
    }
  },
  {
    "__docId__": 269,
    "kind": "typedef",
    "name": "NPMPackageObject",
    "memberof": "src/Typedef/typedef.js",
    "static": true,
    "longname": "src/Typedef/typedef.js~NPMPackageObject",
    "access": "public",
    "description": "",
    "see": [
      "https://docs.npmjs.com/files/package.json"
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "NPMPackageObject"
    }
  },
  {
    "__docId__": 270,
    "kind": "typedef",
    "name": "Taffy",
    "memberof": "src/Typedef/typedef.js",
    "static": true,
    "longname": "src/Typedef/typedef.js~Taffy",
    "access": "public",
    "description": "",
    "see": [
      "http://www.taffydb.com/"
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Taffy"
    }
  },
  {
    "__docId__": 271,
    "kind": "typedef",
    "name": "IceCap",
    "memberof": "src/Typedef/typedef.js",
    "static": true,
    "longname": "src/Typedef/typedef.js~IceCap",
    "access": "public",
    "description": "",
    "see": [
      "https://github.com/h13i32maru/ice-cap"
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "IceCap"
    }
  },
  {
    "__docId__": 272,
    "kind": "typedef",
    "name": "CoverageObject",
    "memberof": "src/Typedef/typedef.js",
    "static": true,
    "longname": "src/Typedef/typedef.js~CoverageObject",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "coverage",
        "description": "ratio."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "expectCount",
        "description": "all identifier count."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "actualCount",
        "description": "documented identifier count."
      },
      {
        "nullable": null,
        "types": [
          "Object<string, Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "files",
        "description": "file name and coverage."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "CoverageObject"
    }
  },
  {
    "__docId__": 273,
    "kind": "typedef",
    "name": "ESDocCLIArgv",
    "memberof": "src/Typedef/typedef.js",
    "static": true,
    "longname": "src/Typedef/typedef.js~ESDocCLIArgv",
    "access": "public",
    "description": "ESDocCLI uses argv",
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "h",
        "description": "for help"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "help",
        "description": "for help"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "v",
        "description": "for version"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "version",
        "description": "for version"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "c",
        "description": "for config file path"
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "name": "_",
        "description": "for source directory path"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ESDocCLIArgv"
    }
  },
  {
    "__docId__": 274,
    "kind": "typedef",
    "name": "DocTypedef",
    "memberof": "src/Typedef/typedef.js",
    "static": true,
    "longname": "src/Typedef/typedef.js~DocTypedef",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "DocTypedef"
    }
  },
  {
    "__docId__": 275,
    "kind": "typedef",
    "name": "PackageTypedef",
    "memberof": "src/Typedef/typedef.js",
    "static": true,
    "longname": "src/Typedef/typedef.js~PackageTypedef",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "repository",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "repository.url",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "PackageTypedef"
    }
  },
  {
    "__docId__": 276,
    "kind": "typedef",
    "name": "ParsedParam",
    "memberof": "src/Typedef/typedef.js",
    "static": true,
    "longname": "src/Typedef/typedef.js~ParsedParam",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "nullable",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "types",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "spread",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "optional",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "defaultValue",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "defaultRaw",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "description",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ParsedParam"
    }
  },
  {
    "__docId__": 277,
    "kind": "typedef",
    "name": "IceCapInstanceTypedef",
    "memberof": "src/Typedef/typedef.js",
    "static": true,
    "longname": "src/Typedef/typedef.js~IceCapInstanceTypedef",
    "access": "public",
    "description": "",
    "todo": [
      "remove this typedef."
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "loop",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "attr",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "load",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "into",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "drop",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "html",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "IceCapInstanceTypedef"
    }
  },
  {
    "__docId__": 278,
    "kind": "typedef",
    "name": "TaffyCursor",
    "memberof": "src/Typedef/typedef.js",
    "static": true,
    "longname": "src/Typedef/typedef.js~TaffyCursor",
    "access": "public",
    "description": "",
    "todo": [
      "remove this typedef."
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "each",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "TaffyCursor"
    }
  },
  {
    "__docId__": 279,
    "kind": "typedef",
    "name": "ManualConfigItem",
    "memberof": "src/Typedef/typedef.js",
    "static": true,
    "longname": "src/Typedef/typedef.js~ManualConfigItem",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "label",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "paths",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "fileName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "reference",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ManualConfigItem"
    }
  },
  {
    "__docId__": 280,
    "kind": "file",
    "name": "src/Util/ASTNodeContainer.js",
    "content": "class ASTNodeContainer {\n  constructor() {\n    this._docId = 0;\n    this._nodes = {};\n  }\n\n  addNode(node) {\n    this._nodes[this._docId] = node;\n    return this._docId++;\n  }\n\n  getNode(id) {\n    return this._nodes[id];\n  }\n}\n\nexport default new ASTNodeContainer();\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Util/ASTNodeContainer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 281,
    "kind": "class",
    "name": "ASTNodeContainer",
    "memberof": "src/Util/ASTNodeContainer.js",
    "static": true,
    "longname": "src/Util/ASTNodeContainer.js~ASTNodeContainer",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Util/ASTNodeContainer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "pseudoExport": true,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 282,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Util/ASTNodeContainer.js~ASTNodeContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Util/ASTNodeContainer.js~ASTNodeContainer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 283,
    "kind": "member",
    "name": "_docId",
    "memberof": "src/Util/ASTNodeContainer.js~ASTNodeContainer",
    "static": false,
    "longname": "src/Util/ASTNodeContainer.js~ASTNodeContainer#_docId",
    "access": "private",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 284,
    "kind": "member",
    "name": "_nodes",
    "memberof": "src/Util/ASTNodeContainer.js~ASTNodeContainer",
    "static": false,
    "longname": "src/Util/ASTNodeContainer.js~ASTNodeContainer#_nodes",
    "access": "private",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "addNode",
    "memberof": "src/Util/ASTNodeContainer.js~ASTNodeContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Util/ASTNodeContainer.js~ASTNodeContainer#addNode",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "node",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 286,
    "kind": "method",
    "name": "getNode",
    "memberof": "src/Util/ASTNodeContainer.js~ASTNodeContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Util/ASTNodeContainer.js~ASTNodeContainer#getNode",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 287,
    "kind": "variable",
    "name": "aSTNodeContainer",
    "memberof": "src/Util/ASTNodeContainer.js",
    "static": true,
    "longname": "src/Util/ASTNodeContainer.js~aSTNodeContainer",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Util/ASTNodeContainer.js",
    "importStyle": "aSTNodeContainer",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "src/Util/ASTNodeContainer.js~ASTNodeContainer"
      ]
    }
  },
  {
    "__docId__": 288,
    "kind": "file",
    "name": "src/Util/ASTUtil.js",
    "content": "import babelTraverse from \"babel-traverse\";\n\n/**\n * Utility for AST.\n */\nexport default class ASTUtil {\n  /**\n   * sanitize node.\n   * change node type to `Identifier` and empty comment.\n   * @param {ASTNode} node - target node.\n   */\n  static sanitize(node) {\n    if (!node) return;\n    node.type = \"Identifier\";\n    node.name = \"_\";\n    node.leadingComments = [];\n    node.trailingComments = [];\n  }\n\n  /**\n   * traverse ast nodes.\n   * @param {AST} ast - target AST.\n   * @param {function(node: Object, parent: Object, path: Object)} callback - this is called with each node.\n   */\n  static traverse(ast, callback) {\n    babelTraverse(ast, {\n      noScope: true,\n      enter: function(path) {\n        callback(path.node, path.parent, path);\n      }\n    });\n  }\n\n  /**\n   * find file path in import declaration by name.\n   * e.g. can find ``./foo/bar.js`` from ``import Bar from './foo/bar.js'`` by ``Bar``.\n   * @param {AST} ast - target AST.\n   * @param {string} name - identifier name.\n   * @returns {string|null} file path.\n   */\n  static findPathInImportDeclaration(ast, name) {\n    let path = null;\n\n    babelTraverse(ast, {\n      noScope: true,\n      enter: function(_path) {\n        const node = _path.node;\n        if (node.type !== \"ImportDeclaration\") return;\n\n        for (const spec of node.specifiers) {\n          const localName = spec.local.name;\n          if (localName === name) {\n            path = node.source.value;\n            _path.stop();\n          }\n        }\n      }\n    });\n\n    return path;\n  }\n\n  /**\n   * find VariableDeclaration node which has NewExpression.\n   * @param {string} name - variable name.\n   * @param {AST} ast - find in this ast.\n   * @returns {ASTNode|null} found ast node.\n   */\n  static findVariableDeclarationAndNewExpressionNode(name, ast) {\n    if (!name) return null;\n\n    for (const node of ast.program.body) {\n      if (node.type === \"VariableDeclaration\" &&\n        node.declarations[0].init &&\n        node.declarations[0].init.type === \"NewExpression\" &&\n        node.declarations[0].id.name === name) {\n        return node;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * find ClassDeclaration node.\n   * @param {string} name - class name.\n   * @param {AST} ast - find in this ast.\n   * @returns {{classNode: ASTNode|null, exported: boolean|null}} found ast node.\n   */\n  static findClassDeclarationNode(name, ast) {\n    if (!name) return {classNode: null, exported: null};\n\n    for (const node of ast.program.body) {\n      if (node.type === \"ClassDeclaration\" && node.id.name === name) return {classNode: node, exported: false};\n\n      if (node.type === \"ExportDefaultDeclaration\" || node.type === \"ExportNamedDeclaration\") {\n        if (node.declaration && node.declaration.type === \"ClassDeclaration\" && node.declaration.id && node.declaration.id.name === name) return {classNode: node, exported: true};\n      }\n    }\n\n    return {classNode: null, exported: null};\n  }\n\n  /**\n   * find FunctionDeclaration node.\n   * @param {string} name - function name.\n   * @param {AST} ast - find in this ast.\n   * @returns {ASTNode|null} found ast node.\n   */\n  static findFunctionDeclarationNode(name, ast) {\n    if (!name) return null;\n\n    for (const node of ast.program.body) {\n      if (node.type === \"FunctionDeclaration\" && node.id.name === name) return node;\n    }\n\n    return null;\n  }\n\n  /**\n   * find VariableDeclaration node.\n   * @param {string} name - variable name.\n   * @param {AST} ast - find in this ast.\n   * @returns {ASTNode|null} found ast node.\n   */\n  static findVariableDeclarationNode(name, ast) {\n    if (!name) return null;\n\n    for (const node of ast.program.body) {\n      if (node.type === \"VariableDeclaration\" && node.declarations[0].id.name === name) return node;\n    }\n\n    return null;\n  }\n\n  /**\n   * create VariableDeclaration node which has NewExpression.\n   * @param {string} name - variable name.\n   * @param {string} className - class name.\n   * @param {Object} loc - location.\n   * @returns {ASTNode} created node.\n   */\n  static createVariableDeclarationAndNewExpressionNode(name, className, loc) {\n    const node = {\n      type: \"VariableDeclaration\",\n      kind: \"let\",\n      loc: loc,\n      declarations: [\n        {\n          type: \"VariableDeclarator\",\n          id: {type: \"Identifier\", name: name},\n          init: {type: \"NewExpression\", callee: {type: \"Identifier\", name: className}}\n        }\n      ]\n    };\n\n    return node;\n  }\n\n  // /**\n  //  * flatten name of MemberExpression.\n  //  * @param {ASTNode} memberExpression - MemberExpression Node.\n  //  * @returns {string} flatten node name.\n  //  */\n  // static flattenMemberExpression(memberExpression) {\n  //   const names = [];\n  //   let object = memberExpression;\n  //   while (object) {\n  //     if (object.name) {\n  //       names.push(object.name);\n  //       break;\n  //     } else {\n  //       names.push(object.property.name);\n  //       object = object.object;\n  //     }\n  //   }\n  //   return names.reverse().join('.');\n  // }\n}\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Util/ASTUtil.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 289,
    "kind": "class",
    "name": "ASTUtil",
    "memberof": "src/Util/ASTUtil.js",
    "static": true,
    "longname": "src/Util/ASTUtil.js~ASTUtil",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Util/ASTUtil.js",
    "importStyle": "ASTUtil",
    "description": "Utility for AST.",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 290,
    "kind": "method",
    "name": "sanitize",
    "memberof": "src/Util/ASTUtil.js~ASTUtil",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Util/ASTUtil.js~ASTUtil.sanitize",
    "access": "public",
    "description": "sanitize node.\nchange node type to `Identifier` and empty comment.",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "target node."
      }
    ],
    "return": null
  },
  {
    "__docId__": 291,
    "kind": "method",
    "name": "traverse",
    "memberof": "src/Util/ASTUtil.js~ASTUtil",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Util/ASTUtil.js~ASTUtil.traverse",
    "access": "public",
    "description": "traverse ast nodes.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "AST"
        ],
        "spread": false,
        "optional": false,
        "name": "ast",
        "description": "target AST."
      },
      {
        "nullable": null,
        "types": [
          "function(node: Object, parent: Object, path: Object)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "this is called with each node."
      }
    ],
    "return": null
  },
  {
    "__docId__": 292,
    "kind": "method",
    "name": "findPathInImportDeclaration",
    "memberof": "src/Util/ASTUtil.js~ASTUtil",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Util/ASTUtil.js~ASTUtil.findPathInImportDeclaration",
    "access": "public",
    "description": "find file path in import declaration by name.\ne.g. can find ``./foo/bar.js`` from ``import Bar from './foo/bar.js'`` by ``Bar``.",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|null} file path."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "AST"
        ],
        "spread": false,
        "optional": false,
        "name": "ast",
        "description": "target AST."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "identifier name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "null"
      ],
      "spread": false,
      "description": "file path."
    }
  },
  {
    "__docId__": 293,
    "kind": "method",
    "name": "findVariableDeclarationAndNewExpressionNode",
    "memberof": "src/Util/ASTUtil.js~ASTUtil",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Util/ASTUtil.js~ASTUtil.findVariableDeclarationAndNewExpressionNode",
    "access": "public",
    "description": "find VariableDeclaration node which has NewExpression.",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ASTNode|null} found ast node."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "variable name."
      },
      {
        "nullable": null,
        "types": [
          "AST"
        ],
        "spread": false,
        "optional": false,
        "name": "ast",
        "description": "find in this ast."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ASTNode",
        "null"
      ],
      "spread": false,
      "description": "found ast node."
    }
  },
  {
    "__docId__": 294,
    "kind": "method",
    "name": "findClassDeclarationNode",
    "memberof": "src/Util/ASTUtil.js~ASTUtil",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Util/ASTUtil.js~ASTUtil.findClassDeclarationNode",
    "access": "public",
    "description": "find ClassDeclaration node.",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{classNode: ASTNode|null, exported: boolean|null}} found ast node."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "class name."
      },
      {
        "nullable": null,
        "types": [
          "AST"
        ],
        "spread": false,
        "optional": false,
        "name": "ast",
        "description": "find in this ast."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{classNode: ASTNode|null, exported: boolean|null}"
      ],
      "spread": false,
      "description": "found ast node."
    }
  },
  {
    "__docId__": 295,
    "kind": "method",
    "name": "findFunctionDeclarationNode",
    "memberof": "src/Util/ASTUtil.js~ASTUtil",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Util/ASTUtil.js~ASTUtil.findFunctionDeclarationNode",
    "access": "public",
    "description": "find FunctionDeclaration node.",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ASTNode|null} found ast node."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "function name."
      },
      {
        "nullable": null,
        "types": [
          "AST"
        ],
        "spread": false,
        "optional": false,
        "name": "ast",
        "description": "find in this ast."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ASTNode",
        "null"
      ],
      "spread": false,
      "description": "found ast node."
    }
  },
  {
    "__docId__": 296,
    "kind": "method",
    "name": "findVariableDeclarationNode",
    "memberof": "src/Util/ASTUtil.js~ASTUtil",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Util/ASTUtil.js~ASTUtil.findVariableDeclarationNode",
    "access": "public",
    "description": "find VariableDeclaration node.",
    "lineNumber": 126,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ASTNode|null} found ast node."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "variable name."
      },
      {
        "nullable": null,
        "types": [
          "AST"
        ],
        "spread": false,
        "optional": false,
        "name": "ast",
        "description": "find in this ast."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ASTNode",
        "null"
      ],
      "spread": false,
      "description": "found ast node."
    }
  },
  {
    "__docId__": 297,
    "kind": "method",
    "name": "createVariableDeclarationAndNewExpressionNode",
    "memberof": "src/Util/ASTUtil.js~ASTUtil",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Util/ASTUtil.js~ASTUtil.createVariableDeclarationAndNewExpressionNode",
    "access": "public",
    "description": "create VariableDeclaration node which has NewExpression.",
    "lineNumber": 143,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ASTNode} created node."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "variable name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "class name."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "loc",
        "description": "location."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ASTNode"
      ],
      "spread": false,
      "description": "created node."
    }
  },
  {
    "__docId__": 298,
    "kind": "file",
    "name": "src/Util/InvalidCodeLogger.js",
    "content": "import fs from \"fs-extra\";\n\n/**\n * logger for invalid code which can not be parsed with esdoc2.\n */\nclass InvalidCodeLogger {\n  constructor() {\n    this._logs = [];\n  }\n\n  /**\n   * show log.\n   * @param {string} filePath - invalid code in this file.\n   * @param {ASTNode} [node] - fail parsing node.\n   */\n  show(filePath, node) {\n    if (!node) {\n      this.showFile(filePath);\n      return;\n    }\n\n    const lines = fs.readFileSync(filePath).toString().split(\"\\n\");\n    const targetLines = [];\n    let start;\n    const end = node.loc.start.line;\n\n    if (node.leadingComments && node.leadingComments[0]) {\n      start = node.leadingComments[0].loc.start.line;\n    } else {\n      start = Math.max(0, end - 10);\n    }\n\n    for (let i = start - 1; i < end; i++) {\n      targetLines.push(`${i + 1}| ${lines[i]}`);\n    }\n\n    console.log(\"\u001b[31merror: could not process the following code.\u001b[32m\");\n    console.log(filePath);\n    console.log(targetLines.join(\"\\n\"));\n    console.log(\"\u001b[0m\");\n\n    this._logs.push({filePath: filePath, log: [start, end]});\n  }\n\n  /**\n   * show error log.\n   * @param {Error} error - target error.\n   */\n  showError(error) {\n    console.log(\"\u001b[31m\");\n    console.log(error);\n    console.log(\"\u001b[0m\");\n  }\n\n  /**\n   * show log.\n   * @param {string} filePath - invalid code in this file.\n   * @param {Error} error - error object.\n   */\n  showFile(filePath, error) {\n    const lines = fs.readFileSync(filePath).toString().split(\"\\n\");\n    const start = Math.max(error.loc.line - 3, 1);\n    const end = Math.min(error.loc.line + 3, lines.length);\n    const targetLines = [];\n    for (let i = start - 1; i < end; i++) {\n      targetLines.push(`${i + 1}| ${lines[i]}`);\n    }\n\n    console.log(\"\u001b[31mwarning: could not parse the following code. if you want to use ECMAScript proposals, see https://esdoc2.org/manual/feature.html#ecmascript-proposal\u001b[32m\");\n    console.log(filePath);\n    console.log(`${targetLines.join(\"\\n\")}\u001b[0m`);\n\n    this._logs.push({filePath: filePath, log: [start, end]});\n  }\n}\n\n/**\n * singleton for {@link InvalidCodeLogger}\n */\nexport default new InvalidCodeLogger();\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Util/InvalidCodeLogger.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 299,
    "kind": "class",
    "name": "InvalidCodeLogger",
    "memberof": "src/Util/InvalidCodeLogger.js",
    "static": true,
    "longname": "src/Util/InvalidCodeLogger.js~InvalidCodeLogger",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Util/InvalidCodeLogger.js",
    "importStyle": null,
    "description": "logger for invalid code which can not be parsed with esdoc2.",
    "lineNumber": 6,
    "pseudoExport": true,
    "interface": false
  },
  {
    "__docId__": 300,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Util/InvalidCodeLogger.js~InvalidCodeLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Util/InvalidCodeLogger.js~InvalidCodeLogger#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 301,
    "kind": "member",
    "name": "_logs",
    "memberof": "src/Util/InvalidCodeLogger.js~InvalidCodeLogger",
    "static": false,
    "longname": "src/Util/InvalidCodeLogger.js~InvalidCodeLogger#_logs",
    "access": "private",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 302,
    "kind": "method",
    "name": "show",
    "memberof": "src/Util/InvalidCodeLogger.js~InvalidCodeLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Util/InvalidCodeLogger.js~InvalidCodeLogger#show",
    "access": "public",
    "description": "show log.",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "invalid code in this file."
      },
      {
        "nullable": null,
        "types": [
          "ASTNode"
        ],
        "spread": false,
        "optional": true,
        "name": "node",
        "description": "fail parsing node."
      }
    ],
    "return": null
  },
  {
    "__docId__": 303,
    "kind": "method",
    "name": "showError",
    "memberof": "src/Util/InvalidCodeLogger.js~InvalidCodeLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Util/InvalidCodeLogger.js~InvalidCodeLogger#showError",
    "access": "public",
    "description": "show error log.",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "Error"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": "target error."
      }
    ],
    "return": null
  },
  {
    "__docId__": 304,
    "kind": "method",
    "name": "showFile",
    "memberof": "src/Util/InvalidCodeLogger.js~InvalidCodeLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Util/InvalidCodeLogger.js~InvalidCodeLogger#showFile",
    "access": "public",
    "description": "show log.",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "invalid code in this file."
      },
      {
        "nullable": null,
        "types": [
          "Error"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": "error object."
      }
    ],
    "return": null
  },
  {
    "__docId__": 305,
    "kind": "variable",
    "name": "invalidCodeLogger",
    "memberof": "src/Util/InvalidCodeLogger.js",
    "static": true,
    "longname": "src/Util/InvalidCodeLogger.js~invalidCodeLogger",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Util/InvalidCodeLogger.js",
    "importStyle": "invalidCodeLogger",
    "description": "singleton for {@link InvalidCodeLogger}",
    "lineNumber": 80,
    "type": {
      "types": [
        "src/Util/InvalidCodeLogger.js~InvalidCodeLogger"
      ]
    }
  },
  {
    "__docId__": 306,
    "kind": "file",
    "name": "src/Util/NPMUtil.js",
    "content": "import {resolve} from \"path\";\n\n/**\n * Node Package Manager(npm) util class.\n */\nexport default class NPMUtil {\n  /**\n   * find esdoc2 package.json object.\n   * @returns {Object} package.json object.\n   */\n  static findPackage() {\n    let packageObj = null;\n    try {\n      const packageFilePath = resolve(__dirname, \"../../package.json\");\n      packageObj = require(packageFilePath);\n    } catch (e) {\n      const packageFilePath = resolve(__dirname, \"../../../package.json\");\n      packageObj = require(packageFilePath);\n    }\n\n    return packageObj;\n  }\n}\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Util/NPMUtil.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 307,
    "kind": "class",
    "name": "NPMUtil",
    "memberof": "src/Util/NPMUtil.js",
    "static": true,
    "longname": "src/Util/NPMUtil.js~NPMUtil",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Util/NPMUtil.js",
    "importStyle": "NPMUtil",
    "description": "Node Package Manager(npm) util class.",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 308,
    "kind": "method",
    "name": "findPackage",
    "memberof": "src/Util/NPMUtil.js~NPMUtil",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Util/NPMUtil.js~NPMUtil.findPackage",
    "access": "public",
    "description": "find esdoc2 package.json object.",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} package.json object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "package.json object."
    },
    "params": []
  },
  {
    "__docId__": 309,
    "kind": "file",
    "name": "src/Util/NamingUtil.js",
    "content": "import path from \"path\";\n\nconst filePathMap = {};\n\n/**\n * Identifier Naming Util class.\n */\nexport default class NamingUtil {\n  /**\n   * naming with file path.\n   * @param {string} filePath - target file path.\n   * @returns {string} name\n   */\n  static filePathToName(filePath) {\n    let basename = path.basename(filePath).split(\".\")[0];\n    basename = basename.replace(/[^a-zA-Z0-9_$]/g, \"\");\n\n    filePathMap[filePath] = filePathMap[filePath] || 0;\n    const count = filePathMap[filePath];\n    if (count > 0) basename += count;\n    filePathMap[filePath]++;\n\n    return basename;\n  }\n}\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Util/NamingUtil.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 310,
    "kind": "variable",
    "name": "filePathMap",
    "memberof": "src/Util/NamingUtil.js",
    "static": true,
    "longname": "src/Util/NamingUtil.js~filePathMap",
    "access": "public",
    "export": false,
    "importPath": "esdoc2/out/src/Util/NamingUtil.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 311,
    "kind": "class",
    "name": "NamingUtil",
    "memberof": "src/Util/NamingUtil.js",
    "static": true,
    "longname": "src/Util/NamingUtil.js~NamingUtil",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Util/NamingUtil.js",
    "importStyle": "NamingUtil",
    "description": "Identifier Naming Util class.",
    "lineNumber": 8,
    "interface": false
  },
  {
    "__docId__": 312,
    "kind": "method",
    "name": "filePathToName",
    "memberof": "src/Util/NamingUtil.js~NamingUtil",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Util/NamingUtil.js~NamingUtil.filePathToName",
    "access": "public",
    "description": "naming with file path.",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} name"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "target file path."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "name"
    }
  },
  {
    "__docId__": 313,
    "kind": "file",
    "name": "src/Util/PathResolver.js",
    "content": "import path from \"path\";\nimport assert from \"assert\";\nimport os from \"os\";\n\n/**\n * file path resolver.\n * @example\n * let pathResolver = new PathResolver('./src', 'foo/bar.js', 'foo-bar', 'foo/bar.js');\n * pathResolver.importPath; // 'foo-bar'\n * pathResolver.filePath; // 'src/foo/bar.js'\n * pathResolver.resolve('./baz.js'); // 'src/foo/baz.js'\n */\nexport default class PathResolver {\n  /**\n   * create instance.\n   * @param {string} inDirPath - root directory path.\n   * @param {string} filePath - relative file path from root directory path.\n   * @param {string} [packageName] - npm package name.\n   * @param {string} [mainFilePath] - npm main file path.\n   */\n  constructor(inDirPath, filePath, packageName = null, mainFilePath = null) {\n    assert(inDirPath);\n    assert(filePath);\n\n    /** @type {string} */\n    this._inDirPath = path.resolve(inDirPath);\n\n    /** @type {string} */\n    this._filePath = path.resolve(filePath);\n\n    /** @type {NPMPackageObject} */\n    this._packageName = packageName;\n\n    if (mainFilePath) {\n      /** @type {string} */\n      this._mainFilePath = path.resolve(mainFilePath);\n    }\n  }\n\n  /**\n   * import path that is considered package name, main file and path prefix.\n   * @type {string}\n   */\n  get importPath() {\n    const relativeFilePath = this.filePath;\n\n    if (this._mainFilePath === path.resolve(relativeFilePath)) {\n      return this._packageName;\n    }\n\n    let filePath;\n    if (this._packageName) {\n      filePath = path.normalize(`${this._packageName}${path.sep}${relativeFilePath}`);\n    } else {\n      filePath = `./${relativeFilePath}`;\n    }\n\n    return this._slash(filePath);\n  }\n\n  /**\n   * file full path.\n   * @type {string}\n   */\n  get fileFullPath() {\n    return this._slash(this._filePath);\n  }\n\n  /**\n   * file path that is relative path on root dir.\n   * @type {string}\n   */\n  get filePath() {\n    const relativeFilePath = path.relative(path.dirname(this._inDirPath), this._filePath);\n    return this._slash(relativeFilePath);\n  }\n\n  /**\n   * resolve file path on this file.\n   * @param {string} relativePath - relative path on this file.\n   */\n  resolve(relativePath) {\n    const selfDirPath = path.dirname(this._filePath);\n    const resolvedPath = path.resolve(selfDirPath, relativePath);\n    const resolvedRelativePath = path.relative(path.dirname(this._inDirPath), resolvedPath);\n    return this._slash(resolvedRelativePath);\n  }\n\n  /**\n   * convert 'back slash' to 'slash'.\n   * path separator is 'back slash' if platform is windows.\n   * @param {string} filePath - target file path.\n   * @returns {string} converted path.\n   * @private\n   */\n  _slash(filePath) {\n    if (os.platform() === \"win32\") {\n      filePath = filePath.replace(/\\\\/g, \"/\");\n    }\n\n    return filePath;\n  }\n}\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/src/Util/PathResolver.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 314,
    "kind": "class",
    "name": "PathResolver",
    "memberof": "src/Util/PathResolver.js",
    "static": true,
    "longname": "src/Util/PathResolver.js~PathResolver",
    "access": "public",
    "export": true,
    "importPath": "esdoc2/out/src/Util/PathResolver.js",
    "importStyle": "PathResolver",
    "description": "file path resolver.",
    "examples": [
      "let pathResolver = new PathResolver('./src', 'foo/bar.js', 'foo-bar', 'foo/bar.js');\npathResolver.importPath; // 'foo-bar'\npathResolver.filePath; // 'src/foo/bar.js'\npathResolver.resolve('./baz.js'); // 'src/foo/baz.js'"
    ],
    "lineNumber": 13,
    "interface": false
  },
  {
    "__docId__": 315,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Util/PathResolver.js~PathResolver#constructor",
    "access": "public",
    "description": "create instance.",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "inDirPath",
        "description": "root directory path."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "relative file path from root directory path."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "packageName",
        "description": "npm package name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "mainFilePath",
        "description": "npm main file path."
      }
    ]
  },
  {
    "__docId__": 316,
    "kind": "member",
    "name": "_inDirPath",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "static": false,
    "longname": "src/Util/PathResolver.js~PathResolver#_inDirPath",
    "access": "private",
    "description": null,
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 317,
    "kind": "member",
    "name": "_filePath",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "static": false,
    "longname": "src/Util/PathResolver.js~PathResolver#_filePath",
    "access": "private",
    "description": null,
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 318,
    "kind": "member",
    "name": "_packageName",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "static": false,
    "longname": "src/Util/PathResolver.js~PathResolver#_packageName",
    "access": "private",
    "description": null,
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "NPMPackageObject"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 319,
    "kind": "member",
    "name": "_mainFilePath",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "static": false,
    "longname": "src/Util/PathResolver.js~PathResolver#_mainFilePath",
    "access": "private",
    "description": null,
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 320,
    "kind": "get",
    "name": "importPath",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Util/PathResolver.js~PathResolver#importPath",
    "access": "public",
    "description": "import path that is considered package name, main file and path prefix.",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 321,
    "kind": "get",
    "name": "fileFullPath",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Util/PathResolver.js~PathResolver#fileFullPath",
    "access": "public",
    "description": "file full path.",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 322,
    "kind": "get",
    "name": "filePath",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Util/PathResolver.js~PathResolver#filePath",
    "access": "public",
    "description": "file path that is relative path on root dir.",
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 323,
    "kind": "method",
    "name": "resolve",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Util/PathResolver.js~PathResolver#resolve",
    "access": "public",
    "description": "resolve file path on this file.",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "relativePath",
        "description": "relative path on this file."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 324,
    "kind": "method",
    "name": "_slash",
    "memberof": "src/Util/PathResolver.js~PathResolver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Util/PathResolver.js~PathResolver#_slash",
    "access": "private",
    "description": "convert 'back slash' to 'slash'.\npath separator is 'back slash' if platform is windows.",
    "lineNumber": 96,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} converted path."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "target file path."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "converted path."
    }
  },
  {
    "kind": "index",
    "content": "[![Build Status](https://circleci.com/gh/esdoc2/esdoc2.png?style=shield&circle-token=:circle-token)](https://circleci.com/gh/esdoc2/esdoc2)\n[![Coverage Status](https://codecov.io/gh/esdoc2/esdoc2/branch/master/graph/badge.svg)](https://codecov.io/gh/esdoc2/esdoc2)\n![Document Coverage Status](http://esdoc2.org/badge.svg?t=0)\n\n## ESDoc2\n\nESDoc2 is a drop-in replacement of ESDoc, a documentation generator for JavaScript. ESDoc2 was created as the result of the original author of ESDoc refusing to add any other contributors to the project.  ESDoc2 is the decentralized version, contributors and maintainers are welcome.\n\n## Features\n- Generates good documentation.\n- Measures documentation coverage.\n- Integrate test codes into documentation.\n- Integrate manual into documentation.\n- Parse ECMAScript proposals.\n- Lots of [plugins](https://github.com/search?o=desc&q=esdoc2+filename%3Apackage.json)\n\n## Quick Start\n```sh\n# Move to your project directory.\ncd your-project/\n\n# Install esdoc2 and standard plugin.\nnpm install esdoc2 esdoc2-standard-plugin\n\n# Create a configuration file.\necho '{\n  \"source\": \"./src\",\n  \"destination\": \"./docs\",\n  \"plugins\": [{\"name\": \"esdoc2-standard-plugin\"}]\n}' > .esdoc.json\n\n# Run esdoc2.\n./node_modules/.bin/esdoc2\n\n# View documentation\nopen ./docs/index.html\n```\n\n## Documentation\nPlease visit [esdoc2.org](http://esdoc2.org) to see more documentation.\n\n## License\nMIT\n\n## Acknolwedgements\n\n- Ryo Maruyama, author of ESDoc\n",
    "longname": "/home/aaron/Documents/esdoc2/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"esdoc2\",\n  \"version\": \"3.0.0\",\n  \"description\": \"Better Documentation Generator For JavaScript\",\n  \"contributors\": [\n    {\n      \"name\": \"Conrad Buck\",\n      \"email\": \"conartist6@gmail.com\",\n      \"url\": \"https://burningpotato.com\"\n    },\n    {\n      \"name\": \"Matt McFarland\",\n      \"email\": \"contact@mattmcfarland.com\",\n      \"url\": \"http://esdoc2.org\"\n    },\n    {\n      \"name\": \"Aaron Meese\",\n      \"email\": \"aaronjmeese@gmail.com\",\n      \"url\": \"http://aaronmeese.com\"\n    }\n  ],\n  \"license\": \"MIT\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/esdoc2/esdoc2\"\n  },\n  \"engines\": {\n    \"node\": \">= 8\",\n    \"yarn\": \">= 1\"\n  },\n  \"scripts\": {\n    \"build\": \"yarn build:package && yarn build:docs\",\n    \"build:package\": \"scripts/build-package.js\",\n    \"build:docs\": \"scripts/build-docs.js\",\n    \"test\": \"scripts/test.js $(find test/ -regex '.*.test.js$')\",\n    \"test:ci\": \"nyc scripts/test.js $(find test/ -regex '.*.test.js$')\",\n    \"lint\": \"scripts/lint.js\",\n    \"lint:es\": \"eslint ./src ./test/src\",\n    \"lint:es:ci\": \"eslint ./src ./test/src --format junit --output-file ~/reports/eslint.xml\",\n    \"lint:json\": \"jsonlint ./package.json\",\n    \"lint:yaml\": \"js-yaml ./circle.yml\",\n    \"deploy-docs\": \"scripts/deploy-ghpages.sh\",\n    \"prepublishOnly\": \"yarn build\"\n  },\n  \"precommit\": [\n    \"lint\",\n    \"test\"\n  ],\n  \"dependencies\": {\n    \"babel-generator\": \"^6.26.0\",\n    \"babel-traverse\": \"^6.26.0\",\n    \"babylon\": \"^6.18.0\",\n    \"big-json\": \"^3.1.0\",\n    \"cheerio\": \"^1.0.0-rc.12\",\n    \"color-logger\": \"^0.0.6\",\n    \"escape-html\": \"^1.0.3\",\n    \"fs-extra\": \"^10.1.0\",\n    \"ice-cap\": \"^0.0.4\",\n    \"marked\": \"^04.0.17\",\n    \"minimist\": \"^1.2.6\",\n    \"mkdirp\": \"^1.0.4\",\n    \"npmlog\": \"^6.0.2\",\n    \"taffydb\": \"^2.7.3\"\n  },\n  \"devDependencies\": {\n    \"babel-cli\": \"^6.26.0\",\n    \"babel-plugin-istanbul\": \"^6.1.1\",\n    \"babel-plugin-transform-es2015-modules-commonjs\": \"^6.26.2\",\n    \"babel-preset-es2015\": \"^6.24.1\",\n    \"babel-register\": \"^6.26.0\",\n    \"codecov\": \"^3.8.3\",\n    \"debug\": \"^4.3.4\",\n    \"esdoc2-accessor-plugin\": \"^2.0.0\",\n    \"esdoc2-external-ecmascript-plugin\": \"^2.0.0\",\n    \"esdoc2-importpath-plugin\": \"^2.0.0\",\n    \"esdoc2-standard-plugin\": \"^2.0.0\",\n    \"esdoc2-undocumented-identifier-plugin\": \"^2.0.0\",\n    \"eslint\": \"^8.19.0\",\n    \"js-yaml\": \"^4.1.0\",\n    \"jsonlint\": \"^1.6.3\",\n    \"mocha\": \"^10.0.0\",\n    \"mocha-junit-reporter\": \"^2.0.2\",\n    \"node-static\": \"^0.7.11\",\n    \"nyc\": \"^15.1.0\"\n  },\n  \"keywords\": [\n    \"jsdoc\",\n    \"esdoc\",\n    \"esdoc2\",\n    \"api\",\n    \"documentation\",\n    \"ES6\"\n  ],\n  \"files\": [\n    \"out/src\",\n    \"manual\",\n    \"README.md\"\n  ],\n  \"directories\": {\n    \"doc\": \"manual\",\n    \"lib\": \"src\"\n  },\n  \"main\": \"out/src/esdoc2.js\",\n  \"bin\": {\n    \"esdoc2\": \"out/src/ESDocCLI.js\"\n  }\n}\n",
    "longname": "/home/aaron/Documents/esdoc2/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": "true",
    "content": "[![Build Status](https://circleci.com/gh/esdoc2/esdoc2.png?style=shield&circle-token=:circle-token)](https://circleci.com/gh/esdoc2/esdoc2)\n[![Coverage Status](https://codecov.io/gh/esdoc2/esdoc2/branch/master/graph/badge.svg)](https://codecov.io/gh/esdoc2/esdoc2)\n![Document Coverage Status](http://esdoc2.org/badge.svg?t=0)\n\n## ESDoc2\n\nESDoc2 is a drop-in replacement of ESDoc, a documentation generator for JavaScript. ESDoc2 was created as the result of the original author of ESDoc refusing to add any other contributors to the project.  ESDoc2 is the decentralized version, contributors and maintainers are welcome.\n\n## Features\n- Generates good documentation.\n- Measures documentation coverage.\n- Integrate test codes into documentation.\n- Integrate manual into documentation.\n- Parse ECMAScript proposals.\n- Lots of [plugins](https://github.com/search?o=desc&q=esdoc2+filename%3Apackage.json)\n\n## Quick Start\n```sh\n# Move to your project directory.\ncd your-project/\n\n# Install esdoc2 and standard plugin.\nnpm install esdoc2 esdoc2-standard-plugin\n\n# Create a configuration file.\necho '{\n  \"source\": \"./src\",\n  \"destination\": \"./docs\",\n  \"plugins\": [{\"name\": \"esdoc2-standard-plugin\"}]\n}' > .esdoc.json\n\n# Run esdoc2.\n./node_modules/.bin/esdoc2\n\n# View documentation\nopen ./docs/index.html\n```\n\n## Documentation\nPlease visit [esdoc2.org](http://esdoc2.org) to see more documentation.\n\n## License\nMIT\n\n## Acknolwedgements\n\n- Ryo Maruyama, author of ESDoc\n",
    "longname": "/home/aaron/Documents/esdoc2/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualAsset",
    "longname": "/home/aaron/Documents/esdoc2/manual/asset",
    "name": "./manual/asset",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/aaron/Documents/esdoc2/manual/usage.md",
    "name": "./manual/usage.md",
    "content": "# Usage\n- [Installation](#installation)\n- [Configuration](#configuration)\n- [Writing Tags](#writing-tags)\n\n## Installation\nInstall esdoc2 and standard-plugin from npm.\n\n```sh\ncd your-project/\nnpm install --save-dev esdoc2 esdoc2-standard-plugin\n./node_modules/.bin/esdoc2 -h\n```\n\n## Configuration\nThe minimum configuration is the following JSON. All configurations are [here](./config.html).\n\n<p class=\"file-path\">.esdoc2.json</p>\n```json\n{\n  \"source\": \"./src\",\n  \"destination\": \"./docs\",\n  \"plugins\": [\n    {\"name\": \"esdoc2-standard-plugin\"}\n  ]\n}\n```\n\nesdoc2 automatically finds the configuration file path by the order, if you don't specify `-c esdoc2.json`.\n\n1. `.esdoc2.json` in the current directory\n2. `.esdoc2.js` in the current directory\n3. `esdoc2` property in `package.json`\n\n## Writing Tags\nesdoc2 supports some documentation tags(aka. jsdoc tags). All tags are [here](./tags.html).\n\n```javascript\n/**\n * this is MyClass.\n */\nexport default class MyClass {\n  /**\n   * @param {number} a - this is a value.\n   * @param {number} b - this is a value.\n   * @return {number} result of the sum value.\n   */\n  sum(a, b){\n    return a + b;\n  }\n}\n```\n\nAnd run esdoc2.\n```\n./node_modules/.bin/esdoc2\nopen ./docs/index.html\n```\n\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/aaron/Documents/esdoc2/manual/feature.md",
    "name": "./manual/feature.md",
    "content": "# Features\n\nesdoc2 provides a lot of features.\n\n**Core Features (via body)**\n- [Doc Comment and Tag](#doc-comment-and-tag)\n- [ES Class](#es-class)\n- [ES Module](#es-module)\n- [Plugin Architecture](#plugin-architecture)\n\n**Standard Features (via [esdoc2-standard-plugin](https://github.com/esdoc2/esdoc2-plugins/tree/master/packages/esdoc2-standard-plugin))**\n- [Publish HTML]()\n- [Documentation Coverage](#documentation-coverage)\n- [Documentation Lint](#documentation-lint)\n- [Integration Test Codes](#integration-test-codes)\n- [Integration Manual](#integration-manual)\n- [Search Documentation](#search-documentation)\n- [Type Inference](#type-inference)\n- [and more](https://github.com/esdoc2/esdoc2-plugins/tree/master/packages/esdoc2-standard-plugin)\n\n**Other Features (via [various plugins](https://github.com/esdoc2/esdoc2-plugins))**\n- [Inject Style](https://github.com/esdoc2/esdoc2-plugins/tree/master/packages/esdoc2-inject-style-plugin)\n- [Inject Script](https://github.com/esdoc2/esdoc2-plugins/tree/master/packages/esdoc2-inject-script-plugin)\n- [ECMAScript Proposal](https://github.com/esdoc2/esdoc2-plugins/tree/master/packages/esdoc2-ecmascript-proposal-plugin)\n- [Flow](https://github.com/esdoc2/esdoc2-plugins/tree/master/packages/esdoc2-flow-type-plugin) [PoC]\n- [TypeScript](https://github.com/esdoc2/esdoc2-plugins/tree/master/packages/esdoc2-typescript-plugin) [PoC]\n- [JSX](https://github.com/esdoc2/esdoc2-plugins/tree/master/packages/esdoc2-jsx-plugin)\n- [React](https://github.com/esdoc2/esdoc2-plugins/tree/master/packages/esdoc2-react-plugin) [PoC]\n- [Publish Markdown](https://github.com/esdoc2/esdoc2-plugins/tree/master/packages/esdoc2-publish-markdown-plugin) [PoC]\n- [and more](https://github.com/esdoc2/esdoc2-plugins)\n\n## Doc Comment and Tag\nesdoc2 obtains a comment called `doc comment` from a source code. <br/>\nThen esdoc2 generates a document from a `tag` in a `doc comment`.\n\nA `doc comment` is block comment beginning with `*`. A `tag` is a text of the form `@tagName`.\n\n```javascript\n/**\n * This is Foo.\n */\nexport default class Foo {\n  /**\n   * @param {number} p - this is p.\n   */\n  method(p){}\n}\n```\n\n## ES Class\nesdoc2 supports ES class syntax and targets codes that are written by it.\n\nES class syntax makes the clear relation of class, method, member, constructor and inheritance.<br/>\nThis means that esdoc2 can generate a document without using a tag for these. In other words, you don't need to write tags for classes.\n\nesdoc2 automatically generates the under contents by class syntax.\n\n- Super classes\n- Direct Subclasses and Indirect Subclasses.\n- Inherited methods and members from super class.\n- Override methods and members from super class.\n\n<img src=\"./asset/image/feature/class1.png\" class=\"screen-shot\" width=\"500px\">\n\n<img src=\"./asset/image/feature/class2.png\" class=\"screen-shot\" width=\"500px\">\n\nNote: esdoc2 doesn't support prototype base codes and function base codes.\n\n## ES Module\nesdoc2 supports ES modules syntax and targets codes that are written by it.<br/>\nES modules syntax is file base. So esdoc2 treats as one file = one module.\n\nesdoc2 displays a import style in accordance with the export style.\n\n- If `export default class Foo{}`, displays `import Foo from './Foo.js'` in `Foo` class documentation.\n- If `export class Foo{}`, displays ``import {Foo} from './Foo.js'``in `Foo` class documentation.\n\nThis is useful because you not need to see export style in source code.\n\n<img src=\"./asset/image/feature/module1.png\" class=\"screen-shot\" width=\"500px\">\n\nAnd you may as well as use [esdoc2-importpath-plugin](https://github.com/esdoc2/esdoc2-plugins/tree/master/packages/esdoc2-importpath-plugin) to transform path.\n\nNote: esdoc2 doesn't support commonjs.\n\n## Plugin Architecture\nesdoc2 adopts plugin architecture. So, almost all features are provided as plugins.\n\nEspecially [esdoc2-standard-plugin](https://github.com/esdoc2/esdoc2-plugins/tree/master/packages/esdoc2-standard-plugin) is a packaging plugin with major plugins.<br/>\nNormally we recommend using this plugin. There are various plugins in [esdoc2/esdoc2-plugins](https://github.com/esdoc2/esdoc2-plugins).\n\nYou can easily make plugins, and there are many [third party plugins](https://www.npmjs.com/search?q=esdoc2%20plugin&page=1&ranking=optimal).<br/>\nPlease click [here](./api.html) for how to make plugins.\n\n## Publish HTML\nesdoc2 generates HTML documents that are easy to see and plain looks.\n\n<img class=\"screen-shot no-border\" src=\"./asset/image/top.png\" width=\"500px\">\n\n## Documentation Coverage\nesdoc2 inspects a documentation coverage. This is useful information for the following.\n\n- This leads the motivation of documentation.\n- This inspects a missing of documentation.\n\nesdoc2 processes only top-level class, function and variable.<br/>\nThis is based on, esdoc2 measures coverage by how much the document is being written out of all the processing target.<br/>\nAnd, esdoc2 is also to measure coverage of each module, you will have become easier to also find a missing of the document.\n\nFor example, [this](https://doc.esdoc2.org/github.com/esdoc2/esdoc2/source.html) is coverage of esdoc2 itself.\n\n<img src=\"./asset/image/feature/coverage1.png\" class=\"screen-shot\" width=\"500px\">\n\n## Documentation Lint\nIf documentation is invalid, esdoc2 shows warning log.\n\n```javascript\nexport default class Foo {\n  /**\n   * @param {number} x\n   */\n  method(p){}\n}\n```\n\n<img src=\"./asset/image/feature/lint.png\" class=\"screen-shot\" width=\"500px\">\n\nNote: For now, esdoc2 lints only method/function signature.\n\n## Integration Test Codes\nTest codes are important information.<br/>\nSo, esdoc2 generates a cross reference of test codes and document.\n\n```javascript\n/** @test {MyClass} */\ndescribe('MyClass is super useful class.', ()=>{\n\n  /** @test {MyClass#sayMyName} */\n  it('say my name', ()=>{\n    let foo = new MyClass('Alice');\n    assert.equal(foo.sayMyName(), 'My name is Alice');\n  })\n});\n```\n\n<img src=\"./asset/image/feature/test1.png\" class=\"screen-shot\" width=\"500px\">\n\n<img src=\"./asset/image/feature/test2.png\" class=\"screen-shot\" width=\"500px\">\n\n## Integration Manual\nYou can integrate a manual of a your project into documentation.\n\n```\n# Overview\nThis is my project overview.\n...\n```\n\n<img src=\"./asset/image/feature/manual1.png\" class=\"screen-shot\" width=\"500px\">\n\n<img src=\"./asset/image/feature/manual2.png\" class=\"screen-shot\" width=\"500px\">\n\n## Search Documentation\nesdoc2 supports built-in searching in document with only JavaScript(without server implementation).\n\nThe implementation of searching:\n\n- esdoc2 made the index(JSON) at the time of document generation.\n- The user search from the index.\n\n<img src=\"./asset/image/feature/search1.png\" class=\"screen-shot\" width=\"500px\">\n\nNote: This implementation is very naive. There might be a problem in search performance. For now, no problem in 500 indexes.\n\n## Type Inference\nesdoc2 infers type of variables using codes if those have no `@param`.\n\nThe following variables are supported.\n- A class type using class syntax.\n- A method/function arguments type using default argument syntax.\n- A property type using assignment value.\n- A return type using return value.\n\nNote: This implementation is very simple. So esdoc2 infers only primitive values(number, boolean, string).\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/aaron/Documents/esdoc2/manual/tags.md",
    "name": "./manual/tags.md",
    "content": "# Tags\nDocumentation tags are similar to JSDoc tags.\n\ne.g.\n\n```javascript\n/**\n * this is MyClass description.\n * @example\n * let myClass = new MyClass();\n */\nexport default class MyClass {\n  /**\n   * this is constructor description.\n   * @param {number} arg1 this is arg1 description.\n   * @param {string[]} arg2 this is arg2 description.\n   */ \n  constructor(arg1, arg2) {...}\n}\n```\n\n## All Tags\n- [For Common](#for-common)\n  - [@access](#-access)\n  - [@deprecated](#-deprecated)\n  - [@desc](#-desc)\n  - [@example](#-example)\n  - [@experimental](#-experimental)\n  - [@ignore](#-ignore)\n  - [@link](#-link)\n  - [@see](#-see)\n  - [@since](#-since)\n  - [@todo](#-todo)\n  - [@version](#-version)\n- [For Class](#for-class)\n  - [@extends](#-extends)\n  - [@implements](#-implements)\n  - [@interface](#-interface)\n- [For Method And Function](#for-method-and-function)\n  - [@abstract](#-abstract)\n  - [@emits](#-emits)\n  - [@listens](#-listens)\n  - [@override](#-override)\n  - [@param](#-param)\n  - [@return](#-return)\n  - [@throws](#-throws)\n- [For Member And Variable](#for-member-and-variable)\n  - [@type](#-type)\n- [For Virtual](#for-member-and-variable)\n  - [@external](#-external)\n  - [@typedef](#-typedef)\n- [For Test](#for-test)\n  - [@test](#-test)\n- [Type Syntax](#type-syntax)\n  - [Simple](#simple)\n  - [Array](#array)\n  - [Object](#object)\n  - [Record](#record)\n  - [Generics](#generics)\n  - [Function](#function)\n  - [Union](#union)\n  - [Nullable And Not Nullable](#nullable-and-not-nullable)\n  - [Spread](#spread)\n  - [Optional And Default](#optional-and-default)\n- [Identifier Syntax](#identifier-syntax)\n\n## For Common\n### @access\nsyntax: ``@access <public|protected|private>``\n\nAlias are ``@public``, ``@protected`` and ``@private``.\n\n```javascript\n/**\n * @access public\n */\nclass MyClass {\n  /**\n   * @private\n   */\n  _method(){...}\n}\n```\n\n----\n\n### @deprecated\nsyntax: ``@deprecated [description]``\n\n```javascript\n/**\n * @deprecated use MyClassEx instead of this.\n */\nclass MyClass{...}\n```\n\n----\n\n### @desc\nsyntax: ``@desc <description>``\n\n``<description>`` supports markdown.\n\nNormally you don't need to use ``@desc``, because first section in doc comment is determined automatically as ``@desc``.\n\n```javascript\n/**\n * @desc this is description.\n */\nclass MyClass{...}\n\n/**\n * this is description.\n */\nclass MyClass{...}\n```\n\n----\n\n### @example\nsyntax: ``@example <JavaScript>``\n\n```javascript\n/**\n * @example\n * let myClass = new MyClass();\n * let result = myClass.foo();\n * console.log(result);\n * \n * @example\n * let result = MyClass.bar();\n * console.log(result);\n */\nclass MyClass{...}\n```\n\nAnd you can use ``<caption>...</caption>`` at first line.\n\n```javascript\n/**\n * @example <caption>This is caption</caption>\n * let myClass = new MyClass();\n */\nclass MyClass{...}\n```\n\n----\n\n### @experimental\nsyntax: ``@experimental [description]``\n\n```javascript\n/**\n * @experimental this class includes breaking change.\n */\nclass MyClass{...}\n```\n\n----\n\n### @ignore\nsyntax: ``@ignore``\n\nThe identifier is not displayed in document.\n\n```javascript\n/**\n * @ignore\n */\nclass MyClass{...}\n```\n\n----\n\n### @link\nsyntax: ``{@link <identifier>}``\n\nlink other identifier\n\n```javascript\n/**\n * this is MyClass.\n * If device spec is low, you can use {@link MySimpleClass}.\n */\nclass MyClass{...}\n```\n\n----\n\n### @see\nsyntax: ``@see <URL>``\n\n```javascript\n/**\n * @see http://example.com\n * @see http://example.org\n */\nclass MyClass{...}\n```\n\n----\n\n### @since\nsyntax: ``@since <version>``\n\n```javascript\n/**\n * @since 0.0.1\n */\nclass MyClass{...}\n```\n\n----\n\n### @todo\nsyntax: ``@todo <description>``\n\n```javascript\n/**\n * @todo support multi byte character.\n * @todo cache calculation result.\n */\nclass MyClass{...}\n```\n\n----\n\n### @version\nsyntax: ``@version <version>``\n\n```javascript\n/**\n * @version 1.2.3\n */\nclass MyClass{...}\n```\n\n----\n\n## For Class\n### @extends\nsyntax: ``@extends <identifier>``\n\nNormally you don't need to use ``@extends``. because ES2015 has the Class-Extends syntax. however, you can use this tag if you want to explicitly specify.\n\n```javascript\n/**\n * @extends {SuperClass1}\n * @extends {SuperClass2}\n */\nclass MyClass extends mix(SuperClass1, SuperClass2) {...}\n```\n\n----\n\n### @implements\nsyntax: ``@implements <identifier>``\n\n```javascript\n/**\n * @implements {MyInterface1}\n * @implements {MyInterface2}\n */\nclass MyClass {...}\n```\n\n----\n\n### @interface\nsyntax: ``@interface``\n\n```javascript\n/**\n * @interface\n */\nclass MyInterface {...}\n```\n\n----\n\n## For Method And Function\n### @abstract\nsyntax: ``@abstract``\n\n```javascript\nclass MyClass {\n  /**\n   * this method must be overridden by sub class.\n   * @abstract\n   */\n  method(){...}\n}\n```\n\n----\n\n### @emits\nsyntax: ``@emits <identifier> [description]``\n\n```javascript\nclass MyClass {\n  /**\n   * @emits {MyEvent1} emit event when foo.\n   * @emits {MyEvent2} emit event when bar.\n   */\n  method(){...}\n}\n```\n\n----\n\n### @listens\nsyntax: ``@listens <identifier> [description]``\n\n```javascript\nclass MyClass {\n  /**\n   * @listens {MyEvent1} listen event because foo.\n   * @listens {MyEvent2} listen event because bar.\n   */\n  method(){...}\n}\n```\n\n----\n\n### @override\nsyntax: ``@override``\n\n```javascript\nclass MyClass extends SuperClass {\n  /**\n   * @override\n   */\n  method(){...}\n}\n```\n\n----\n\n### @param\nsyntax: ``@param <type> <name> [-] [description]``\n\nAbout ``<type>`` to see [Type Syntax](#type-syntax)\n\n```javascript\nclass MyClass {\n  /**\n   * @param {number} p - this is p description.\n   */\n  method(p){...}\n}\n```\n\n----\n\n### @return\nsyntax: ``@return <type> [description]``\n\nAbout ``<type>`` to see [Type Syntax](#type-syntax)\n\n```javascript\nclass MyClass {\n  /**\n   * @return {number} this is description.\n   */\n  method(){...}\n}\n```\n\nIf return Object, you can use ``@property <type> <name> [description]`` for each properties.\n\n```javascript\nclass MyClass {\n  /**\n   * @return {Object} this is description.\n   * @property {number} foo this is description.\n   * @property {number} bar this is description.\n   */\n  method(){...}\n}\n```\n\n----\n\n### @throws\nsyntax: ``@throws <identifier> [description]``\n\n```javascript\nclass MyClass {\n  /**\n   * @throws {MyError1} throw error when foo.\n   * @throws {MyError2} throw error when bar.\n   */\n  method(){...}\n}\n```\n\n----\n\n## For Member And Variable\n### @type\nsyntax: ``@type <type>``\n\nAbout ``<type>`` to see [Type Syntax](#type-syntax)\n\n```javascript\nclass MyClass {\n  constructor() {\n    /**\n     * @type {number}\n     */\n    this.p = 123;\n  }\n}\n```\n\nIf you use ``get/set`` syntax, you can specify ``@type``.\n\n```javascript\nclass MyClass {\n  /** @type {string} */\n  get value() {}\n\n  /** @type {string} */\n  set value(v){}\n}\n```\n\nIf ``<type>`` is Object, you can use ``@property <type> <name> [description]`` for each properties.\n\n```javascript\nclass MyClass {\n  constructor() {\n    /**\n     * @type {Object}\n     * @property {number} p.foo\n     * @property {string} p.bar\n     */\n    this.p = {foo: 123, bar: \"abc\"};\n  }\n}\n```\n\n----\n\n## For Virtual\n### @external\nsyntax: ``@external <identifier> <URL>``\n\n```javascript\n/**\n * @external {XMLHttpRequest} https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest\n */\n```\n\n----\n\n### @typedef\nsyntax: ``@typedef <type> <name>``\n\nAbout ``<type>`` to see [Type Syntax](#type-syntax)\n\n```javascript\n/**\n * @typedef {number|string} MyType\n */\n```\n\nIf ``<type>`` is Object, you can use ``@property <type> <name> [description]`` for each properties.\n\n```javascript\n/**\n * @typedef {Object} MyType\n * @property {number} foo this is description.\n * @property {string} bar this is description.\n */\n```\n\n----\n\n## For Test\n### @test\nsyntax: ``@test <identifier>``\n\n```javascript\n/** @test {MyClass} */\ndescribe('MyClass has foo bar feature', ()=>{\n\n  /** @test {MyClass#baz} */\n  it('MyClass#baz returns magic value', ()=>{\n    assert(true);\n  });\n});\n```\n----\n\n## Type Syntax\n\n``@param``, ``@return``, ``@type`` and ``@typedef`` are support the following type syntax.\n\n### Simple\n```javascript\n/**\n * @param {number} param - this is simple param.\n */\nfunction myFunc(param){...}\n```\n### Array\n```javascript\n/**\n * @param {number[]} param - this is array param.\n */\nfunction myFunc(param){...}\n```\n\n### Object\n```javascript\n/**\n * @param {Object} param - this is object param.\n * @param {number} param.foo - this is property param.\n * @param {string} param.bar - this is property param.\n */\nfunction myFunc(param){...}\n\n/**\n * this is object destructuring.\n * @param {Object} param - this is object param.\n * @param {number} param.foo - this is property param.\n * @param {string} param.bar - this is property param.\n */\nfunction myFunc({foo, bar}){...}\n```\n\n### Record\n```javascript\n/**\n * @param {{foo: number, bar: string}} param - this is object param.\n */\nfunction myFunc(param){...}\n\n/**\n * this is nullable property\n * @param {{foo: ?number, bar: string}} param - this is object param.\n */\nfunction myFunc(param){...}\n\n/**\n * this is object destructuring.\n * @param {{foo: number, bar: string}} param - this is object param.\n */\nfunction myFunc({foo, bar}){...}\n```\n\n### Generics\n```javascript\n/**\n * @param {Array<string>} param - this is Array param.\n */\nfunction myFunc(param){...}\n\n/**\n * @param {Map<number, string>} param - this is Map param.\n */\nfunction myFunc(param){...}\n\n/**\n * @return {Promise<string[], MyError>} this is Promise return value.\n */\nfunction myFunc(){...}\n```\n\n### Function\n```javascript\n/**\n * @param {function(foo: number, bar: string): boolean} param - this is function param.\n */\nfunction myFunc(param){...}\n```\n\n### Union\n```javascript\n/**\n * @param {number|string} param - this is union param.\n */\nfunction myFunc(param){...}\n```\n\n### Nullable And Not Nullable\n```javascript\n/**\n * @param {?number} param - this is nullable param.\n */\nfunction myFunc(param){...}\n\n/**\n * @param {!Object} param - this is not nullable param.\n */\nfunction myFunc(param){...}\n\n/**\n * @param {?(number|string)} param - this is nullable and union param.\n */\nfunction myFunc(param){...}\n```\n\n### Spread\n```javascript\n/**\n * @param {...number} param - this is spread param.\n */\nfunction myFunc(...param){...}\n```\n\n### Optional And Default\n```javascript\n/**\n * @param {number} [param] - this is optional param.\n */\nfunction myFunc(param){...}\n\n/**\n * @param {number} [param=10] - this is default param.\n */\nfunction myFunc(param){...}\n```\n\n## Identifier Syntax\n``<identifier>`` supports following syntax.\n- class: ``MyClass``\n- method and member: ``MyClass#foo``\n- static method and member: ``MyClass.bar``\n- function and variable: ``myFunc``, ``myVariable``\n\nif same names in your project, you can use full identifier syntax. full identifier is ``filePath~identifier``.\n\ne.g. If ``MyClass`` in ``src/foo1.js`` and ``src/foo2.js``, you can write following,\n- ``src/foo1.js~MyClass``\n- ``src/foo2.js~MyClass``\n\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/aaron/Documents/esdoc2/manual/config.md",
    "name": "./manual/config.md",
    "content": "# Config\n\nIntroduce config files of esdoc2 with esdoc2-standard-plugin.\n\n- [Minimum Config](#minimum-config)\n- [Integrate Test Codes Config](#integrate-test-codes-config)\n- [Integrate Manual Config](#integrate-manual-config)\n- [Full Config](#full-config)\n\n## Minimum Config\n```json\n{\n  \"source\": \"./src\",\n  \"destination\": \"./docs\",\n  \"plugins\": [{\"name\": \"esdoc2-standard-plugin\"}]\n}\n```\n\n## Integrate Test Codes Config\n```json\n{\n  \"source\": \"./src\",\n  \"destination\": \"./docs\",\n  \"plugins\": [\n  {\n    \"name\": \"esdoc2-standard-plugin\",\n    \"option\": {\n      \"test\": {\n        \"source\": \"./test/\",\n        \"interfaces\": [\"describe\", \"it\", \"context\", \"suite\", \"test\"],\n        \"includes\": [\"(spec|Spec|test|Test)\\\\.js$\"],\n        \"excludes\": [\"\\\\.config\\\\.js$\"]\n      }\n    }\n  }]\n}\n```\n\nAnd if use ``@test``, more better integration.\n\n```javascript\n/** @test {MyClass} */\ndescribe('MyClass has foo bar feature', ()=>{\n\n  /** @test {MyClass#baz} */\n  it('MyClass#baz returns magic value', ()=>{\n    assert(true);\n  });\n});\n```\n\n## Integrate Manual Config\n```json\n{\n  \"source\": \"./src\",\n  \"destination\": \"./docs\",\n  \"plugins\": [\n  {\n    \"name\": \"esdoc2-standard-plugin\",\n    \"option\": {\n      \"manual\": {\n        \"index\": \"./manual/index.md\",\n        \"asset\": \"./manual/asset\",\n        \"files\": [\n          \"./manual/overview.md\",\n          \"./manual/installation.md\",\n          \"./manual/usage.md\",\n          \"./manual/tutorial.md\",\n          \"./manual/configuration.md\",\n          \"./manual/example.md\",\n          \"./CHANGELOG.md\"\n        ]\n      }\n    }\n  }]\n}\n```\n\n## Full Config\n```json\n{\n  \"source\": \"./src\",\n  \"destination\": \"./docs\",\n  \"includes\": [\"\\\\.js$\"],\n  \"excludes\": [\"\\\\.config\\\\.js$\"],\n  \"plugins\": [\n  {\n    \"name\": \"esdoc2-standard-plugin\",\n    \"option\": {\n      \"lint\": {\"enable\": true},\n      \"coverage\": {\"enable\": true},\n      \"accessor\": {\"access\": [\"public\", \"protected\", \"private\"], \"autoPrivate\": true},\n      \"undocumentIdentifier\": {\"enable\": true},\n      \"unexportedIdentifier\": {\"enable\": false},\n      \"typeInference\": {\"enable\": true},\n      \"brand\": {\n        \"logo\": \"./logo.png\",\n        \"title\": \"My Library\",\n        \"description\": \"this is awesome library\",\n        \"repository\": \"https://github.com/foo/bar\",\n        \"site\": \"http://my-library.org\",\n        \"author\": \"https://twitter.com/foo\",\n        \"image\": \"http://my-library.org/logo.png\"\n      },\n      \"manual\": {\n        \"index\": \"./manual/index.md\",\n        \"globalIndex\": true,\n        \"asset\": \"./manual/asset\",\n        \"files\": [\n          \"./manual/overview.md\"\n        ]\n      },\n      \"test\": {\n        \"source\": \"./test/\",\n        \"interfaces\": [\"describe\", \"it\", \"context\", \"suite\", \"test\"],\n        \"includes\": [\"(spec|Spec|test|Test)\\\\.js$\"],\n        \"excludes\": [\"\\\\.config\\\\.js$\"]\n      }\n    }\n  }] \n}\n```\n\n**esdoc2 Config**\n\n| Name  | Required | Default | Description |\n| ----- | -------- | ------- | ----------- |\n| ``source``  | true | - | JavaScript source codes directory path. |\n| ``destination`` | true | - | Output directory path. |\n| ``includes`` | - | `[\"\\\\.js$\"]` | Process files that are matched with the regexp at any one. |\n| ``excludes`` | - | `[\"\\\\.config\\\\.js$\"]` | Not process files that are matched with the regexp at any one. |\n| ``index`` | - | ``./README.md``| Includes file into index page of document |\n| ``package`` | - | ``./package.json`` | Use package.json info. |\n| ``plugins`` | - | ``null`` | If specified, use each plugins. To see [Plugin Feature](./api.html#plugin-feature) for more information. |\n| ``plugins[].name`` | true | - | Plugin module name(e.g. ``your-awesome-plugin``) or plugin file path(e.g. ``./your-awesome-plugin.js``). |\n| ``plugins[].option`` | - | null | If specified, the plugin get the option. |\n\n<br/>\n**`esdoc2-standard-plugin` Option**\n\n| Name  | Required | Default | Description |\n| ----- | -------- | ------- | ----------- |\n| `lint.enable` | - | `true` | If specified, execute documentation lint. |\n| ``coverage.enable`` | - | ``true`` | If true, output document coverage. |\n| ``accessor.access`` | - | ``[\"public\", \"protected\", \"private\"\"]`` | Process only identifiers(class, method, etc...) that are have the access(public, protected and private). |\n| ``accessor.autoPrivate`` | - | ``true`` | Deal with identifiers beginning with \"_\" as a private. <br> e.g. ``this._foo`` is private. but ``/** @public */ this._foo`` is public.|\n| ``undocumentIdentifier.enable`` | - | ``true`` | If true, also process undocument Identifiers. <br> e.g. ``/** @foo bar */ class MyClass`` is document identifier, ``class MyClass`` is undocument identifier. |\n| ``unexportIdentifier.enable`` | - | ``false`` | If true, also process unexported Identifiers. <br> e.g. ``export class MyClass`` is exported, ``class MyClass`` is not exported. |\n| `typeInference.true` | - | `true` | If true, infer type of variable, return value. |\n| `brand.logo` | - | - | aaa |\n| `brand.title` | - | - | Use title for output. |\n| `brand.description` | - | - | If specified, write meta tag, og tag and twitter card. |\n| `brand.repository` | - | - | If specified, write URL in header navigation.  |\n| `brand.site` | - | - | If specified, write og tag and twitter card.|\n| `brand.author` | - | - | If specified, write og tag and twitter card. |\n| `brand.image` | - | - | If specified, write og tag and twitter card. |\n| ``manual.globalIndex`` | - | false | If specify true, esdoc2 generates global index using the manual. In other words, it means to replace `config.index` to `config.manual.index` |\n| ``manual.index`` | - | null | If specify markdown file, show manual index using the file. |\n| ``manual.asset`` | - | null | if specify asset(image) directory path, include the directory into manual. |\n| ``manual.files`` | - | null | If specify markdown files, include manual into output. |\n| ``test.source`` | true | - | Test codes directory path. |\n| ``test.interfaces`` | | `[\"describe\", \"it\", \"context\", \"suite\", \"test\"]` | Test code interfaces. |\n| ``test.includes`` | - | <code>[\"(spec&#124;Spec&#124;test&#124;Test)\\\\\\\\.js$\"]</code> | Process files that are matched with the regexp at any one. |\n| ``test.excludes`` | - | `[\"\\\\.config\\\\.js$\"]` | Not process files that are matched with the regexp at any one. |\n\nNote: A file path in config is based on current directory.\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/aaron/Documents/esdoc2/manual/api.md",
    "name": "./manual/api.md",
    "content": "# API\n\nYou can modify data(config, code, parser, AST, doc and content) at hook points with plugins.\n\n## Plugin API\n\nFirst, you set ``plugins`` property in config.\n- specify directly JavaScript file (e.g. `./my-plugin.js`)\n- specify npm module name (e.g. `esdoc2-foo-plugin`), before you need to install the module.\n\n```json\n{\n  \"source\": \"./src\",\n  \"destination\": \"./docs\",\n  \"plugins\": [\n    {\"name\": \"./MyPlugin.js\"},\n    {\"name\": \"esdoc2-foo-plugin\", \"option\": {\"foo\": 123}}\n  ]\n}\n```\n\nSecond, you write plugin code.\n\n<div class=\"file-path\">MyPlugin.js</div>\n\n```javascript\nclass MyPlugin {\n  onStart(ev) {\n    console.log(ev.data);\n  }\n  \n  onHandlePlugins(ev) {\n    // modify plugins\n    ev.data.plugins = ...; \n  }\n  \n  onHandleConfig(ev) {\n    // modify config\n    ev.data.config.title = ...;\n  }\n  \n  onHandleCode(ev) {\n    // modify code\n    ev.data.code = ...;\n  }\n  \n  onHandleCodeParser(ev) {\n    // modify parser\n    ev.data.parser = function(code){ ... };\n  }\n  \n  onHandleAST(ev) {\n    // modify AST\n    ev.data.ast = ...;\n  }\n  \n  onHandleDocs(ev) {\n    // modify docs\n    ev.data.docs = ...;\n  };\n  \n  onPublish(ev) {\n    // write content to output dir\n    ev.data.writeFile(filePath, content);\n    \n    // copy file to output dir\n    ev.data.copyFile(src, dest);\n    \n    // copy dir to output dir\n    ev.data.copyDir(src, dest);\n    \n    // read file from output dir\n    ev.data.readFile(filePath);\n  };\n  \n  onHandleContent(ev) {\n    // modify content\n    ev.data.content = ...;\n  };\n  \n  onComplete(ev) {\n    // complete\n  };\n}\n\n// exports plugin\nmodule.exports = new MyPlugin();\n```\n\nNote: [esdoc2/esdoc2-plugins](https://github.com/esdoc2/esdoc2-plugins) is helpful for writing plugins.\n\n## Data Format\nTODO: describe data format.\n\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/aaron/Documents/esdoc2/manual/faq.md",
    "name": "./manual/faq.md",
    "content": "# FAQ\n- [Goal](#goal)\n- [Difference between esdoc2 and JSDoc](#difference-between-esdoc2-and-jsdoc)\n- [Supported Environment](#supported-environment)\n- [Import Path In Documentation](#import-path-in-documentation)\n- [Who's Using esdoc2](#who-s-using-esdoc2)\n- [Articles](#articles)\n\n## Goal\nesdoc2 has two goals.\n\n- To make documentation maintenance comfortable and pleasant\n- To create easy-to-understand documentation.\n\nIn order to achieve this two goals, esdoc2 produces a practical document, measures the coverage, integrates the test code and more.\n\n## Difference between esdoc2 and JSDoc\nJSDoc is most popular JavaScript API Documentation tool.\nesdoc2 is inspired by JSDoc.\n\n- esdoc2\n  - supports ES2015 and later\n  - targets at ES2015 ``class`` and ``import/export`` style\n  - easy to use with fewer tags, because understand information from ES syntax.\n  - generates detailed document\n  - measures document coverage\n  - integrates test codes\n  - integrates manual\n- JSDoc\n  - supports ES3/ES5 and ES2015\n  - targets Class-base OOP and Prototype-base OOP\n  - has many flexible document tags\n\n## Supported Environment\nesdoc2 supports Node.js(v6 or later)\n\n## Import Path In Documentation\nesdoc2 displays the import path of class/function into the document.<br/>\nHowever, the import path may be different from real import path because usually ES modules is transpiled to use it.\n\nSo, [esdoc2 Import Path Plugin](https://github.com/esdoc2/esdoc2-plugins/tree/master/packages/esdoc2-importpath-plugin) converts import path to real import path.\n\n## Who's Using esdoc2\n- [RxJS](http://reactivex.io/rxjs/)\n- [Sketch API](http://developer.sketchapp.com/reference/api/)\n- [Netflix/unleash](https://github.com/Netflix/unleash)\n- [lonelyplanet/rizzo-next](https://github.com/lonelyplanet/rizzo-next)\n- [linkedin/hopscotch](https://github.com/linkedin/hopscotch/tree/gh72)\n- [electron/electron-compile](https://github.com/electron/electron-compile)\n\nAnd [more](https://github.com/search?o=desc&q=esdoc2+filename%3Apackage.json+-user%3Ah13i32maru+-user%3Aesdoc+-user%3Aes-doc&ref=searchresults&s=indexed&type=Code&utf8=%E2%9C%93).\n\n## Articles\n- English\n  - [Write a documentation React and ES6 project by esdoc2 | en.blog.koba04](http://en.blog.koba04.com/2015/06/28/esdoc2-documentation-for-react-and-es6/)\n  - [ECMAScript 6 documentation generators | stackoverflow](http://stackoverflow.com/questions/27334309/ecmascript-6-documentation-generators)\n  - [esdoc2 – A Documentation Generator for JavaScript(ES6) | Hacker News](https://news.ycombinator.com/item?id=10002867)\n  - [Document ES6 with esdoc2](http://jonathancreamer.com/document-es6-with-esdoc2/)\n  - [ES2015 | Web | Google Developers](https://developers.google.com/web/shows/ttt/series-2/es2015)\n- Japanese\n  - [ESDocというJavaScript向けのAPIドキュメントツールを作りました | maru source](http://blog.h13i32maru.jp/entry/2015/05/06/221041)\n  - <a href=\"http://jser.info/2015/05/06/iojs2.0.0-msedge-isomorphic/#esdoc2---an-api-document-generator-for-javascript(es6)\">esdoc2 - An API Document Generator For JavaScript(ES6) | JSer.info</a>\n  - [esdoc2 - ES6時代のドキュメンテーションツール | Speacker Deck](https://speakerdeck.com/h13i32maru/esdoc2-es6shi-dai-falsedokiyumentesiyonturu)\n  - [esdoc2 を試す | アカベコマイリ](http://akabeko.me/blog/2015/07/esdoc2/)\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/aaron/Documents/esdoc2/manual/migration.md",
    "name": "./manual/migration.md",
    "content": "# Migration to V1.0.0\nesdoc2 v1.0 adopts plugin architecture. So, almost all features are provided as plugins.<br/>\nPlease change your config to load plugins.\n\n## Using esdoc2-standard-plugin\nMain features of esdoc2 were carved out to [esdoc2-standard-plugin](https://github.com/esdoc2/esdoc2-plugins/tree/master/packages/esdoc2-standard-plugin)\n\nPlease use the plugin with the following config.\n\n`npm install esdoc2-standard-plugin`\n\n```json\n{\n  \"source\": \"./src\",\n  \"destination\": \"./docs\",\n  \"plugins\": [{\"name\": \"esdoc2-standard-plugin\"}]\n}\n```\n\nThe full config description is [here](./config.html#full-config).<br/>\nEspecially [integration test codes](./config.html#integrate-test-codes-config) and [integration manual](./config.html#integrate-manual-config) were big changed.\n\n## Using Other Plugins\nThe following features were carved out to each plugins. If you want to use the features, please use the plugins.\n\n- `config.includeSource` => [esdoc2-exclude-source-plugin](https://github.com/esdoc2/esdoc2-plugins/tree/master/packages/esdoc2-exclude-source-plugin)\n- `config.styles` => [esdoc2-inject-style-plugin](https://github.com/esdoc2/esdoc2-plugins/tree/master/packages/esdoc2-inject-style-plugin)\n- `config.scripts` => [esdoc2-inject-script-plugin](https://github.com/esdoc2/esdoc2-plugins/tree/master/packages/esdoc2-inject-script-plugin)\n- `config.experimentalProposal` => [esdoc2-ecmascript-proposal-plugin](https://github.com/esdoc2/esdoc2-plugins/tree/master/packages/esdoc2-ecmascript-proposal-plugin)\n- Parsing JSX => [esdoc2-jsx-plugin](https://github.com/esdoc2/esdoc2-plugins/tree/master/packages/esdoc2-jsx-plugin)\n",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 325,
    "kind": "testFile",
    "name": "test/integration-test/README.test.js",
    "content": "import assert from 'assert';\nimport {find, file} from './util';\n\ndescribe('test/README.md', ()=>{\n  it('has README', ()=>{\n    const doc = find('longname', /\\/README.md$/);\n    assert.equal(doc.kind, 'index');\n    assert.equal(doc.content, file(doc.longname));\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/README.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 326,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "test/integration-test/README.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/README.test.js~describe0",
    "access": null,
    "description": "test/README.md",
    "lineNumber": 4
  },
  {
    "__docId__": 327,
    "kind": "test",
    "name": "it1",
    "testId": 1,
    "memberof": "test/integration-test/README.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/README.test.js~describe0.it1",
    "access": null,
    "description": "has README",
    "lineNumber": 5
  },
  {
    "__docId__": 328,
    "kind": "testFile",
    "name": "test/integration-test/package.test.js",
    "content": "import assert from 'assert';\nimport {find} from './util';\n\ndescribe('test/package.json:', ()=>{\n  it('has package json', ()=>{\n    const doc = find('longname', /\\/package\\.json$/);\n    const obj = JSON.parse(doc.content);\n    assert.equal(obj.name, 'esdoc2-test');\n    assert.equal(obj.version, '1.2.3');\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/package.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 329,
    "kind": "test",
    "name": "describe2",
    "testId": 2,
    "memberof": "test/integration-test/package.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/package.test.js~describe2",
    "access": null,
    "description": "test/package.json:",
    "lineNumber": 4
  },
  {
    "__docId__": 330,
    "kind": "test",
    "name": "it3",
    "testId": 3,
    "memberof": "test/integration-test/package.test.js~describe2",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/package.test.js~describe2.it3",
    "access": null,
    "description": "has package json",
    "lineNumber": 5
  },
  {
    "__docId__": 331,
    "kind": "testFile",
    "name": "test/integration-test/plugin/MyPlugin1.test.js",
    "content": "import assert from 'assert';\nimport fs from 'fs';\nimport {find} from '../util';\n\ndescribe('test/plugin/MyPlugin1:', ()=>{\n  it('calls handlers', () => {\n    return new Promise((resolve, reject) => {\n      const callInfo = require('./MyPlugin1').callInfo;\n      assert.deepEqual(callInfo.handlerNames, {\n        onStart: true,\n        onHandleConfig: true,\n        onHandleCode: true,\n        onHandleCodeParser: true,\n        onHandleAST: true,\n        onHandleDocs: true,\n        onPublish: true,\n        onHandleContent: true,\n        onComplete: true\n      });\n      assert.equal(callInfo.usedParser, true);\n\n      resolve();\n    });\n  });\n\n  it('modified input', ()=>{\n    const doc = find('longname', /EmptyForPlugin_Modified1_Modified2$/);\n    assert.equal(doc.kind, 'class');\n  });\n\n  it('output', ()=>{\n    const content = fs.readFileSync('./test/integration-test/out/index.md').toString();\n    assert(content.includes('EmptyForPlugin_Modified1_Modified2'));\n    assert(content.includes('made by MyPlugin1_Modified'));\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/plugin/MyPlugin1.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 332,
    "kind": "test",
    "name": "describe4",
    "testId": 4,
    "memberof": "test/integration-test/plugin/MyPlugin1.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/plugin/MyPlugin1.test.js~describe4",
    "access": null,
    "description": "test/plugin/MyPlugin1:",
    "lineNumber": 5
  },
  {
    "__docId__": 333,
    "kind": "test",
    "name": "it5",
    "testId": 5,
    "memberof": "test/integration-test/plugin/MyPlugin1.test.js~describe4",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/plugin/MyPlugin1.test.js~describe4.it5",
    "access": null,
    "description": "calls handlers",
    "lineNumber": 6
  },
  {
    "__docId__": 334,
    "kind": "test",
    "name": "it6",
    "testId": 6,
    "memberof": "test/integration-test/plugin/MyPlugin1.test.js~describe4",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/plugin/MyPlugin1.test.js~describe4.it6",
    "access": null,
    "description": "modified input",
    "lineNumber": 26
  },
  {
    "__docId__": 335,
    "kind": "test",
    "name": "it7",
    "testId": 7,
    "memberof": "test/integration-test/plugin/MyPlugin1.test.js~describe4",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/plugin/MyPlugin1.test.js~describe4.it7",
    "access": null,
    "description": "output",
    "lineNumber": 31
  },
  {
    "__docId__": 336,
    "kind": "testFile",
    "name": "test/integration-test/plugin/MyPlugin2.test.js",
    "content": "import assert from 'assert';\n\ndescribe('test/plugin/MyPlugin2:', ()=>{\n  it('calls handlers', () => {\n    return new Promise((resolve, reject) => {\n      const callInfo = require('./MyPlugin2').callInfo;\n      assert.deepEqual(callInfo.handlerNames, {\n        onStart: true,\n        onHandleConfig: true,\n        onHandleCode: true,\n        onHandleCodeParser: true,\n        onHandleAST: true,\n        onHandleDocs: true,\n        onPublish: true,\n        onHandleContent: true,\n        onComplete: true\n      });\n\n      resolve();\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/plugin/MyPlugin2.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 337,
    "kind": "test",
    "name": "describe8",
    "testId": 8,
    "memberof": "test/integration-test/plugin/MyPlugin2.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/plugin/MyPlugin2.test.js~describe8",
    "access": null,
    "description": "test/plugin/MyPlugin2:",
    "lineNumber": 3
  },
  {
    "__docId__": 338,
    "kind": "test",
    "name": "it9",
    "testId": 9,
    "memberof": "test/integration-test/plugin/MyPlugin2.test.js~describe8",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/plugin/MyPlugin2.test.js~describe8.it9",
    "access": null,
    "description": "calls handlers",
    "lineNumber": 4
  },
  {
    "__docId__": 339,
    "kind": "testFile",
    "name": "test/integration-test/src/Abstract/Abstract.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Abstract/Abstract', ()=>{\n  it('is abstract', ()=>{\n    const doc = find('longname', 'src/Abstract/Abstract.js~TestAbstract#methodAbstract');\n    assert.equal(doc.abstract, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Abstract/Abstract.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 340,
    "kind": "test",
    "name": "describe10",
    "testId": 10,
    "memberof": "test/integration-test/src/Abstract/Abstract.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Abstract/Abstract.test.js~describe10",
    "access": null,
    "description": "test/Abstract/Abstract",
    "lineNumber": 4
  },
  {
    "__docId__": 341,
    "kind": "test",
    "name": "it11",
    "testId": 11,
    "memberof": "test/integration-test/src/Abstract/Abstract.test.js~describe10",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Abstract/Abstract.test.js~describe10.it11",
    "access": null,
    "description": "is abstract",
    "lineNumber": 5
  },
  {
    "__docId__": 342,
    "kind": "testFile",
    "name": "test/integration-test/src/Access/Class.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Access/Class:', ()=>{\n  it('is public', ()=>{\n    const doc = find('longname', 'src/Access/Class.js~TestAccessClassPublic');\n    assert.equal(doc.access, 'public');\n  });\n\n  it('is protected', ()=>{\n    const doc = find('longname', 'src/Access/Class.js~TestAccessClassProtected');\n    assert.equal(doc.access, 'protected');\n  });\n\n  it('is private', ()=>{\n    const doc = find('longname', 'src/Access/Class.js~TestAccessClassPrivate');\n    assert.equal(doc.access, 'private');\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Access/Class.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 343,
    "kind": "test",
    "name": "describe12",
    "testId": 12,
    "memberof": "test/integration-test/src/Access/Class.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Access/Class.test.js~describe12",
    "access": null,
    "description": "test/Access/Class:",
    "lineNumber": 4
  },
  {
    "__docId__": 344,
    "kind": "test",
    "name": "it13",
    "testId": 13,
    "memberof": "test/integration-test/src/Access/Class.test.js~describe12",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Access/Class.test.js~describe12.it13",
    "access": null,
    "description": "is public",
    "lineNumber": 5
  },
  {
    "__docId__": 345,
    "kind": "test",
    "name": "it14",
    "testId": 14,
    "memberof": "test/integration-test/src/Access/Class.test.js~describe12",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Access/Class.test.js~describe12.it14",
    "access": null,
    "description": "is protected",
    "lineNumber": 10
  },
  {
    "__docId__": 346,
    "kind": "test",
    "name": "it15",
    "testId": 15,
    "memberof": "test/integration-test/src/Access/Class.test.js~describe12",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Access/Class.test.js~describe12.it15",
    "access": null,
    "description": "is private",
    "lineNumber": 15
  },
  {
    "__docId__": 347,
    "kind": "testFile",
    "name": "test/integration-test/src/Access/Function.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Access/Function:', ()=>{\n  it('is public', ()=>{\n    const doc = find('longname', 'src/Access/Function.js~testAccessFunctionPublic');\n    assert.equal(doc.access, 'public');\n  });\n\n  it('is protected', ()=>{\n    const doc = find('longname', 'src/Access/Function.js~testAccessFunctionProtected');\n    assert.equal(doc.access, 'protected');\n  });\n\n  it('is private', ()=>{\n    const doc = find('longname', 'src/Access/Function.js~testAccessFunctionPrivate');\n    assert.equal(doc.access, 'private');\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Access/Function.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 348,
    "kind": "test",
    "name": "describe16",
    "testId": 16,
    "memberof": "test/integration-test/src/Access/Function.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Access/Function.test.js~describe16",
    "access": null,
    "description": "test/Access/Function:",
    "lineNumber": 4
  },
  {
    "__docId__": 349,
    "kind": "test",
    "name": "it17",
    "testId": 17,
    "memberof": "test/integration-test/src/Access/Function.test.js~describe16",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Access/Function.test.js~describe16.it17",
    "access": null,
    "description": "is public",
    "lineNumber": 5
  },
  {
    "__docId__": 350,
    "kind": "test",
    "name": "it18",
    "testId": 18,
    "memberof": "test/integration-test/src/Access/Function.test.js~describe16",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Access/Function.test.js~describe16.it18",
    "access": null,
    "description": "is protected",
    "lineNumber": 10
  },
  {
    "__docId__": 351,
    "kind": "test",
    "name": "it19",
    "testId": 19,
    "memberof": "test/integration-test/src/Access/Function.test.js~describe16",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Access/Function.test.js~describe16.it19",
    "access": null,
    "description": "is private",
    "lineNumber": 15
  },
  {
    "__docId__": 352,
    "kind": "testFile",
    "name": "test/integration-test/src/Access/Member.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Access/Member:', ()=>{\n  it('is public', ()=>{\n    const doc = find('longname', 'src/Access/Member.js~TestAccessMember#mPublic');\n    assert.equal(doc.access, 'public');\n  });\n\n  it('is protected', ()=>{\n    const doc = find('longname', 'src/Access/Member.js~TestAccessMember#mProtected');\n    assert.equal(doc.access, 'protected');\n  });\n\n  it('is private', ()=>{\n    const doc = find('longname', 'src/Access/Member.js~TestAccessMember#mPrivate');\n    assert.equal(doc.access, 'private');\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Access/Member.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 353,
    "kind": "test",
    "name": "describe20",
    "testId": 20,
    "memberof": "test/integration-test/src/Access/Member.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Access/Member.test.js~describe20",
    "access": null,
    "description": "test/Access/Member:",
    "lineNumber": 4
  },
  {
    "__docId__": 354,
    "kind": "test",
    "name": "it21",
    "testId": 21,
    "memberof": "test/integration-test/src/Access/Member.test.js~describe20",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Access/Member.test.js~describe20.it21",
    "access": null,
    "description": "is public",
    "lineNumber": 5
  },
  {
    "__docId__": 355,
    "kind": "test",
    "name": "it22",
    "testId": 22,
    "memberof": "test/integration-test/src/Access/Member.test.js~describe20",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Access/Member.test.js~describe20.it22",
    "access": null,
    "description": "is protected",
    "lineNumber": 10
  },
  {
    "__docId__": 356,
    "kind": "test",
    "name": "it23",
    "testId": 23,
    "memberof": "test/integration-test/src/Access/Member.test.js~describe20",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Access/Member.test.js~describe20.it23",
    "access": null,
    "description": "is private",
    "lineNumber": 15
  },
  {
    "__docId__": 357,
    "kind": "testFile",
    "name": "test/integration-test/src/Access/Method.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Access/Method:', ()=>{\n  it('is public', ()=>{\n    const doc = find('longname', 'src/Access/Method.js~TestAccessMethod#methodPublic');\n    assert.equal(doc.access, 'public');\n  });\n\n  it('is protected', ()=>{\n    const doc = find('longname', 'src/Access/Method.js~TestAccessMethod#methodProtected');\n    assert.equal(doc.access, 'protected');\n  });\n\n  it('is private', ()=>{\n    const doc = find('longname', 'src/Access/Method.js~TestAccessMethod#methodPrivate');\n    assert.equal(doc.access, 'private');\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Access/Method.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 358,
    "kind": "test",
    "name": "describe24",
    "testId": 24,
    "memberof": "test/integration-test/src/Access/Method.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Access/Method.test.js~describe24",
    "access": null,
    "description": "test/Access/Method:",
    "lineNumber": 4
  },
  {
    "__docId__": 359,
    "kind": "test",
    "name": "it25",
    "testId": 25,
    "memberof": "test/integration-test/src/Access/Method.test.js~describe24",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Access/Method.test.js~describe24.it25",
    "access": null,
    "description": "is public",
    "lineNumber": 5
  },
  {
    "__docId__": 360,
    "kind": "test",
    "name": "it26",
    "testId": 26,
    "memberof": "test/integration-test/src/Access/Method.test.js~describe24",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Access/Method.test.js~describe24.it26",
    "access": null,
    "description": "is protected",
    "lineNumber": 10
  },
  {
    "__docId__": 361,
    "kind": "test",
    "name": "it27",
    "testId": 27,
    "memberof": "test/integration-test/src/Access/Method.test.js~describe24",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Access/Method.test.js~describe24.it27",
    "access": null,
    "description": "is private",
    "lineNumber": 15
  },
  {
    "__docId__": 362,
    "kind": "testFile",
    "name": "test/integration-test/src/Access/Variable.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Access/Variable:', ()=>{\n  it('is public', ()=>{\n    const doc = find('longname', 'src/Access/Variable.js~testAccessVariablePublic');\n    assert.equal(doc.access, 'public');\n  });\n\n  it('is protected', ()=>{\n    const doc = find('longname', 'src/Access/Variable.js~testAccessVariableProtected');\n    assert.equal(doc.access, 'protected');\n  });\n\n  it('is private', ()=>{\n    const doc = find('longname', 'src/Access/Variable.js~testAccessVariablePrivate');\n    assert.equal(doc.access, 'private');\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Access/Variable.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 363,
    "kind": "test",
    "name": "describe28",
    "testId": 28,
    "memberof": "test/integration-test/src/Access/Variable.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Access/Variable.test.js~describe28",
    "access": null,
    "description": "test/Access/Variable:",
    "lineNumber": 4
  },
  {
    "__docId__": 364,
    "kind": "test",
    "name": "it29",
    "testId": 29,
    "memberof": "test/integration-test/src/Access/Variable.test.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Access/Variable.test.js~describe28.it29",
    "access": null,
    "description": "is public",
    "lineNumber": 5
  },
  {
    "__docId__": 365,
    "kind": "test",
    "name": "it30",
    "testId": 30,
    "memberof": "test/integration-test/src/Access/Variable.test.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Access/Variable.test.js~describe28.it30",
    "access": null,
    "description": "is protected",
    "lineNumber": 10
  },
  {
    "__docId__": 366,
    "kind": "test",
    "name": "it31",
    "testId": 31,
    "memberof": "test/integration-test/src/Access/Variable.test.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Access/Variable.test.js~describe28.it31",
    "access": null,
    "description": "is private",
    "lineNumber": 15
  },
  {
    "__docId__": 367,
    "kind": "testFile",
    "name": "test/integration-test/src/Async/Async.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Async/Async:', ()=>{\n  it('is async method', ()=>{\n    const doc = find('longname', 'src/Async/Async.js~TestAsync#methodAsync');\n    assert.equal(doc.async, true);\n  });\n\n  it('is async function', ()=>{\n    const doc = find('longname', 'src/Async/Async.js~testAsyncFunction');\n    assert.equal(doc.async, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Async/Async.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 368,
    "kind": "test",
    "name": "describe32",
    "testId": 32,
    "memberof": "test/integration-test/src/Async/Async.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Async/Async.test.js~describe32",
    "access": null,
    "description": "test/Async/Async:",
    "lineNumber": 4
  },
  {
    "__docId__": 369,
    "kind": "test",
    "name": "it33",
    "testId": 33,
    "memberof": "test/integration-test/src/Async/Async.test.js~describe32",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Async/Async.test.js~describe32.it33",
    "access": null,
    "description": "is async method",
    "lineNumber": 5
  },
  {
    "__docId__": 370,
    "kind": "test",
    "name": "it34",
    "testId": 34,
    "memberof": "test/integration-test/src/Async/Async.test.js~describe32",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Async/Async.test.js~describe32.it34",
    "access": null,
    "description": "is async function",
    "lineNumber": 10
  },
  {
    "__docId__": 371,
    "kind": "testFile",
    "name": "test/integration-test/src/Deprecated/Deprecated.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Deprecated/Deprecated', ()=>{\n  it('id deprecated class', ()=>{\n    const doc = find('longname', 'src/Deprecated/Deprecated.js~TestDeprecatedClass');\n    assert.equal(doc.deprecated, 'this is deprecated.');\n  });\n\n  it('id deprecated member', ()=>{\n    const doc = find('longname', 'src/Deprecated/Deprecated.js~TestDeprecatedClass#mDeprecated');\n    assert.equal(doc.deprecated, true);\n  });\n\n  it('id deprecated method', ()=>{\n    const doc = find('longname', 'src/Deprecated/Deprecated.js~TestDeprecatedClass#methodDeprecated');\n    assert.equal(doc.deprecated, true);\n  });\n\n  it('id deprecated function', ()=>{\n    const doc = find('longname', 'src/Deprecated/Deprecated.js~testDeprecatedFunction');\n    assert.equal(doc.deprecated, true);\n  });\n\n  it('id deprecated variable', ()=>{\n    const doc = find('longname', 'src/Deprecated/Deprecated.js~testDeprecatedVariable');\n    assert.equal(doc.deprecated, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Deprecated/Deprecated.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 372,
    "kind": "test",
    "name": "describe35",
    "testId": 35,
    "memberof": "test/integration-test/src/Deprecated/Deprecated.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Deprecated/Deprecated.test.js~describe35",
    "access": null,
    "description": "test/Deprecated/Deprecated",
    "lineNumber": 4
  },
  {
    "__docId__": 373,
    "kind": "test",
    "name": "it36",
    "testId": 36,
    "memberof": "test/integration-test/src/Deprecated/Deprecated.test.js~describe35",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Deprecated/Deprecated.test.js~describe35.it36",
    "access": null,
    "description": "id deprecated class",
    "lineNumber": 5
  },
  {
    "__docId__": 374,
    "kind": "test",
    "name": "it37",
    "testId": 37,
    "memberof": "test/integration-test/src/Deprecated/Deprecated.test.js~describe35",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Deprecated/Deprecated.test.js~describe35.it37",
    "access": null,
    "description": "id deprecated member",
    "lineNumber": 10
  },
  {
    "__docId__": 375,
    "kind": "test",
    "name": "it38",
    "testId": 38,
    "memberof": "test/integration-test/src/Deprecated/Deprecated.test.js~describe35",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Deprecated/Deprecated.test.js~describe35.it38",
    "access": null,
    "description": "id deprecated method",
    "lineNumber": 15
  },
  {
    "__docId__": 376,
    "kind": "test",
    "name": "it39",
    "testId": 39,
    "memberof": "test/integration-test/src/Deprecated/Deprecated.test.js~describe35",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Deprecated/Deprecated.test.js~describe35.it39",
    "access": null,
    "description": "id deprecated function",
    "lineNumber": 20
  },
  {
    "__docId__": 377,
    "kind": "test",
    "name": "it40",
    "testId": 40,
    "memberof": "test/integration-test/src/Deprecated/Deprecated.test.js~describe35",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Deprecated/Deprecated.test.js~describe35.it40",
    "access": null,
    "description": "id deprecated variable",
    "lineNumber": 25
  },
  {
    "__docId__": 378,
    "kind": "testFile",
    "name": "test/integration-test/src/Desc/Desc.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Desc/Desc:', ()=>{\n  it('has class desc', ()=>{\n    const doc = find('longname', 'src/Desc/Desc.js~TestDescClass') ;\n    assert.equal(doc.description, 'this is TestDescClass.')\n  });\n\n  it('has constructor desc', ()=>{\n    const doc = find('longname', 'src/Desc/Desc.js~TestDescClass#constructor') ;\n    assert.equal(doc.description, 'this is constructor.')\n  });\n\n  it('has member desc', ()=>{\n    const doc = find('longname', 'src/Desc/Desc.js~TestDescClass#memberDesc') ;\n    assert.equal(doc.description, 'this is memberDesc.')\n  });\n\n  it('has method desc', ()=>{\n    const doc = find('longname', 'src/Desc/Desc.js~TestDescClass#methodDesc') ;\n    assert.equal(doc.description, 'this is methodDesc.')\n  });\n\n  it('has getter desc', ()=>{\n    const doc = find('longname', 'src/Desc/Desc.js~TestDescClass#getterDesc') ;\n    assert.equal(doc.description, 'this is getterDesc.')\n  });\n\n  it('has setter desc', ()=>{\n    const doc = find('longname', 'src/Desc/Desc.js~TestDescClass#setterDesc') ;\n    assert.equal(doc.description, 'this is setterDesc.')\n  });\n\n  it('has function desc', ()=>{\n    const doc = find('longname', 'src/Desc/Desc.js~testDescFunction') ;\n    assert.equal(doc.description, 'this is testDescFunction.')\n  });\n\n  it('has variable desc', ()=>{\n    const doc = find('longname', 'src/Desc/Desc.js~testDescVariable') ;\n    assert.equal(doc.description, 'this is testDescVariable.')\n  });\n\n  it('has typedef desc', ()=>{\n    const doc = find('longname', 'src/Desc/Desc.js~TestDescTypedef') ;\n    assert.equal(doc.description, 'this is TestDescTypedef.')\n  });\n\n  it('has external desc', ()=>{\n    const doc = find('longname', 'src/Desc/Desc.js~TestDescExternal') ;\n    assert.equal(doc.description, 'this is TestDescExternal.')\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Desc/Desc.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 379,
    "kind": "test",
    "name": "describe41",
    "testId": 41,
    "memberof": "test/integration-test/src/Desc/Desc.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Desc/Desc.test.js~describe41",
    "access": null,
    "description": "test/Desc/Desc:",
    "lineNumber": 4
  },
  {
    "__docId__": 380,
    "kind": "test",
    "name": "it42",
    "testId": 42,
    "memberof": "test/integration-test/src/Desc/Desc.test.js~describe41",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Desc/Desc.test.js~describe41.it42",
    "access": null,
    "description": "has class desc",
    "lineNumber": 5
  },
  {
    "__docId__": 381,
    "kind": "test",
    "name": "it43",
    "testId": 43,
    "memberof": "test/integration-test/src/Desc/Desc.test.js~describe41",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Desc/Desc.test.js~describe41.it43",
    "access": null,
    "description": "has constructor desc",
    "lineNumber": 10
  },
  {
    "__docId__": 382,
    "kind": "test",
    "name": "it44",
    "testId": 44,
    "memberof": "test/integration-test/src/Desc/Desc.test.js~describe41",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Desc/Desc.test.js~describe41.it44",
    "access": null,
    "description": "has member desc",
    "lineNumber": 15
  },
  {
    "__docId__": 383,
    "kind": "test",
    "name": "it45",
    "testId": 45,
    "memberof": "test/integration-test/src/Desc/Desc.test.js~describe41",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Desc/Desc.test.js~describe41.it45",
    "access": null,
    "description": "has method desc",
    "lineNumber": 20
  },
  {
    "__docId__": 384,
    "kind": "test",
    "name": "it46",
    "testId": 46,
    "memberof": "test/integration-test/src/Desc/Desc.test.js~describe41",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Desc/Desc.test.js~describe41.it46",
    "access": null,
    "description": "has getter desc",
    "lineNumber": 25
  },
  {
    "__docId__": 385,
    "kind": "test",
    "name": "it47",
    "testId": 47,
    "memberof": "test/integration-test/src/Desc/Desc.test.js~describe41",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Desc/Desc.test.js~describe41.it47",
    "access": null,
    "description": "has setter desc",
    "lineNumber": 30
  },
  {
    "__docId__": 386,
    "kind": "test",
    "name": "it48",
    "testId": 48,
    "memberof": "test/integration-test/src/Desc/Desc.test.js~describe41",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Desc/Desc.test.js~describe41.it48",
    "access": null,
    "description": "has function desc",
    "lineNumber": 35
  },
  {
    "__docId__": 387,
    "kind": "test",
    "name": "it49",
    "testId": 49,
    "memberof": "test/integration-test/src/Desc/Desc.test.js~describe41",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Desc/Desc.test.js~describe41.it49",
    "access": null,
    "description": "has variable desc",
    "lineNumber": 40
  },
  {
    "__docId__": 388,
    "kind": "test",
    "name": "it50",
    "testId": 50,
    "memberof": "test/integration-test/src/Desc/Desc.test.js~describe41",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Desc/Desc.test.js~describe41.it50",
    "access": null,
    "description": "has typedef desc",
    "lineNumber": 45
  },
  {
    "__docId__": 389,
    "kind": "test",
    "name": "it51",
    "testId": 51,
    "memberof": "test/integration-test/src/Desc/Desc.test.js~describe41",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Desc/Desc.test.js~describe41.it51",
    "access": null,
    "description": "has external desc",
    "lineNumber": 50
  },
  {
    "__docId__": 390,
    "kind": "testFile",
    "name": "test/integration-test/src/Emits/Emits.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Emits/Emits:', ()=>{\n  it('has emits from method', ()=>{\n    const doc = find('longname', 'src/Emits/Emits.js~TestEmitsClass#methodEmits');\n    assert.deepEqual(doc.emits, [\n      {\n        types: [\"TestEmitsEvent1\"],\n        \"description\": \"emits event when foo.\"\n      },\n      {\n        types: [\"TestEmitsEvent2\"],\n        \"description\": \"emits event when bar.\"\n      }\n    ]);\n  });\n\n  it('has emits from function', ()=>{\n    const doc = find('longname', 'src/Emits/Emits.js~testEmitsFunction');\n    assert.deepEqual(doc.emits, [\n      {\n        types: [\"TestEmitsEvent1\"],\n        \"description\": \"\"\n      },\n    ]);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Emits/Emits.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 391,
    "kind": "test",
    "name": "describe52",
    "testId": 52,
    "memberof": "test/integration-test/src/Emits/Emits.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Emits/Emits.test.js~describe52",
    "access": null,
    "description": "test/Emits/Emits:",
    "lineNumber": 4
  },
  {
    "__docId__": 392,
    "kind": "test",
    "name": "it53",
    "testId": 53,
    "memberof": "test/integration-test/src/Emits/Emits.test.js~describe52",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Emits/Emits.test.js~describe52.it53",
    "access": null,
    "description": "has emits from method",
    "lineNumber": 5
  },
  {
    "__docId__": 393,
    "kind": "test",
    "name": "it54",
    "testId": 54,
    "memberof": "test/integration-test/src/Emits/Emits.test.js~describe52",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Emits/Emits.test.js~describe52.it54",
    "access": null,
    "description": "has emits from function",
    "lineNumber": 19
  },
  {
    "__docId__": 394,
    "kind": "testFile",
    "name": "test/integration-test/src/Example/Example.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Example/Example:', ()=>{\n  it('has example', ()=>{\n    const doc = find('longname', 'src/Example/Example.js~TestExample');\n    assert.deepEqual(doc.examples, [\n      \"console.log(1)\",\n      \"<caption>this is caption</caption>\\nconsole.log(2)\"\n    ]);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Example/Example.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 395,
    "kind": "test",
    "name": "describe55",
    "testId": 55,
    "memberof": "test/integration-test/src/Example/Example.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Example/Example.test.js~describe55",
    "access": null,
    "description": "test/Example/Example:",
    "lineNumber": 4
  },
  {
    "__docId__": 396,
    "kind": "test",
    "name": "it56",
    "testId": 56,
    "memberof": "test/integration-test/src/Example/Example.test.js~describe55",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Example/Example.test.js~describe55.it56",
    "access": null,
    "description": "has example",
    "lineNumber": 5
  },
  {
    "__docId__": 397,
    "kind": "testFile",
    "name": "test/integration-test/src/Experimental/Experimental.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Experimental/Experimental:', ()=>{\n  it('has experimental with desc', ()=>{\n    const doc = find('longname', 'src/Experimental/Experimental.js~TestExperimental');\n    assert.equal(doc.experimental, 'this is experimental');\n  });\n\n  it('has experimental without desc', ()=>{\n    const doc = find('longname', 'src/Experimental/Experimental.js~TestExperimental#methodExperimental');\n    assert.equal(doc.experimental, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Experimental/Experimental.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 398,
    "kind": "test",
    "name": "describe57",
    "testId": 57,
    "memberof": "test/integration-test/src/Experimental/Experimental.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Experimental/Experimental.test.js~describe57",
    "access": null,
    "description": "test/Experimental/Experimental:",
    "lineNumber": 4
  },
  {
    "__docId__": 399,
    "kind": "test",
    "name": "it58",
    "testId": 58,
    "memberof": "test/integration-test/src/Experimental/Experimental.test.js~describe57",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Experimental/Experimental.test.js~describe57.it58",
    "access": null,
    "description": "has experimental with desc",
    "lineNumber": 5
  },
  {
    "__docId__": 400,
    "kind": "test",
    "name": "it59",
    "testId": 59,
    "memberof": "test/integration-test/src/Experimental/Experimental.test.js~describe57",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Experimental/Experimental.test.js~describe57.it59",
    "access": null,
    "description": "has experimental without desc",
    "lineNumber": 10
  },
  {
    "__docId__": 401,
    "kind": "testFile",
    "name": "test/integration-test/src/Export/Anonymous/Class.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../../util';\n\ndescribe('test/Export/Anonymous/class:', ()=>{\n  it('is exported', ()=>{\n    const doc = find('longname', 'src/Export/Anonymous/Class.js~Class');\n    assert.equal(doc.export, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Export/Anonymous/Class.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 402,
    "kind": "test",
    "name": "describe60",
    "testId": 60,
    "memberof": "test/integration-test/src/Export/Anonymous/Class.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Export/Anonymous/Class.test.js~describe60",
    "access": null,
    "description": "test/Export/Anonymous/class:",
    "lineNumber": 4
  },
  {
    "__docId__": 403,
    "kind": "test",
    "name": "it61",
    "testId": 61,
    "memberof": "test/integration-test/src/Export/Anonymous/Class.test.js~describe60",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Anonymous/Class.test.js~describe60.it61",
    "access": null,
    "description": "is exported",
    "lineNumber": 5
  },
  {
    "__docId__": 404,
    "kind": "testFile",
    "name": "test/integration-test/src/Export/Anonymous/Function.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../../util';\n\ndescribe('test/Export/Anonymous/function:', ()=>{\n  it('is exported', ()=>{\n    const doc = find('longname', 'src/Export/Anonymous/Function.js~Function');\n    assert.equal(doc.export, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Export/Anonymous/Function.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 405,
    "kind": "test",
    "name": "describe62",
    "testId": 62,
    "memberof": "test/integration-test/src/Export/Anonymous/Function.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Export/Anonymous/Function.test.js~describe62",
    "access": null,
    "description": "test/Export/Anonymous/function:",
    "lineNumber": 4
  },
  {
    "__docId__": 406,
    "kind": "test",
    "name": "it63",
    "testId": 63,
    "memberof": "test/integration-test/src/Export/Anonymous/Function.test.js~describe62",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Anonymous/Function.test.js~describe62.it63",
    "access": null,
    "description": "is exported",
    "lineNumber": 5
  },
  {
    "__docId__": 407,
    "kind": "testFile",
    "name": "test/integration-test/src/Export/ArrowFunction.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Export/ArrowFunction:', ()=>{\n  it('is exported that default export', ()=>{\n    const doc = find('longname', 'src/Export/ArrowFunction.js~ArrowFunction');\n    assert.equal(doc.export, true);\n  });\n\n  it('is exported that named export', ()=>{\n    const doc = find('longname', 'src/Export/ArrowFunction.js~testExportArrowFunction2');\n    assert.equal(doc.export, true);\n  });\n\n  it('is not exported that no export', ()=>{\n    const doc = find('longname', 'src/Export/ArrowFunction.js~testExportArrowFunction3');\n    assert.equal(doc.export, false);\n  });\n\n  it('is exported that indirect', ()=>{\n    const doc = find('longname', 'src/Export/ArrowFunction.js~testExportArrowFunction4');\n    assert.equal(doc.export, true);\n  });\n\n  it('is exported that multiple named export', ()=>{\n    const doc1 = find('longname', 'src/Export/ArrowFunction.js~testExportArrowFunction5');\n    const doc2 = find('longname', 'src/Export/ArrowFunction.js~testExportArrowFunction6');\n\n    assert.equal(doc1.export, true);\n    assert.equal(doc2.export, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Export/ArrowFunction.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 408,
    "kind": "test",
    "name": "describe64",
    "testId": 64,
    "memberof": "test/integration-test/src/Export/ArrowFunction.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Export/ArrowFunction.test.js~describe64",
    "access": null,
    "description": "test/Export/ArrowFunction:",
    "lineNumber": 4
  },
  {
    "__docId__": 409,
    "kind": "test",
    "name": "it65",
    "testId": 65,
    "memberof": "test/integration-test/src/Export/ArrowFunction.test.js~describe64",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/ArrowFunction.test.js~describe64.it65",
    "access": null,
    "description": "is exported that default export",
    "lineNumber": 5
  },
  {
    "__docId__": 410,
    "kind": "test",
    "name": "it66",
    "testId": 66,
    "memberof": "test/integration-test/src/Export/ArrowFunction.test.js~describe64",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/ArrowFunction.test.js~describe64.it66",
    "access": null,
    "description": "is exported that named export",
    "lineNumber": 10
  },
  {
    "__docId__": 411,
    "kind": "test",
    "name": "it67",
    "testId": 67,
    "memberof": "test/integration-test/src/Export/ArrowFunction.test.js~describe64",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/ArrowFunction.test.js~describe64.it67",
    "access": null,
    "description": "is not exported that no export",
    "lineNumber": 15
  },
  {
    "__docId__": 412,
    "kind": "test",
    "name": "it68",
    "testId": 68,
    "memberof": "test/integration-test/src/Export/ArrowFunction.test.js~describe64",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/ArrowFunction.test.js~describe64.it68",
    "access": null,
    "description": "is exported that indirect",
    "lineNumber": 20
  },
  {
    "__docId__": 413,
    "kind": "test",
    "name": "it69",
    "testId": 69,
    "memberof": "test/integration-test/src/Export/ArrowFunction.test.js~describe64",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/ArrowFunction.test.js~describe64.it69",
    "access": null,
    "description": "is exported that multiple named export",
    "lineNumber": 25
  },
  {
    "__docId__": 414,
    "kind": "testFile",
    "name": "test/integration-test/src/Export/Class.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Export/Class:', ()=>{\n  it('is exported that default export', () =>{\n    const doc = find('longname', 'src/Export/Class.js~TestExportClass1');\n    assert.equal(doc.export, true);\n  });\n\n  it('is exported that named export', () =>{\n    const doc = find('longname', 'src/Export/Class.js~TestExportClass2');\n    assert.equal(doc.export, true);\n  });\n\n  it('is exported that indirect with declaration', () =>{\n    const doc = find('longname', 'src/Export/Class.js~TestExportClass3');\n    assert.equal(doc.export, true);\n  });\n\n  it('is exported that indirect with expression', () =>{\n    const doc = find('longname', 'src/Export/Class.js~TestExportClass4');\n    assert.equal(doc.export, true);\n  });\n\n  it('is not exported that non export', () =>{\n    const doc = find('longname', 'src/Export/Class.js~TestExportClass5');\n    assert.equal(doc.export, false);\n  });\n\n  it('is exported that multiple named export', ()=>{\n    const [doc1, doc2] = find('longname',\n      'src/Export/Class.js~TestExportClass6',\n      'src/Export/Class.js~TestExportClass7'\n    );\n\n    assert.equal(doc1.export, true);\n    assert.equal(doc2.export, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Export/Class.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 415,
    "kind": "test",
    "name": "describe70",
    "testId": 70,
    "memberof": "test/integration-test/src/Export/Class.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Export/Class.test.js~describe70",
    "access": null,
    "description": "test/Export/Class:",
    "lineNumber": 4
  },
  {
    "__docId__": 416,
    "kind": "test",
    "name": "it71",
    "testId": 71,
    "memberof": "test/integration-test/src/Export/Class.test.js~describe70",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Class.test.js~describe70.it71",
    "access": null,
    "description": "is exported that default export",
    "lineNumber": 5
  },
  {
    "__docId__": 417,
    "kind": "test",
    "name": "it72",
    "testId": 72,
    "memberof": "test/integration-test/src/Export/Class.test.js~describe70",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Class.test.js~describe70.it72",
    "access": null,
    "description": "is exported that named export",
    "lineNumber": 10
  },
  {
    "__docId__": 418,
    "kind": "test",
    "name": "it73",
    "testId": 73,
    "memberof": "test/integration-test/src/Export/Class.test.js~describe70",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Class.test.js~describe70.it73",
    "access": null,
    "description": "is exported that indirect with declaration",
    "lineNumber": 15
  },
  {
    "__docId__": 419,
    "kind": "test",
    "name": "it74",
    "testId": 74,
    "memberof": "test/integration-test/src/Export/Class.test.js~describe70",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Class.test.js~describe70.it74",
    "access": null,
    "description": "is exported that indirect with expression",
    "lineNumber": 20
  },
  {
    "__docId__": 420,
    "kind": "test",
    "name": "it75",
    "testId": 75,
    "memberof": "test/integration-test/src/Export/Class.test.js~describe70",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Class.test.js~describe70.it75",
    "access": null,
    "description": "is not exported that non export",
    "lineNumber": 25
  },
  {
    "__docId__": 421,
    "kind": "test",
    "name": "it76",
    "testId": 76,
    "memberof": "test/integration-test/src/Export/Class.test.js~describe70",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Class.test.js~describe70.it76",
    "access": null,
    "description": "is exported that multiple named export",
    "lineNumber": 30
  },
  {
    "__docId__": 422,
    "kind": "testFile",
    "name": "test/integration-test/src/Export/Extends/Class.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../../util';\n\ndescribe('test/Export/Extends/class', ()=>{\n  it('is not exported that inner class', ()=>{\n    const doc = find('longname', 'src/Export/Extends/Class.js~TestExportExtendsClassInner');\n    assert.equal(doc.export, false);\n  });\n\n  it('is exported that outer class', ()=>{\n    const doc = find('longname', 'src/Export/Extends/Class.js~TestExportExtendsClass');\n    assert.equal(doc.export, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Export/Extends/Class.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 423,
    "kind": "test",
    "name": "describe77",
    "testId": 77,
    "memberof": "test/integration-test/src/Export/Extends/Class.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Export/Extends/Class.test.js~describe77",
    "access": null,
    "description": "test/Export/Extends/class",
    "lineNumber": 4
  },
  {
    "__docId__": 424,
    "kind": "test",
    "name": "it78",
    "testId": 78,
    "memberof": "test/integration-test/src/Export/Extends/Class.test.js~describe77",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Extends/Class.test.js~describe77.it78",
    "access": null,
    "description": "is not exported that inner class",
    "lineNumber": 5
  },
  {
    "__docId__": 425,
    "kind": "test",
    "name": "it79",
    "testId": 79,
    "memberof": "test/integration-test/src/Export/Extends/Class.test.js~describe77",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Extends/Class.test.js~describe77.it79",
    "access": null,
    "description": "is exported that outer class",
    "lineNumber": 10
  },
  {
    "__docId__": 426,
    "kind": "testFile",
    "name": "test/integration-test/src/Export/Function.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Export/Function:', ()=>{\n  it('is exported that default export', ()=>{\n    const doc = find('longname', 'src/Export/Function.js~testExportFunction1');\n    assert.equal(doc.export, true);\n  });\n\n  it('is exported that named export', ()=>{\n    const doc = find('longname', 'src/Export/Function.js~testExportFunction2');\n    assert.equal(doc.export, true);\n  });\n\n  it('is exported that named export with expression', ()=>{\n    const doc = find('longname', 'src/Export/Function.js~testExportFunction3');\n    assert.equal(doc.export, true);\n  });\n\n  it('is not exported that non export', ()=>{\n    const doc = find('longname', 'src/Export/Function.js~testExportFunction4');\n    assert.equal(doc.export, false);\n  });\n\n  it('is not exported that non export with expression', ()=>{\n    const doc = find('longname', 'src/Export/Function.js~testExportFunction5');\n    assert.equal(doc.export, false);\n  });\n\n  it('is exported that indirect named export', ()=>{\n    const doc = find('longname', 'src/Export/Function.js~testExportFunction6');\n    assert.equal(doc.export, true);\n  });\n\n  it('is exported that multiple named export', ()=>{\n    const [doc1, doc2] = find('longname',\n      'src/Export/Function.js~testExportFunction7',\n      'src/Export/Function.js~testExportFunction8'\n    );\n\n    assert.equal(doc1.export, true);\n    assert.equal(doc2.export, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Export/Function.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 427,
    "kind": "test",
    "name": "describe80",
    "testId": 80,
    "memberof": "test/integration-test/src/Export/Function.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Export/Function.test.js~describe80",
    "access": null,
    "description": "test/Export/Function:",
    "lineNumber": 4
  },
  {
    "__docId__": 428,
    "kind": "test",
    "name": "it81",
    "testId": 81,
    "memberof": "test/integration-test/src/Export/Function.test.js~describe80",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Function.test.js~describe80.it81",
    "access": null,
    "description": "is exported that default export",
    "lineNumber": 5
  },
  {
    "__docId__": 429,
    "kind": "test",
    "name": "it82",
    "testId": 82,
    "memberof": "test/integration-test/src/Export/Function.test.js~describe80",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Function.test.js~describe80.it82",
    "access": null,
    "description": "is exported that named export",
    "lineNumber": 10
  },
  {
    "__docId__": 430,
    "kind": "test",
    "name": "it83",
    "testId": 83,
    "memberof": "test/integration-test/src/Export/Function.test.js~describe80",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Function.test.js~describe80.it83",
    "access": null,
    "description": "is exported that named export with expression",
    "lineNumber": 15
  },
  {
    "__docId__": 431,
    "kind": "test",
    "name": "it84",
    "testId": 84,
    "memberof": "test/integration-test/src/Export/Function.test.js~describe80",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Function.test.js~describe80.it84",
    "access": null,
    "description": "is not exported that non export",
    "lineNumber": 20
  },
  {
    "__docId__": 432,
    "kind": "test",
    "name": "it85",
    "testId": 85,
    "memberof": "test/integration-test/src/Export/Function.test.js~describe80",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Function.test.js~describe80.it85",
    "access": null,
    "description": "is not exported that non export with expression",
    "lineNumber": 25
  },
  {
    "__docId__": 433,
    "kind": "test",
    "name": "it86",
    "testId": 86,
    "memberof": "test/integration-test/src/Export/Function.test.js~describe80",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Function.test.js~describe80.it86",
    "access": null,
    "description": "is exported that indirect named export",
    "lineNumber": 30
  },
  {
    "__docId__": 434,
    "kind": "test",
    "name": "it87",
    "testId": 87,
    "memberof": "test/integration-test/src/Export/Function.test.js~describe80",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Function.test.js~describe80.it87",
    "access": null,
    "description": "is exported that multiple named export",
    "lineNumber": 35
  },
  {
    "__docId__": 435,
    "kind": "testFile",
    "name": "test/integration-test/src/Export/IndirectDefault/Class.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../../util';\n\ndescribe('test/Export/IndirectDefault/Class:', ()=>{\n  it('is exported', ()=>{\n    const doc = find('longname', 'src/Export/IndirectDefault/Class.js~TestExportIndirectDefaultClass');\n    assert.equal(doc.export, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Export/IndirectDefault/Class.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 436,
    "kind": "test",
    "name": "describe88",
    "testId": 88,
    "memberof": "test/integration-test/src/Export/IndirectDefault/Class.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Export/IndirectDefault/Class.test.js~describe88",
    "access": null,
    "description": "test/Export/IndirectDefault/Class:",
    "lineNumber": 4
  },
  {
    "__docId__": 437,
    "kind": "test",
    "name": "it89",
    "testId": 89,
    "memberof": "test/integration-test/src/Export/IndirectDefault/Class.test.js~describe88",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/IndirectDefault/Class.test.js~describe88.it89",
    "access": null,
    "description": "is exported",
    "lineNumber": 5
  },
  {
    "__docId__": 438,
    "kind": "testFile",
    "name": "test/integration-test/src/Export/IndirectDefault/Function.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../../util';\n\ndescribe('test/Export/IndirectDefault/Function:', ()=>{\n  it('is exported', ()=>{\n    const doc = find('longname', 'src/Export/IndirectDefault/Function.js~testExportIndirectDefaultFunction');\n    assert.equal(doc.export, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Export/IndirectDefault/Function.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 439,
    "kind": "test",
    "name": "describe90",
    "testId": 90,
    "memberof": "test/integration-test/src/Export/IndirectDefault/Function.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Export/IndirectDefault/Function.test.js~describe90",
    "access": null,
    "description": "test/Export/IndirectDefault/Function:",
    "lineNumber": 4
  },
  {
    "__docId__": 440,
    "kind": "test",
    "name": "it91",
    "testId": 91,
    "memberof": "test/integration-test/src/Export/IndirectDefault/Function.test.js~describe90",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/IndirectDefault/Function.test.js~describe90.it91",
    "access": null,
    "description": "is exported",
    "lineNumber": 5
  },
  {
    "__docId__": 441,
    "kind": "testFile",
    "name": "test/integration-test/src/Export/IndirectDefault/Variable.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../../util';\n\ndescribe('test/Export/IndirectDefault/Variable:', ()=>{\n  it('is exported', ()=>{\n    const doc = find('longname', 'src/Export/IndirectDefault/Variable.js~testExportIndirectDefaultVariable');\n    assert.equal(doc.export, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Export/IndirectDefault/Variable.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 442,
    "kind": "test",
    "name": "describe92",
    "testId": 92,
    "memberof": "test/integration-test/src/Export/IndirectDefault/Variable.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Export/IndirectDefault/Variable.test.js~describe92",
    "access": null,
    "description": "test/Export/IndirectDefault/Variable:",
    "lineNumber": 4
  },
  {
    "__docId__": 443,
    "kind": "test",
    "name": "it93",
    "testId": 93,
    "memberof": "test/integration-test/src/Export/IndirectDefault/Variable.test.js~describe92",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/IndirectDefault/Variable.test.js~describe92.it93",
    "access": null,
    "description": "is exported",
    "lineNumber": 5
  },
  {
    "__docId__": 444,
    "kind": "testFile",
    "name": "test/integration-test/src/Export/NewExpression/Class.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../../util';\n\ndescribe('test/Export/NewExpression/Class:', ()=>{\n  it('is exported that default export', ()=>{\n    const doc = find('longname', 'src/Export/NewExpression/Class.js~testExportNewExpression1');\n    assert.equal(doc.export, true);\n  });\n\n  it('is exported that named export (1)', ()=>{\n    const doc = find('longname', 'src/Export/NewExpression/Class.js~testExportNewExpression2');\n    assert.equal(doc.export, true);\n  });\n\n  it('is exported that named export (2)', ()=>{\n    const doc = find('longname', 'src/Export/NewExpression/Class.js~testExportNewExpression3');\n    assert.equal(doc.export, true);\n  });\n\n  it('is exported that named export (3)', ()=>{\n    const doc = find('longname', 'src/Export/NewExpression/Class.js~testExportNewExpression4');\n    assert.equal(doc.export, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Export/NewExpression/Class.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 445,
    "kind": "test",
    "name": "describe94",
    "testId": 94,
    "memberof": "test/integration-test/src/Export/NewExpression/Class.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Export/NewExpression/Class.test.js~describe94",
    "access": null,
    "description": "test/Export/NewExpression/Class:",
    "lineNumber": 4
  },
  {
    "__docId__": 446,
    "kind": "test",
    "name": "it95",
    "testId": 95,
    "memberof": "test/integration-test/src/Export/NewExpression/Class.test.js~describe94",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/NewExpression/Class.test.js~describe94.it95",
    "access": null,
    "description": "is exported that default export",
    "lineNumber": 5
  },
  {
    "__docId__": 447,
    "kind": "test",
    "name": "it96",
    "testId": 96,
    "memberof": "test/integration-test/src/Export/NewExpression/Class.test.js~describe94",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/NewExpression/Class.test.js~describe94.it96",
    "access": null,
    "description": "is exported that named export (1)",
    "lineNumber": 10
  },
  {
    "__docId__": 448,
    "kind": "test",
    "name": "it97",
    "testId": 97,
    "memberof": "test/integration-test/src/Export/NewExpression/Class.test.js~describe94",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/NewExpression/Class.test.js~describe94.it97",
    "access": null,
    "description": "is exported that named export (2)",
    "lineNumber": 15
  },
  {
    "__docId__": 449,
    "kind": "test",
    "name": "it98",
    "testId": 98,
    "memberof": "test/integration-test/src/Export/NewExpression/Class.test.js~describe94",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/NewExpression/Class.test.js~describe94.it98",
    "access": null,
    "description": "is exported that named export (3)",
    "lineNumber": 20
  },
  {
    "__docId__": 450,
    "kind": "testFile",
    "name": "test/integration-test/src/Export/NewExpression/WithIndirectExport.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../../util';\n\ndescribe('test/Export/NewExpression/WithIndirectExport', ()=>{\n  it('is exported', ()=>{\n    const doc = find('longname', 'src/Export/NewExpression/WithIndirectExport.js~testExportNewExpressionIndirect');\n    assert.equal(doc.export, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Export/NewExpression/WithIndirectExport.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 451,
    "kind": "test",
    "name": "describe99",
    "testId": 99,
    "memberof": "test/integration-test/src/Export/NewExpression/WithIndirectExport.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Export/NewExpression/WithIndirectExport.test.js~describe99",
    "access": null,
    "description": "test/Export/NewExpression/WithIndirectExport",
    "lineNumber": 4
  },
  {
    "__docId__": 452,
    "kind": "test",
    "name": "it100",
    "testId": 100,
    "memberof": "test/integration-test/src/Export/NewExpression/WithIndirectExport.test.js~describe99",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/NewExpression/WithIndirectExport.test.js~describe99.it100",
    "access": null,
    "description": "is exported",
    "lineNumber": 5
  },
  {
    "__docId__": 453,
    "kind": "testFile",
    "name": "test/integration-test/src/Export/NewExpression/WithObjectProperty.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../../util';\n\ndescribe('test/Export/NewExpression/WithObjectProperty:', ()=>{\n  it('is exported', ()=>{\n    const doc = find('longname', 'src/Export/NewExpression/WithObjectProperty.js~TestExportNewExpressionProperty');\n    assert.equal(doc.export, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Export/NewExpression/WithObjectProperty.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 454,
    "kind": "test",
    "name": "describe101",
    "testId": 101,
    "memberof": "test/integration-test/src/Export/NewExpression/WithObjectProperty.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Export/NewExpression/WithObjectProperty.test.js~describe101",
    "access": null,
    "description": "test/Export/NewExpression/WithObjectProperty:",
    "lineNumber": 4
  },
  {
    "__docId__": 455,
    "kind": "test",
    "name": "it102",
    "testId": 102,
    "memberof": "test/integration-test/src/Export/NewExpression/WithObjectProperty.test.js~describe101",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/NewExpression/WithObjectProperty.test.js~describe101.it102",
    "access": null,
    "description": "is exported",
    "lineNumber": 5
  },
  {
    "__docId__": 456,
    "kind": "testFile",
    "name": "test/integration-test/src/Export/NewExpression/WithOriginalExport.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../../util';\n\ndescribe('test/Export/NewExpression/WithOriginalExport', ()=>{\n  it('is exported', ()=>{\n    const doc = find('longname', 'src/Export/NewExpression/WithOriginalExport.js~TestExportNewExpressionWithOriginalExported');\n    assert.equal(doc.export, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Export/NewExpression/WithOriginalExport.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 457,
    "kind": "test",
    "name": "describe103",
    "testId": 103,
    "memberof": "test/integration-test/src/Export/NewExpression/WithOriginalExport.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Export/NewExpression/WithOriginalExport.test.js~describe103",
    "access": null,
    "description": "test/Export/NewExpression/WithOriginalExport",
    "lineNumber": 4
  },
  {
    "__docId__": 458,
    "kind": "test",
    "name": "it104",
    "testId": 104,
    "memberof": "test/integration-test/src/Export/NewExpression/WithOriginalExport.test.js~describe103",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/NewExpression/WithOriginalExport.test.js~describe103.it104",
    "access": null,
    "description": "is exported",
    "lineNumber": 5
  },
  {
    "__docId__": 459,
    "kind": "testFile",
    "name": "test/integration-test/src/Export/Variable.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Export/Variable:', ()=>{\n  it('is exported that default export', ()=>{\n    const doc = find('longname', 'src/Export/Variable.js~testExportVariable1');\n    assert.equal(doc.export, true);\n  });\n\n  it('is exported that named export', ()=>{\n    const doc = find('longname', 'src/Export/Variable.js~testExportVariable2');\n    assert.equal(doc.export, true);\n  });\n\n  it('is not exported that non export', ()=>{\n    const doc = find('longname', 'src/Export/Variable.js~testExportVariable3');\n    assert.equal(doc.export, false);\n  });\n\n  it('is exported that indirect named export', ()=>{\n    const doc = find('longname', 'src/Export/Variable.js~testExportVariable4');\n    assert.equal(doc.export, true);\n  });\n\n  it('is exported that multiple named export', ()=>{\n    const [doc1, doc2] = find('longname',\n      'src/Export/Variable.js~testExportVariable5',\n      'src/Export/Variable.js~testExportVariable6'\n    );\n\n    assert.equal(doc1.export, true);\n    assert.equal(doc2.export, true);\n  });\n\n  describe('array destructuring name export', ()=>{\n    it('is export that first', ()=>{\n      const doc = find('longname', 'src/Export/Variable.js~testExportVariable7');\n      assert.equal(doc.export, true);\n    });\n\n    xit('is export that second', ()=>{\n      // const doc = find('longname', 'src/Export/Variable.js~testExportVariable8');\n      // assert.equal(doc.export, true);\n    });\n  });\n\n  describe('object destructuring name export', ()=>{\n    it('is export that first', ()=>{\n      const doc = find('longname', 'src/Export/Variable.js~testExportVariable9');\n      assert.equal(doc.export, true);\n    });\n\n    xit('is export that second', ()=>{\n      // const doc = find('longname', 'src/Export/Variable.js~testExportVariable10');\n      // assert.equal(doc.export, true);\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Export/Variable.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 460,
    "kind": "test",
    "name": "describe105",
    "testId": 105,
    "memberof": "test/integration-test/src/Export/Variable.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Export/Variable.test.js~describe105",
    "access": null,
    "description": "test/Export/Variable:",
    "lineNumber": 4
  },
  {
    "__docId__": 461,
    "kind": "test",
    "name": "it106",
    "testId": 106,
    "memberof": "test/integration-test/src/Export/Variable.test.js~describe105",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Variable.test.js~describe105.it106",
    "access": null,
    "description": "is exported that default export",
    "lineNumber": 5
  },
  {
    "__docId__": 462,
    "kind": "test",
    "name": "it107",
    "testId": 107,
    "memberof": "test/integration-test/src/Export/Variable.test.js~describe105",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Variable.test.js~describe105.it107",
    "access": null,
    "description": "is exported that named export",
    "lineNumber": 10
  },
  {
    "__docId__": 463,
    "kind": "test",
    "name": "it108",
    "testId": 108,
    "memberof": "test/integration-test/src/Export/Variable.test.js~describe105",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Variable.test.js~describe105.it108",
    "access": null,
    "description": "is not exported that non export",
    "lineNumber": 15
  },
  {
    "__docId__": 464,
    "kind": "test",
    "name": "it109",
    "testId": 109,
    "memberof": "test/integration-test/src/Export/Variable.test.js~describe105",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Variable.test.js~describe105.it109",
    "access": null,
    "description": "is exported that indirect named export",
    "lineNumber": 20
  },
  {
    "__docId__": 465,
    "kind": "test",
    "name": "it110",
    "testId": 110,
    "memberof": "test/integration-test/src/Export/Variable.test.js~describe105",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Variable.test.js~describe105.it110",
    "access": null,
    "description": "is exported that multiple named export",
    "lineNumber": 25
  },
  {
    "__docId__": 466,
    "kind": "test",
    "name": "describe111",
    "testId": 111,
    "memberof": "test/integration-test/src/Export/Variable.test.js~describe105",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Variable.test.js~describe105.describe111",
    "access": null,
    "description": "array destructuring name export",
    "lineNumber": 35
  },
  {
    "__docId__": 467,
    "kind": "test",
    "name": "it112",
    "testId": 112,
    "memberof": "test/integration-test/src/Export/Variable.test.js~describe105.describe111",
    "testDepth": 2,
    "static": true,
    "longname": "test/integration-test/src/Export/Variable.test.js~describe105.describe111.it112",
    "access": null,
    "description": "is export that first",
    "lineNumber": 36
  },
  {
    "__docId__": 468,
    "kind": "test",
    "name": "describe113",
    "testId": 113,
    "memberof": "test/integration-test/src/Export/Variable.test.js~describe105",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Export/Variable.test.js~describe105.describe113",
    "access": null,
    "description": "object destructuring name export",
    "lineNumber": 47
  },
  {
    "__docId__": 469,
    "kind": "test",
    "name": "it114",
    "testId": 114,
    "memberof": "test/integration-test/src/Export/Variable.test.js~describe105.describe113",
    "testDepth": 2,
    "static": true,
    "longname": "test/integration-test/src/Export/Variable.test.js~describe105.describe113.it114",
    "access": null,
    "description": "is export that first",
    "lineNumber": 48
  },
  {
    "__docId__": 470,
    "kind": "testFile",
    "name": "test/integration-test/src/Extends/Extends.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Extends/Extends:', ()=>{\n  it('extends builtin', ()=>{\n    const doc = find('longname', 'src/Extends/Extends.js~TestExtendsBuiltin');\n    assert.deepEqual(doc.extends, ['Array']);\n  });\n\n  it('extends deep', ()=>{\n    const [doc1, doc2, doc3] = find('longname',\n      'src/Extends/Extends.js~TestExtendsDeepShape',\n      'src/Extends/Extends.js~TestExtendsDeepRectangle',\n      'src/Extends/Extends.js~TestExtendsDeepSquare',\n    );\n\n    assert.deepEqual(doc1.extends, ['Array']);\n    assert.deepEqual(doc2.extends, ['TestExtendsDeepShape']);\n    assert.deepEqual(doc3.extends, ['TestExtendsDeepRectangle']);\n  });\n\n  it('extends expression', ()=>{\n    const doc = find('longname', 'src/Extends/Extends.js~TestExtendsExpression');\n    assert.deepEqual(doc.extends, ['TestExtendsExpressionInner']);\n    assert.equal(doc.expressionExtends, 'TestExtendsExpressionInner(123)');\n  });\n\n  it('extends inner', ()=>{\n    const doc = find('longname', 'src/Extends/Extends.js~TestExtendsInner');\n    assert.deepEqual(doc.extends, ['_TestExtendsInner']);\n  });\n\n  it('extends mixin', ()=>{\n    const doc = find('longname', 'src/Extends/Extends.js~TestExtendsMixin');\n    assert.deepEqual(doc.extends, ['TestExtendsMixinInner1', 'TestExtendsMixinInner2']);\n    assert.equal(doc.expressionExtends, 'mixin(TestExtendsMixinInner1, TestExtendsMixinInner2)');\n  });\n\n  it('extends outer', ()=>{\n    const doc = find('longname', 'src/Extends/Extends.js~TestExtendsOuter');\n    assert.deepEqual(doc.extends, ['src/Extends/Foo/Bar.js~Bar']);\n  });\n\n  it('extends property', ()=>{\n    const doc = find('longname', 'src/Extends/Extends.js~TestExtendsProperty');\n    assert.deepEqual(doc.extends, ['TestExtendsPropertyPackage~obj.TestExtendsPropertyInner']);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Extends/Extends.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 471,
    "kind": "test",
    "name": "describe115",
    "testId": 115,
    "memberof": "test/integration-test/src/Extends/Extends.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Extends/Extends.test.js~describe115",
    "access": null,
    "description": "test/Extends/Extends:",
    "lineNumber": 4
  },
  {
    "__docId__": 472,
    "kind": "test",
    "name": "it116",
    "testId": 116,
    "memberof": "test/integration-test/src/Extends/Extends.test.js~describe115",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Extends/Extends.test.js~describe115.it116",
    "access": null,
    "description": "extends builtin",
    "lineNumber": 5
  },
  {
    "__docId__": 473,
    "kind": "test",
    "name": "it117",
    "testId": 117,
    "memberof": "test/integration-test/src/Extends/Extends.test.js~describe115",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Extends/Extends.test.js~describe115.it117",
    "access": null,
    "description": "extends deep",
    "lineNumber": 10
  },
  {
    "__docId__": 474,
    "kind": "test",
    "name": "it118",
    "testId": 118,
    "memberof": "test/integration-test/src/Extends/Extends.test.js~describe115",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Extends/Extends.test.js~describe115.it118",
    "access": null,
    "description": "extends expression",
    "lineNumber": 22
  },
  {
    "__docId__": 475,
    "kind": "test",
    "name": "it119",
    "testId": 119,
    "memberof": "test/integration-test/src/Extends/Extends.test.js~describe115",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Extends/Extends.test.js~describe115.it119",
    "access": null,
    "description": "extends inner",
    "lineNumber": 28
  },
  {
    "__docId__": 476,
    "kind": "test",
    "name": "it120",
    "testId": 120,
    "memberof": "test/integration-test/src/Extends/Extends.test.js~describe115",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Extends/Extends.test.js~describe115.it120",
    "access": null,
    "description": "extends mixin",
    "lineNumber": 33
  },
  {
    "__docId__": 477,
    "kind": "test",
    "name": "it121",
    "testId": 121,
    "memberof": "test/integration-test/src/Extends/Extends.test.js~describe115",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Extends/Extends.test.js~describe115.it121",
    "access": null,
    "description": "extends outer",
    "lineNumber": 39
  },
  {
    "__docId__": 478,
    "kind": "test",
    "name": "it122",
    "testId": 122,
    "memberof": "test/integration-test/src/Extends/Extends.test.js~describe115",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Extends/Extends.test.js~describe115.it122",
    "access": null,
    "description": "extends property",
    "lineNumber": 44
  },
  {
    "__docId__": 479,
    "kind": "testFile",
    "name": "test/integration-test/src/External/External.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/External/External:', ()=>{\n  it('is external', ()=>{\n    const doc = find('longname', 'src/External/External.js~TestExternal');\n    assert.equal(doc.externalLink, 'http://example.com');\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/External/External.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 480,
    "kind": "test",
    "name": "describe123",
    "testId": 123,
    "memberof": "test/integration-test/src/External/External.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/External/External.test.js~describe123",
    "access": null,
    "description": "test/External/External:",
    "lineNumber": 4
  },
  {
    "__docId__": 481,
    "kind": "test",
    "name": "it124",
    "testId": 124,
    "memberof": "test/integration-test/src/External/External.test.js~describe123",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/External/External.test.js~describe123.it124",
    "access": null,
    "description": "is external",
    "lineNumber": 5
  },
  {
    "__docId__": 482,
    "kind": "testFile",
    "name": "test/integration-test/src/Generator/Generator.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Generator/Generator:', ()=>{\n  it('is generator method', ()=>{\n    const doc = find('longname', 'src/Generator/Generator.js~TestGeneratorClass#methodGenerator');\n    assert.equal(doc.generator, true);\n  });\n\n  it('is generator function', ()=>{\n    const doc = find('longname', 'src/Generator/Generator.js~testGeneratorFunction');\n    assert.equal(doc.generator, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Generator/Generator.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 483,
    "kind": "test",
    "name": "describe125",
    "testId": 125,
    "memberof": "test/integration-test/src/Generator/Generator.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Generator/Generator.test.js~describe125",
    "access": null,
    "description": "test/Generator/Generator:",
    "lineNumber": 4
  },
  {
    "__docId__": 484,
    "kind": "test",
    "name": "it126",
    "testId": 126,
    "memberof": "test/integration-test/src/Generator/Generator.test.js~describe125",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Generator/Generator.test.js~describe125.it126",
    "access": null,
    "description": "is generator method",
    "lineNumber": 5
  },
  {
    "__docId__": 485,
    "kind": "test",
    "name": "it127",
    "testId": 127,
    "memberof": "test/integration-test/src/Generator/Generator.test.js~describe125",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Generator/Generator.test.js~describe125.it127",
    "access": null,
    "description": "is generator function",
    "lineNumber": 10
  },
  {
    "__docId__": 486,
    "kind": "testFile",
    "name": "test/integration-test/src/Ignore/Ignore.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Ignore/Ignore:', ()=>{\n  it('is ignored', ()=>{\n    const doc = find('longname', 'src/Ignore/Ignore.js~TestIgnoreClass');\n    assert.equal(doc.ignore, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Ignore/Ignore.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 487,
    "kind": "test",
    "name": "describe128",
    "testId": 128,
    "memberof": "test/integration-test/src/Ignore/Ignore.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Ignore/Ignore.test.js~describe128",
    "access": null,
    "description": "test/Ignore/Ignore:",
    "lineNumber": 4
  },
  {
    "__docId__": 488,
    "kind": "test",
    "name": "it129",
    "testId": 129,
    "memberof": "test/integration-test/src/Ignore/Ignore.test.js~describe128",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Ignore/Ignore.test.js~describe128.it129",
    "access": null,
    "description": "is ignored",
    "lineNumber": 5
  },
  {
    "__docId__": 489,
    "kind": "testFile",
    "name": "test/integration-test/src/Implements/Implements.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('src/Implements/Implements:', ()=>{\n  it('implements a interface', ()=>{\n    const doc = find('longname', 'src/Implements/Implements.js~TestImplementsClass');\n    assert.deepEqual(doc.implements, [\n      'TestInterfaceInner',\n      'TestInterfaceOuter', // todo: this is bug\n    ]);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Implements/Implements.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 490,
    "kind": "test",
    "name": "describe130",
    "testId": 130,
    "memberof": "test/integration-test/src/Implements/Implements.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Implements/Implements.test.js~describe130",
    "access": null,
    "description": "src/Implements/Implements:",
    "lineNumber": 4
  },
  {
    "__docId__": 491,
    "kind": "test",
    "name": "it131",
    "testId": 131,
    "memberof": "test/integration-test/src/Implements/Implements.test.js~describe130",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Implements/Implements.test.js~describe130.it131",
    "access": null,
    "description": "implements a interface",
    "lineNumber": 5
  },
  {
    "__docId__": 492,
    "kind": "testFile",
    "name": "test/integration-test/src/Interface/Interface.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Interface/Interface:', ()=>{\n  it('is interface', ()=>{\n    const doc = find('longname', 'src/Interface/Interface.js~TestInterfaceClass');\n    assert.equal(doc.interface, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Interface/Interface.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 493,
    "kind": "test",
    "name": "describe132",
    "testId": 132,
    "memberof": "test/integration-test/src/Interface/Interface.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Interface/Interface.test.js~describe132",
    "access": null,
    "description": "test/Interface/Interface:",
    "lineNumber": 4
  },
  {
    "__docId__": 494,
    "kind": "test",
    "name": "it133",
    "testId": 133,
    "memberof": "test/integration-test/src/Interface/Interface.test.js~describe132",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Interface/Interface.test.js~describe132.it133",
    "access": null,
    "description": "is interface",
    "lineNumber": 5
  },
  {
    "__docId__": 495,
    "kind": "testFile",
    "name": "test/integration-test/src/Kind/Kind.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Kind/Kind:', ()=>{\n  it('has kind = class', ()=>{\n    const doc = find('longname', 'src/Kind/Kind.js~TestKindClass');\n    assert.equal(doc.kind, 'class');\n  });\n\n  it('has kind = constructor', ()=>{\n    const doc = find('longname', 'src/Kind/Kind.js~TestKindClass#constructor');\n    assert.equal(doc.kind, 'constructor');\n  });\n\n  it('has kind = member', ()=>{\n    const doc = find('longname', 'src/Kind/Kind.js~TestKindClass#testKindMember');\n    assert.equal(doc.kind, 'member');\n  });\n\n  it('has kind = method', ()=>{\n    const doc = find('longname', 'src/Kind/Kind.js~TestKindClass#testKindMethod');\n    assert.equal(doc.kind, 'method');\n  });\n\n  it('has kind = get', ()=>{\n    const doc = find('longname', 'src/Kind/Kind.js~TestKindClass#testKindGet');\n    assert.equal(doc.kind, 'get');\n  });\n\n  it('has kind = set', ()=>{\n    const doc = find('longname', 'src/Kind/Kind.js~TestKindClass#testKindSet');\n    assert.equal(doc.kind, 'set');\n  });\n\n  it('has kind = function', ()=>{\n    const doc = find('longname', 'src/Kind/Kind.js~testKindFunction');\n    assert.equal(doc.kind, 'function');\n  });\n\n  it('has kind = variable', ()=>{\n    const doc = find('longname', 'src/Kind/Kind.js~testKindVariable');\n    assert.equal(doc.kind, 'variable');\n  });\n\n  it('has kind = typedef', ()=>{\n    const doc = find('longname', 'src/Kind/Kind.js~testKindTypedef');\n    assert.equal(doc.kind, 'typedef');\n  });\n\n  it('has kind = external', ()=>{\n    const doc = find('longname', 'src/Kind/Kind.js~testKindExternal');\n    assert.equal(doc.kind, 'external');\n  });\n\n  xit('has kind = file');\n\n  xit('has kind = packageJOSN');\n  xit('has kind = index');\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Kind/Kind.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 496,
    "kind": "test",
    "name": "describe134",
    "testId": 134,
    "memberof": "test/integration-test/src/Kind/Kind.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Kind/Kind.test.js~describe134",
    "access": null,
    "description": "test/Kind/Kind:",
    "lineNumber": 4
  },
  {
    "__docId__": 497,
    "kind": "test",
    "name": "it135",
    "testId": 135,
    "memberof": "test/integration-test/src/Kind/Kind.test.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Kind/Kind.test.js~describe134.it135",
    "access": null,
    "description": "has kind = class",
    "lineNumber": 5
  },
  {
    "__docId__": 498,
    "kind": "test",
    "name": "it136",
    "testId": 136,
    "memberof": "test/integration-test/src/Kind/Kind.test.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Kind/Kind.test.js~describe134.it136",
    "access": null,
    "description": "has kind = constructor",
    "lineNumber": 10
  },
  {
    "__docId__": 499,
    "kind": "test",
    "name": "it137",
    "testId": 137,
    "memberof": "test/integration-test/src/Kind/Kind.test.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Kind/Kind.test.js~describe134.it137",
    "access": null,
    "description": "has kind = member",
    "lineNumber": 15
  },
  {
    "__docId__": 500,
    "kind": "test",
    "name": "it138",
    "testId": 138,
    "memberof": "test/integration-test/src/Kind/Kind.test.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Kind/Kind.test.js~describe134.it138",
    "access": null,
    "description": "has kind = method",
    "lineNumber": 20
  },
  {
    "__docId__": 501,
    "kind": "test",
    "name": "it139",
    "testId": 139,
    "memberof": "test/integration-test/src/Kind/Kind.test.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Kind/Kind.test.js~describe134.it139",
    "access": null,
    "description": "has kind = get",
    "lineNumber": 25
  },
  {
    "__docId__": 502,
    "kind": "test",
    "name": "it140",
    "testId": 140,
    "memberof": "test/integration-test/src/Kind/Kind.test.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Kind/Kind.test.js~describe134.it140",
    "access": null,
    "description": "has kind = set",
    "lineNumber": 30
  },
  {
    "__docId__": 503,
    "kind": "test",
    "name": "it141",
    "testId": 141,
    "memberof": "test/integration-test/src/Kind/Kind.test.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Kind/Kind.test.js~describe134.it141",
    "access": null,
    "description": "has kind = function",
    "lineNumber": 35
  },
  {
    "__docId__": 504,
    "kind": "test",
    "name": "it142",
    "testId": 142,
    "memberof": "test/integration-test/src/Kind/Kind.test.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Kind/Kind.test.js~describe134.it142",
    "access": null,
    "description": "has kind = variable",
    "lineNumber": 40
  },
  {
    "__docId__": 505,
    "kind": "test",
    "name": "it143",
    "testId": 143,
    "memberof": "test/integration-test/src/Kind/Kind.test.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Kind/Kind.test.js~describe134.it143",
    "access": null,
    "description": "has kind = typedef",
    "lineNumber": 45
  },
  {
    "__docId__": 506,
    "kind": "test",
    "name": "it144",
    "testId": 144,
    "memberof": "test/integration-test/src/Kind/Kind.test.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Kind/Kind.test.js~describe134.it144",
    "access": null,
    "description": "has kind = external",
    "lineNumber": 50
  },
  {
    "__docId__": 507,
    "kind": "testFile",
    "name": "test/integration-test/src/Link/Link.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Link/Link:', ()=>{\n  it('has link', ()=>{\n    const doc = find('longname', 'src/Link/Link.js~TestLinkClass');\n    assert.equal(doc.description, '{@link TestLinkClass}');\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Link/Link.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 508,
    "kind": "test",
    "name": "describe145",
    "testId": 145,
    "memberof": "test/integration-test/src/Link/Link.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Link/Link.test.js~describe145",
    "access": null,
    "description": "test/Link/Link:",
    "lineNumber": 4
  },
  {
    "__docId__": 509,
    "kind": "test",
    "name": "it146",
    "testId": 146,
    "memberof": "test/integration-test/src/Link/Link.test.js~describe145",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Link/Link.test.js~describe145.it146",
    "access": null,
    "description": "has link",
    "lineNumber": 5
  },
  {
    "__docId__": 510,
    "kind": "testFile",
    "name": "test/integration-test/src/Listens/Listens.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Listens/Listens:', ()=>{\n  it('listens events', ()=>{\n    const doc = find('longname', 'src/Listens/Listens.js~TestListensClass#methodListens');\n    assert.deepEqual(doc.listens, [\n      {\n        types: ['TestListensEvent1'],\n        description: ''\n      },\n      {\n        types: ['TestListensEvent2'],\n        description: 'listens TestListensEvent2'\n      }\n    ]);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Listens/Listens.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 511,
    "kind": "test",
    "name": "describe147",
    "testId": 147,
    "memberof": "test/integration-test/src/Listens/Listens.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Listens/Listens.test.js~describe147",
    "access": null,
    "description": "test/Listens/Listens:",
    "lineNumber": 4
  },
  {
    "__docId__": 512,
    "kind": "test",
    "name": "it148",
    "testId": 148,
    "memberof": "test/integration-test/src/Listens/Listens.test.js~describe147",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Listens/Listens.test.js~describe147.it148",
    "access": null,
    "description": "listens events",
    "lineNumber": 5
  },
  {
    "__docId__": 513,
    "kind": "testFile",
    "name": "test/integration-test/src/Name/Computed.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Name/Computed:', ()=>{\n  it('has member computed name', ()=>{\n    const doc = find('longname', 'src/Name/Computed.js~TestNameComputed#[foo.bar]');\n    assert(doc);\n  });\n\n  it('has method computed name', ()=>{\n    const doc = find('longname', \"src/Name/Computed.js~TestNameComputed#[foo.baz]\");\n    assert(doc);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Name/Computed.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 514,
    "kind": "test",
    "name": "describe149",
    "testId": 149,
    "memberof": "test/integration-test/src/Name/Computed.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Name/Computed.test.js~describe149",
    "access": null,
    "description": "test/Name/Computed:",
    "lineNumber": 4
  },
  {
    "__docId__": 515,
    "kind": "test",
    "name": "it150",
    "testId": 150,
    "memberof": "test/integration-test/src/Name/Computed.test.js~describe149",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Name/Computed.test.js~describe149.it150",
    "access": null,
    "description": "has member computed name",
    "lineNumber": 5
  },
  {
    "__docId__": 516,
    "kind": "test",
    "name": "it151",
    "testId": 151,
    "memberof": "test/integration-test/src/Name/Computed.test.js~describe149",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Name/Computed.test.js~describe149.it151",
    "access": null,
    "description": "has method computed name",
    "lineNumber": 10
  },
  {
    "__docId__": 517,
    "kind": "testFile",
    "name": "test/integration-test/src/Param/Attribute.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Param/Attribute', ()=>{\n  it('has default value', ()=>{\n    const doc = find('longname', 'src/Param/Attribute.js~TestParamAttribute#methodDefault');\n\n    assert.equal(doc.params.length, 3);\n\n    assert.equal(doc.params[0].defaultValue, '123');\n    assert.equal(doc.params[0].defaultRaw, 123);\n\n    assert.equal(doc.params[1].defaultValue, '[]');\n    assert.notStrictEqual(doc.params[1].defaultRaw, []);\n\n    assert.equal(doc.params[2].defaultValue, ' new Foo()');\n    assert.equal(doc.params[2].defaultRaw, ' new Foo()');\n  });\n\n  it('is nullable/not-nullable', ()=>{\n    const doc = find('longname', 'src/Param/Attribute.js~TestParamAttribute#methodNullable');\n\n    assert.equal(doc.params.length, 2);\n    assert.equal(doc.params[0].nullable, true);\n    assert.equal(doc.params[1].nullable, false);\n  });\n\n  it('is optional', ()=>{\n    const doc = find('longname', 'src/Param/Attribute.js~TestParamAttribute#methodOptional');\n\n    assert.equal(doc.params.length, 1);\n    assert.equal(doc.params[0].optional, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Param/Attribute.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 518,
    "kind": "test",
    "name": "describe152",
    "testId": 152,
    "memberof": "test/integration-test/src/Param/Attribute.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Param/Attribute.test.js~describe152",
    "access": null,
    "description": "test/Param/Attribute",
    "lineNumber": 4
  },
  {
    "__docId__": 519,
    "kind": "test",
    "name": "it153",
    "testId": 153,
    "memberof": "test/integration-test/src/Param/Attribute.test.js~describe152",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Attribute.test.js~describe152.it153",
    "access": null,
    "description": "has default value",
    "lineNumber": 5
  },
  {
    "__docId__": 520,
    "kind": "test",
    "name": "it154",
    "testId": 154,
    "memberof": "test/integration-test/src/Param/Attribute.test.js~describe152",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Attribute.test.js~describe152.it154",
    "access": null,
    "description": "is nullable/not-nullable",
    "lineNumber": 20
  },
  {
    "__docId__": 521,
    "kind": "test",
    "name": "it155",
    "testId": 155,
    "memberof": "test/integration-test/src/Param/Attribute.test.js~describe152",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Attribute.test.js~describe152.it155",
    "access": null,
    "description": "is optional",
    "lineNumber": 28
  },
  {
    "__docId__": 522,
    "kind": "testFile",
    "name": "test/integration-test/src/Param/Complex.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Param/Complex:', ()=>{\n  it('has function param', ()=>{\n    const doc = find('longname', 'src/Param/Complex.js~TestParamComplex#methodFunction');\n    assert.equal(doc.params.length, 1);\n    assert.equal(doc.params[0].types.length, 1);\n    assert.equal(doc.params[0].types[0], 'function(x1: number[], x2: Map<string, boolean>): Object');\n  });\n\n  it('has generics param', ()=>{\n    const doc = find('longname', 'src/Param/Complex.js~TestParamComplex#methodGenerics');\n    assert.equal(doc.params.length, 1);\n    assert.equal(doc.params[0].types.length, 1);\n    assert.equal(doc.params[0].types[0], 'Map<number, string[]>');\n  });\n\n  it('has record param', ()=>{\n    const doc = find('longname', 'src/Param/Complex.js~TestParamComplex#methodRecord');\n    assert.equal(doc.params.length, 1);\n    assert.equal(doc.params[0].types.length, 1);\n    assert.equal(doc.params[0].types[0], '{x1: number[], x2: Map<string, boolean>, x3: {y1: number, y2: string}}');\n  });\n\n  it('has union param', ()=>{\n    const doc = find('longname', 'src/Param/Complex.js~TestParamComplex#methodUnion');\n    assert.equal(doc.params.length, 2);\n\n    assert.equal(doc.params[0].types.length, 2);\n    assert.deepEqual(doc.params[0].types, ['number', 'string']);\n    assert.equal(doc.params[0].nullable, true);\n\n    assert.equal(doc.params[1].types.length, 2);\n    assert.deepEqual(doc.params[1].types, ['number', 'string']);\n    assert.equal(doc.params[1].nullable, false);\n  });\n\n  it('has union and generics param', ()=>{\n    const doc = find('longname', 'src/Param/Complex.js~TestParamComplex#methodUnionAndGenerics');\n    assert.equal(doc.params.length, 1);\n\n    assert.equal(doc.params[0].types.length, 1);\n    assert.equal(doc.params[0].types[0], 'Promise<string|number, Error>');\n  });\n\n  it('has union and spread param', ()=>{\n    const doc = find('longname', 'src/Param/Complex.js~TestParamComplex#methodUnionAndSpread');\n    assert.equal(doc.params.length, 1);\n\n    assert.equal(doc.params[0].types.length, 1);\n    assert.equal(doc.params[0].types[0], '...(number|string)');\n    assert.equal(doc.params[0].spread, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Param/Complex.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 523,
    "kind": "test",
    "name": "describe156",
    "testId": 156,
    "memberof": "test/integration-test/src/Param/Complex.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Param/Complex.test.js~describe156",
    "access": null,
    "description": "test/Param/Complex:",
    "lineNumber": 4
  },
  {
    "__docId__": 524,
    "kind": "test",
    "name": "it157",
    "testId": 157,
    "memberof": "test/integration-test/src/Param/Complex.test.js~describe156",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Complex.test.js~describe156.it157",
    "access": null,
    "description": "has function param",
    "lineNumber": 5
  },
  {
    "__docId__": 525,
    "kind": "test",
    "name": "it158",
    "testId": 158,
    "memberof": "test/integration-test/src/Param/Complex.test.js~describe156",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Complex.test.js~describe156.it158",
    "access": null,
    "description": "has generics param",
    "lineNumber": 12
  },
  {
    "__docId__": 526,
    "kind": "test",
    "name": "it159",
    "testId": 159,
    "memberof": "test/integration-test/src/Param/Complex.test.js~describe156",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Complex.test.js~describe156.it159",
    "access": null,
    "description": "has record param",
    "lineNumber": 19
  },
  {
    "__docId__": 527,
    "kind": "test",
    "name": "it160",
    "testId": 160,
    "memberof": "test/integration-test/src/Param/Complex.test.js~describe156",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Complex.test.js~describe156.it160",
    "access": null,
    "description": "has union param",
    "lineNumber": 26
  },
  {
    "__docId__": 528,
    "kind": "test",
    "name": "it161",
    "testId": 161,
    "memberof": "test/integration-test/src/Param/Complex.test.js~describe156",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Complex.test.js~describe156.it161",
    "access": null,
    "description": "has union and generics param",
    "lineNumber": 39
  },
  {
    "__docId__": 529,
    "kind": "test",
    "name": "it162",
    "testId": 162,
    "memberof": "test/integration-test/src/Param/Complex.test.js~describe156",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Complex.test.js~describe156.it162",
    "access": null,
    "description": "has union and spread param",
    "lineNumber": 47
  },
  {
    "__docId__": 530,
    "kind": "testFile",
    "name": "test/integration-test/src/Param/Destructuring.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Param/Destructuring:', ()=>{\n  it('has array destructuring param', ()=>{\n    const doc = find('longname', 'src/Param/Destructuring.js~TestParamDestructuring#methodArray');\n    assert.deepEqual(doc.params, [\n      {nullable: null, types: ['number[]'], spread: false, optional: false, name: 'p', description: ''},\n      {nullable: null, types: ['number'], spread: false, optional: false, name: 'p[0]', description: ''},\n      {nullable: null, types: ['number'], spread: false, optional: false, name: 'p[1]', description: ''}\n    ]);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Param/Destructuring.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 531,
    "kind": "test",
    "name": "describe163",
    "testId": 163,
    "memberof": "test/integration-test/src/Param/Destructuring.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Param/Destructuring.test.js~describe163",
    "access": null,
    "description": "test/Param/Destructuring:",
    "lineNumber": 4
  },
  {
    "__docId__": 532,
    "kind": "test",
    "name": "it164",
    "testId": 164,
    "memberof": "test/integration-test/src/Param/Destructuring.test.js~describe163",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Destructuring.test.js~describe163.it164",
    "access": null,
    "description": "has array destructuring param",
    "lineNumber": 5
  },
  {
    "__docId__": 533,
    "kind": "testFile",
    "name": "test/integration-test/src/Param/Param.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Param/Param:', ()=>{\n  it('has param', ()=>{\n    const doc = find('longname', 'src/Param/Param.js~TestParam#method');\n    assert.equal(doc.params.length, 1);\n    assert.deepEqual(doc.params[0].types, ['number']);\n    assert.equal(doc.params[0].name, 'p1');\n    assert.equal(doc.params[0].description, 'this is p1');\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Param/Param.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 534,
    "kind": "test",
    "name": "describe165",
    "testId": 165,
    "memberof": "test/integration-test/src/Param/Param.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Param/Param.test.js~describe165",
    "access": null,
    "description": "test/Param/Param:",
    "lineNumber": 4
  },
  {
    "__docId__": 535,
    "kind": "test",
    "name": "it166",
    "testId": 166,
    "memberof": "test/integration-test/src/Param/Param.test.js~describe165",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Param.test.js~describe165.it166",
    "access": null,
    "description": "has param",
    "lineNumber": 5
  },
  {
    "__docId__": 536,
    "kind": "testFile",
    "name": "test/integration-test/src/Param/Type.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Param/Type', ()=>{\n  it('has array param', ()=>{\n    const doc = find('longname', 'src/Param/Type.js~TestParam#methodArray');\n    assert.equal(doc.params.length, 1);\n    assert.equal(doc.params[0].types.length, 1);\n    assert.equal(doc.params[0].types[0], 'number[]');\n  });\n\n  it('has class param', ()=>{\n    const doc = find('longname', 'src/Param/Type.js~TestParam#methodClass');\n    assert.equal(doc.params.length, 1);\n    assert.equal(doc.params[0].types.length, 1);\n    assert.equal(doc.params[0].types[0], 'TestParamClassInner');\n  });\n\n  it('has external param', ()=>{\n    const doc = find('longname', 'src/Param/Type.js~TestParam#methodExternal');\n    assert.equal(doc.params.length, 1);\n    assert.equal(doc.params[0].types.length, 1);\n    assert.equal(doc.params[0].types[0], 'ArrayBuffer');\n  });\n\n  it('has function param', ()=>{\n    const doc = find('longname', 'src/Param/Type.js~TestParam#methodFunction');\n    assert.equal(doc.params.length, 1);\n    assert.equal(doc.params[0].types.length, 1);\n    assert.equal(doc.params[0].types[0], 'function(x1: number, x2: string): boolean');\n  });\n\n  it('has generics param', ()=>{\n    const doc = find('longname', 'src/Param/Type.js~TestParam#methodGenerics');\n    assert.equal(doc.params.length, 3);\n\n    assert.equal(doc.params[0].types.length, 1);\n    assert.equal(doc.params[0].types[0], 'Array<number>');\n\n    assert.equal(doc.params[1].types.length, 1);\n    assert.equal(doc.params[1].types[0], 'Map<number, string>');\n\n    assert.equal(doc.params[2].types.length, 1);\n    assert.equal(doc.params[2].types[0], 'Promise<number[], Error>');\n  });\n\n  it('has literal param', ()=>{\n    const doc = find('longname', 'src/Param/Type.js~TestParam#methodLiteral');\n    assert.equal(doc.params.length, 1);\n    assert.equal(doc.params[0].types.length, 1);\n    assert.equal(doc.params[0].types[0], 'number');\n  });\n\n  it('has object param', ()=>{\n    const doc = find('longname', 'src/Param/Type.js~TestParam#methodObject');\n    assert.equal(doc.params.length, 2);\n\n    assert.equal(doc.params[0].types.length, 1);\n    assert.equal(doc.params[0].types[0], 'Object');\n\n    assert.equal(doc.params[1].types.length, 1);\n    assert.equal(doc.params[1].types[0], 'number');\n  });\n\n  it('has record param', ()=>{\n    const doc = find('longname', 'src/Param/Type.js~TestParam#methodRecord');\n    assert.equal(doc.params.length, 1);\n    assert.equal(doc.params[0].types.length, 1);\n    assert.equal(doc.params[0].types[0], '{x1: number, x2: string}');\n  });\n\n  it('has spread param', ()=>{\n    const doc = find('longname', 'src/Param/Type.js~TestParam#methodSpread');\n    assert.equal(doc.params.length, 1);\n    assert.equal(doc.params[0].types.length, 1);\n    assert.equal(doc.params[0].types[0], '...number');\n    assert.equal(doc.params[0].spread, true);\n  });\n\n  it('has typedef param', ()=>{\n    const doc = find('longname', 'src/Param/Type.js~TestParam#methodTypedef');\n    assert.equal(doc.params.length, 1);\n    assert.equal(doc.params[0].types.length, 1);\n    assert.equal(doc.params[0].types[0], 'TestTypeTypedefInner');\n  });\n\n  it('has union param', ()=>{\n    const doc = find('longname', 'src/Param/Type.js~TestParam#methodUnion');\n    assert.equal(doc.params.length, 1);\n    assert.equal(doc.params[0].types.length, 2);\n    assert.deepEqual(doc.params[0].types, ['number', 'string']);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Param/Type.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 537,
    "kind": "test",
    "name": "describe167",
    "testId": 167,
    "memberof": "test/integration-test/src/Param/Type.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Param/Type.test.js~describe167",
    "access": null,
    "description": "test/Param/Type",
    "lineNumber": 4
  },
  {
    "__docId__": 538,
    "kind": "test",
    "name": "it168",
    "testId": 168,
    "memberof": "test/integration-test/src/Param/Type.test.js~describe167",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Type.test.js~describe167.it168",
    "access": null,
    "description": "has array param",
    "lineNumber": 5
  },
  {
    "__docId__": 539,
    "kind": "test",
    "name": "it169",
    "testId": 169,
    "memberof": "test/integration-test/src/Param/Type.test.js~describe167",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Type.test.js~describe167.it169",
    "access": null,
    "description": "has class param",
    "lineNumber": 12
  },
  {
    "__docId__": 540,
    "kind": "test",
    "name": "it170",
    "testId": 170,
    "memberof": "test/integration-test/src/Param/Type.test.js~describe167",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Type.test.js~describe167.it170",
    "access": null,
    "description": "has external param",
    "lineNumber": 19
  },
  {
    "__docId__": 541,
    "kind": "test",
    "name": "it171",
    "testId": 171,
    "memberof": "test/integration-test/src/Param/Type.test.js~describe167",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Type.test.js~describe167.it171",
    "access": null,
    "description": "has function param",
    "lineNumber": 26
  },
  {
    "__docId__": 542,
    "kind": "test",
    "name": "it172",
    "testId": 172,
    "memberof": "test/integration-test/src/Param/Type.test.js~describe167",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Type.test.js~describe167.it172",
    "access": null,
    "description": "has generics param",
    "lineNumber": 33
  },
  {
    "__docId__": 543,
    "kind": "test",
    "name": "it173",
    "testId": 173,
    "memberof": "test/integration-test/src/Param/Type.test.js~describe167",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Type.test.js~describe167.it173",
    "access": null,
    "description": "has literal param",
    "lineNumber": 47
  },
  {
    "__docId__": 544,
    "kind": "test",
    "name": "it174",
    "testId": 174,
    "memberof": "test/integration-test/src/Param/Type.test.js~describe167",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Type.test.js~describe167.it174",
    "access": null,
    "description": "has object param",
    "lineNumber": 54
  },
  {
    "__docId__": 545,
    "kind": "test",
    "name": "it175",
    "testId": 175,
    "memberof": "test/integration-test/src/Param/Type.test.js~describe167",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Type.test.js~describe167.it175",
    "access": null,
    "description": "has record param",
    "lineNumber": 65
  },
  {
    "__docId__": 546,
    "kind": "test",
    "name": "it176",
    "testId": 176,
    "memberof": "test/integration-test/src/Param/Type.test.js~describe167",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Type.test.js~describe167.it176",
    "access": null,
    "description": "has spread param",
    "lineNumber": 72
  },
  {
    "__docId__": 547,
    "kind": "test",
    "name": "it177",
    "testId": 177,
    "memberof": "test/integration-test/src/Param/Type.test.js~describe167",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Type.test.js~describe167.it177",
    "access": null,
    "description": "has typedef param",
    "lineNumber": 80
  },
  {
    "__docId__": 548,
    "kind": "test",
    "name": "it178",
    "testId": 178,
    "memberof": "test/integration-test/src/Param/Type.test.js~describe167",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Param/Type.test.js~describe167.it178",
    "access": null,
    "description": "has union param",
    "lineNumber": 87
  },
  {
    "__docId__": 549,
    "kind": "testFile",
    "name": "test/integration-test/src/Property/Property.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Property/Property:', ()=>{\n  it('has property', ()=>{\n    const doc = find('longname', 'src/Property/Property.js~TestProperty#methodProperty');\n    assert.deepEqual(doc.properties, [\n      {\n        nullable: null,\n        types: ['number'],\n        spread: false,\n        optional: false,\n        name: 'x1',\n        description: ''\n      },\n      {\n        nullable: null,\n        types: ['TestPropertyInner'],\n        spread: false,\n        optional: false,\n        name: 'x2',\n        description: ''\n      }\n    ]);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Property/Property.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 550,
    "kind": "test",
    "name": "describe179",
    "testId": 179,
    "memberof": "test/integration-test/src/Property/Property.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Property/Property.test.js~describe179",
    "access": null,
    "description": "test/Property/Property:",
    "lineNumber": 4
  },
  {
    "__docId__": 551,
    "kind": "test",
    "name": "it180",
    "testId": 180,
    "memberof": "test/integration-test/src/Property/Property.test.js~describe179",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Property/Property.test.js~describe179.it180",
    "access": null,
    "description": "has property",
    "lineNumber": 5
  },
  {
    "__docId__": 552,
    "kind": "testFile",
    "name": "test/integration-test/src/Return/Return.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Return/Return:', ()=>{\n  it('has return value', ()=>{\n    const doc = find('longname', 'src/Return/Return.js~TestReturn#methodReturn');\n    assert.deepEqual(doc.return, {\n      nullable: null,\n      types: ['number'],\n      spread: false,\n      description: 'this is return value.'\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Return/Return.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 553,
    "kind": "test",
    "name": "describe181",
    "testId": 181,
    "memberof": "test/integration-test/src/Return/Return.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Return/Return.test.js~describe181",
    "access": null,
    "description": "test/Return/Return:",
    "lineNumber": 4
  },
  {
    "__docId__": 554,
    "kind": "test",
    "name": "it182",
    "testId": 182,
    "memberof": "test/integration-test/src/Return/Return.test.js~describe181",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Return/Return.test.js~describe181.it182",
    "access": null,
    "description": "has return value",
    "lineNumber": 5
  },
  {
    "__docId__": 555,
    "kind": "testFile",
    "name": "test/integration-test/src/See/See.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/See/See:', ()=>{\n  it('has to see link', ()=>{\n    const doc = find('longname', 'src/See/See.js~TestSeeClass');\n    assert.deepEqual(doc.see, ['http://foo.example.com', 'http://bar.example.com']);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/See/See.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 556,
    "kind": "test",
    "name": "describe183",
    "testId": 183,
    "memberof": "test/integration-test/src/See/See.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/See/See.test.js~describe183",
    "access": null,
    "description": "test/See/See:",
    "lineNumber": 4
  },
  {
    "__docId__": 557,
    "kind": "test",
    "name": "it184",
    "testId": 184,
    "memberof": "test/integration-test/src/See/See.test.js~describe183",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/See/See.test.js~describe183.it184",
    "access": null,
    "description": "has to see link",
    "lineNumber": 5
  },
  {
    "__docId__": 558,
    "kind": "testFile",
    "name": "test/integration-test/src/Since/Since.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Since/Since:', ()=>{\n  it('has a since version', ()=>{\n    const doc = find('longname', 'src/Since/Since.js~TestSince');\n    assert.deepEqual(doc.since, '1.2.3');\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Since/Since.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 559,
    "kind": "test",
    "name": "describe185",
    "testId": 185,
    "memberof": "test/integration-test/src/Since/Since.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Since/Since.test.js~describe185",
    "access": null,
    "description": "test/Since/Since:",
    "lineNumber": 4
  },
  {
    "__docId__": 560,
    "kind": "test",
    "name": "it186",
    "testId": 186,
    "memberof": "test/integration-test/src/Since/Since.test.js~describe185",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Since/Since.test.js~describe185.it186",
    "access": null,
    "description": "has a since version",
    "lineNumber": 5
  },
  {
    "__docId__": 561,
    "kind": "testFile",
    "name": "test/integration-test/src/Throws/Throws.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Throws/Throws:', ()=>{\n  it('throws errors', ()=>{\n    const doc = find('longname', 'src/Throws/Throws.js~TestThrows#methodThrows');\n    assert.deepEqual(doc.throws, [\n      {types: ['TestThrowsError1'], description: ''},\n      {types: ['TestThrowsError2'], description: 'throws error'}\n    ]);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Throws/Throws.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 562,
    "kind": "test",
    "name": "describe187",
    "testId": 187,
    "memberof": "test/integration-test/src/Throws/Throws.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Throws/Throws.test.js~describe187",
    "access": null,
    "description": "test/Throws/Throws:",
    "lineNumber": 4
  },
  {
    "__docId__": 563,
    "kind": "test",
    "name": "it188",
    "testId": 188,
    "memberof": "test/integration-test/src/Throws/Throws.test.js~describe187",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Throws/Throws.test.js~describe187.it188",
    "access": null,
    "description": "throws errors",
    "lineNumber": 5
  },
  {
    "__docId__": 564,
    "kind": "testFile",
    "name": "test/integration-test/src/Todo/Todo.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Todo/Todo:', ()=>{\n  it('hash todo', ()=>{\n    const doc = find('longname', 'src/Todo/Todo.js~TestTodo');\n    assert.deepEqual(doc.todo, ['this is first todo.', 'this is second todo.']);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Todo/Todo.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 565,
    "kind": "test",
    "name": "describe189",
    "testId": 189,
    "memberof": "test/integration-test/src/Todo/Todo.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Todo/Todo.test.js~describe189",
    "access": null,
    "description": "test/Todo/Todo:",
    "lineNumber": 4
  },
  {
    "__docId__": 566,
    "kind": "test",
    "name": "it190",
    "testId": 190,
    "memberof": "test/integration-test/src/Todo/Todo.test.js~describe189",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Todo/Todo.test.js~describe189.it190",
    "access": null,
    "description": "hash todo",
    "lineNumber": 5
  },
  {
    "__docId__": 567,
    "kind": "testFile",
    "name": "test/integration-test/src/Type/Type.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Type/Type:', ()=>{\n  it('has member type', ()=>{\n    const doc = find('longname', 'src/Type/Type.js~TestType#member');\n    assert.deepEqual(doc.type, {\n      nullable: null,\n      types: ['number'],\n      spread: false,\n      description: null\n    });\n  });\n\n  it('has variable type', ()=>{\n    const doc = find('longname', 'src/Type/Type.js~testTypeVariable');\n    assert.deepEqual(doc.type, {\n      nullable: null,\n      types: ['number'],\n      spread: false,\n      description: null\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Type/Type.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 568,
    "kind": "test",
    "name": "describe191",
    "testId": 191,
    "memberof": "test/integration-test/src/Type/Type.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Type/Type.test.js~describe191",
    "access": null,
    "description": "test/Type/Type:",
    "lineNumber": 4
  },
  {
    "__docId__": 569,
    "kind": "test",
    "name": "it192",
    "testId": 192,
    "memberof": "test/integration-test/src/Type/Type.test.js~describe191",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Type/Type.test.js~describe191.it192",
    "access": null,
    "description": "has member type",
    "lineNumber": 5
  },
  {
    "__docId__": 570,
    "kind": "test",
    "name": "it193",
    "testId": 193,
    "memberof": "test/integration-test/src/Type/Type.test.js~describe191",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Type/Type.test.js~describe191.it193",
    "access": null,
    "description": "has variable type",
    "lineNumber": 15
  },
  {
    "__docId__": 571,
    "kind": "testFile",
    "name": "test/integration-test/src/Undocument/Undocument.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Undocument/Undocument:', ()=>{\n  it('has undocument', ()=>{\n    const doc = find('longname', 'src/Undocument/Undocument.js~TestUndocument');\n    assert.deepEqual(doc.undocument, true);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Undocument/Undocument.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 572,
    "kind": "test",
    "name": "describe194",
    "testId": 194,
    "memberof": "test/integration-test/src/Undocument/Undocument.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Undocument/Undocument.test.js~describe194",
    "access": null,
    "description": "test/Undocument/Undocument:",
    "lineNumber": 4
  },
  {
    "__docId__": 573,
    "kind": "test",
    "name": "it195",
    "testId": 195,
    "memberof": "test/integration-test/src/Undocument/Undocument.test.js~describe194",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Undocument/Undocument.test.js~describe194.it195",
    "access": null,
    "description": "has undocument",
    "lineNumber": 5
  },
  {
    "__docId__": 574,
    "kind": "testFile",
    "name": "test/integration-test/src/Unknown/Unknown.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Unknown/Unknown:', ()=>{\n  it('has unknown', ()=>{\n    const doc = find('longname', 'src/Unknown/Unknown.js~TestUnknown');\n    assert.deepEqual(doc.unknown, [{tagName: '@foobar', tagValue: 'this is unknown tag.'}]);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Unknown/Unknown.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 575,
    "kind": "test",
    "name": "describe196",
    "testId": 196,
    "memberof": "test/integration-test/src/Unknown/Unknown.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Unknown/Unknown.test.js~describe196",
    "access": null,
    "description": "test/Unknown/Unknown:",
    "lineNumber": 4
  },
  {
    "__docId__": 576,
    "kind": "test",
    "name": "it197",
    "testId": 197,
    "memberof": "test/integration-test/src/Unknown/Unknown.test.js~describe196",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Unknown/Unknown.test.js~describe196.it197",
    "access": null,
    "description": "has unknown",
    "lineNumber": 5
  },
  {
    "__docId__": 577,
    "kind": "testFile",
    "name": "test/integration-test/src/Version/Version.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/Version/Version:', ()=>{\n  it('has a version', ()=>{\n    const doc = find('longname', 'src/Version/Version.js~TestVersion');\n    assert.deepEqual(doc.version, '1.2.3');\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/Version/Version.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 578,
    "kind": "test",
    "name": "describe198",
    "testId": 198,
    "memberof": "test/integration-test/src/Version/Version.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/Version/Version.test.js~describe198",
    "access": null,
    "description": "test/Version/Version:",
    "lineNumber": 4
  },
  {
    "__docId__": 579,
    "kind": "test",
    "name": "it199",
    "testId": 199,
    "memberof": "test/integration-test/src/Version/Version.test.js~describe198",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/Version/Version.test.js~describe198.it199",
    "access": null,
    "description": "has a version",
    "lineNumber": 5
  },
  {
    "__docId__": 580,
    "kind": "testFile",
    "name": "test/integration-test/src/_Misc/Duplication.test.js",
    "content": "import assert from 'assert';\n\ndescribe('test/_Misc/Duplication:', ()=>{\n  it('does not duplication', ()=>{\n    const docs = global.docs.filter((doc) => doc.longname === 'src/_Misc/Duplication.js~TestDuplication#member');\n    assert.equal(docs.length, 1);\n\n    const doc = docs[0];\n    assert.deepEqual(doc.type, {\n      \"nullable\": null,\n      \"types\": [\n        \"number\"\n      ],\n      \"spread\": false,\n      \"description\": null\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/_Misc/Duplication.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 581,
    "kind": "test",
    "name": "describe200",
    "testId": 200,
    "memberof": "test/integration-test/src/_Misc/Duplication.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/_Misc/Duplication.test.js~describe200",
    "access": null,
    "description": "test/_Misc/Duplication:",
    "lineNumber": 3
  },
  {
    "__docId__": 582,
    "kind": "test",
    "name": "it201",
    "testId": 201,
    "memberof": "test/integration-test/src/_Misc/Duplication.test.js~describe200",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/_Misc/Duplication.test.js~describe200.it201",
    "access": null,
    "description": "does not duplication",
    "lineNumber": 4
  },
  {
    "__docId__": 583,
    "kind": "testFile",
    "name": "test/integration-test/src/_Misc/Exclude.test.js",
    "content": "import assert from 'assert';\nimport {find} from '../../util';\n\ndescribe('test/_Misc/Exclude:', ()=>{\n  it('not exist', ()=>{\n    const doc = find('longname', 'src/_Misc/Exclude.js~TestExclude');\n    assert.equal(doc, null);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/_Misc/Exclude.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 584,
    "kind": "test",
    "name": "describe202",
    "testId": 202,
    "memberof": "test/integration-test/src/_Misc/Exclude.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/_Misc/Exclude.test.js~describe202",
    "access": null,
    "description": "test/_Misc/Exclude:",
    "lineNumber": 4
  },
  {
    "__docId__": 585,
    "kind": "test",
    "name": "it203",
    "testId": 203,
    "memberof": "test/integration-test/src/_Misc/Exclude.test.js~describe202",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/_Misc/Exclude.test.js~describe202.it203",
    "access": null,
    "description": "not exist",
    "lineNumber": 5
  },
  {
    "__docId__": 586,
    "kind": "testFile",
    "name": "test/integration-test/src/_Misc/Generator.test.js",
    "content": "import assert from 'assert'\nimport fs from 'fs'\nimport path from 'path'\n\ndescribe('Generator', () => {\n  it('creates the required AST files', () => {\n    const dirs = fs.readdirSync(path.resolve(__dirname, '../../out/ast/source'))\n    const expected = [ 'Abstract',\n    'Access',\n    'Async',\n    'Deprecated',\n    'Desc',\n    'Emits',\n    'Example',\n    'Experimental',\n    'Export',\n    'Extends',\n    'External',\n    'Generator',\n    'Ignore',\n    'Implements',\n    'Interface',\n    'Kind',\n    'Link',\n    'Listens',\n    'Name',\n    'Param',\n    'Property',\n    'Return',\n    'See',\n    'Since',\n    'Throws',\n    'Todo',\n    'Type',\n    'Undocument',\n    'Unknown',\n    'Version',\n    '_Misc' ]\n    assert.deepEqual(dirs, expected)\n  })\n})",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/_Misc/Generator.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 587,
    "kind": "test",
    "name": "describe204",
    "testId": 204,
    "memberof": "test/integration-test/src/_Misc/Generator.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/_Misc/Generator.test.js~describe204",
    "access": null,
    "description": "Generator",
    "lineNumber": 5
  },
  {
    "__docId__": 588,
    "kind": "test",
    "name": "it205",
    "testId": 205,
    "memberof": "test/integration-test/src/_Misc/Generator.test.js~describe204",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/_Misc/Generator.test.js~describe204.it205",
    "access": null,
    "description": "creates the required AST files",
    "lineNumber": 6
  },
  {
    "__docId__": 589,
    "kind": "testFile",
    "name": "test/integration-test/src/_Misc/InvalidSyntax.test.js",
    "content": "import assert from 'assert';\nimport InvalidCodeLogger from '../../../../src/Util/InvalidCodeLogger';\n\ndescribe('test/_Misc/InvalidSyntax:', ()=>{\n  it('is invalid', ()=>{\n    assert.equal(InvalidCodeLogger._logs.length, 2);\n\n    assert(InvalidCodeLogger._logs[0].filePath.includes('test/integration-test/src/_Misc/InvalidSyntaxCode.js'));\n    assert.deepEqual(InvalidCodeLogger._logs[0].log, [1, 2]);\n\n    assert(InvalidCodeLogger._logs[1].filePath.includes('test/integration-test/src/_Misc/InvalidSyntaxDoc.js'));\n    assert.deepEqual(InvalidCodeLogger._logs[1].log, [1, 4]);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/integration-test/src/_Misc/InvalidSyntax.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 590,
    "kind": "test",
    "name": "describe206",
    "testId": 206,
    "memberof": "test/integration-test/src/_Misc/InvalidSyntax.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration-test/src/_Misc/InvalidSyntax.test.js~describe206",
    "access": null,
    "description": "test/_Misc/InvalidSyntax:",
    "lineNumber": 4
  },
  {
    "__docId__": 591,
    "kind": "test",
    "name": "it207",
    "testId": 207,
    "memberof": "test/integration-test/src/_Misc/InvalidSyntax.test.js~describe206",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration-test/src/_Misc/InvalidSyntax.test.js~describe206.it207",
    "access": null,
    "description": "is invalid",
    "lineNumber": 5
  },
  {
    "__docId__": 592,
    "kind": "testFile",
    "name": "test/unit-test/CommentParser.test.js",
    "content": "import assert from 'assert';\nimport CommentParser from '../../src/Parser/CommentParser.js';\n\n/** @test {CommentParser} */\ndescribe('CommentParser:', ()=>{\n  /** @test {CommentParser.parse} */\n  it('can parse doc comment.', ()=>{\n    const value = `*\n* this is desc.\n* @tag1\n* @tag2 tag2 value\n* @tag3 tag3 value\n* tag3 second value\n*\n* @tag4 tag4 value\n*\n`;\n    const comment = {type: 'CommentBlock', value: value};\n    const tags = CommentParser.parse(comment);\n    assert.equal(tags.length, 5);\n    assert.deepEqual(tags[0], {tagName: '@desc', tagValue: 'this is desc.'});\n    assert.deepEqual(tags[1], {tagName: '@tag1', tagValue: ''});\n    assert.deepEqual(tags[2], {tagName: '@tag2', tagValue: 'tag2 value'});\n    assert.deepEqual(tags[3], {tagName: '@tag3', tagValue: 'tag3 value\\ntag3 second value'});\n    assert.deepEqual(tags[4], {tagName: '@tag4', tagValue: 'tag4 value'});\n  });\n\n    /** @test {CommentParser.parse} */\n  it('can parse doc comments with trailing tabs', ()=>{\n    const value = `*\n\\t* this is desc.\n\\t* @tag1\n\\t* @tag2 tag2 value\n\\t* @tag3 tag3 value\n\\t* tag3 second value\n\\t*\n\\t* @tag4 tag4 value\n\\t*\n`;\n    const comment = {type: 'CommentBlock', value: value};\n    const tags = CommentParser.parse(comment);\n    assert.equal(tags.length, 5);\n    assert.deepEqual(tags[0], {tagName: '@desc', tagValue: 'this is desc.'});\n    assert.deepEqual(tags[1], {tagName: '@tag1', tagValue: ''});\n    assert.deepEqual(tags[2], {tagName: '@tag2', tagValue: 'tag2 value'});\n    assert.deepEqual(tags[3], {tagName: '@tag3', tagValue: 'tag3 value\\ntag3 second value'});\n    assert.deepEqual(tags[4], {tagName: '@tag4', tagValue: 'tag4 value'});\n  });\n\n  /** @test {CommentParser.isESDoc} */\n  it('return empty with non doc comment.', ()=>{\n    const value = `\\\nthis is not doc comment.\n`;\n    const comment = {type: 'CommentBlock', value: value};\n    const tags = CommentParser.parse(comment);\n    assert.equal(tags.length, 0);\n  });\n\n  /** @test {CommentParser.parse} */\n  it('return empty with line comment.', ()=>{\n    const value = `this is line comment.`;\n    const comment = {type: 'CommentLine', value: value};\n    const tags = CommentParser.parse(comment);\n    assert.equal(tags.length, 0);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/unit-test/CommentParser.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 593,
    "kind": "test",
    "name": "describe208",
    "testId": 208,
    "memberof": "test/unit-test/CommentParser.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/unit-test/CommentParser.test.js~describe208",
    "access": null,
    "description": "CommentParser:",
    "lineNumber": 5,
    "testTargets": [
      "CommentParser"
    ]
  },
  {
    "__docId__": 594,
    "kind": "test",
    "name": "it209",
    "testId": 209,
    "memberof": "test/unit-test/CommentParser.test.js~describe208",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit-test/CommentParser.test.js~describe208.it209",
    "access": null,
    "description": "can parse doc comment.",
    "lineNumber": 7,
    "testTargets": [
      "CommentParser.parse"
    ]
  },
  {
    "__docId__": 595,
    "kind": "test",
    "name": "it210",
    "testId": 210,
    "memberof": "test/unit-test/CommentParser.test.js~describe208",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit-test/CommentParser.test.js~describe208.it210",
    "access": null,
    "description": "can parse doc comments with trailing tabs",
    "lineNumber": 29,
    "testTargets": [
      "CommentParser.parse"
    ]
  },
  {
    "__docId__": 596,
    "kind": "test",
    "name": "it211",
    "testId": 211,
    "memberof": "test/unit-test/CommentParser.test.js~describe208",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit-test/CommentParser.test.js~describe208.it211",
    "access": null,
    "description": "return empty with non doc comment.",
    "lineNumber": 51,
    "testTargets": [
      "CommentParser.isESDoc"
    ]
  },
  {
    "__docId__": 597,
    "kind": "test",
    "name": "it212",
    "testId": 212,
    "memberof": "test/unit-test/CommentParser.test.js~describe208",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit-test/CommentParser.test.js~describe208.it212",
    "access": null,
    "description": "return empty with line comment.",
    "lineNumber": 61,
    "testTargets": [
      "CommentParser.parse"
    ]
  },
  {
    "__docId__": 598,
    "kind": "testFile",
    "name": "test/unit-test/ESDocCLI.test.js",
    "content": "import ESDocCLI from '../../src/ESDocCLI';\nimport process from 'process';\nimport fs from 'fs';\nimport assert from 'assert';\nimport path from 'path';\n\ndescribe('test ESDocCLI:', ()=>{\n  describe('command option', ()=>{\n    const orig = console.log;\n    it('can show help', ()=>{\n      const argv = [null, null];\n      const cli = new ESDocCLI(argv);\n      console.log = function(){};\n      cli._showHelp();\n      console.log = orig;\n    });\n\n    it('can show version', ()=>{\n      const argv = [null, null];\n      const cli = new ESDocCLI(argv);\n      console.log = function(){};\n      cli._showVersion();\n      console.log = orig;\n    });\n  });\n\n  describe('find configuration', ()=>{\n    it('finds -c', ()=>{\n      const cli = new ESDocCLI([null, null, '-c', 'esdoc.json']);\n      assert.equal(cli._findConfigFilePath(), 'esdoc.json');\n    });\n\n    it('finds .esdoc.json', ()=>{\n      process.chdir('./test/');\n      fs.writeFileSync('.esdoc.json', 'dummy');\n      const cli = new ESDocCLI([null, null]);\n      assert.equal(cli._findConfigFilePath(), path.resolve('.esdoc.json'));\n      fs.unlinkSync('.esdoc.json');\n      process.chdir('../');\n    });\n\n    it('finds .esdoc.js', ()=>{\n      process.chdir('./test/');\n      fs.writeFileSync('.esdoc.js', 'dummy');\n      const cli = new ESDocCLI([null, null]);\n      assert.equal(cli._findConfigFilePath(), path.resolve('.esdoc.js'));\n      fs.unlinkSync('.esdoc.js');\n      process.chdir('../');\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/unit-test/ESDocCLI.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 599,
    "kind": "test",
    "name": "describe213",
    "testId": 213,
    "memberof": "test/unit-test/ESDocCLI.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/unit-test/ESDocCLI.test.js~describe213",
    "access": null,
    "description": "test ESDocCLI:",
    "lineNumber": 7
  },
  {
    "__docId__": 600,
    "kind": "test",
    "name": "describe214",
    "testId": 214,
    "memberof": "test/unit-test/ESDocCLI.test.js~describe213",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit-test/ESDocCLI.test.js~describe213.describe214",
    "access": null,
    "description": "command option",
    "lineNumber": 8
  },
  {
    "__docId__": 601,
    "kind": "test",
    "name": "it215",
    "testId": 215,
    "memberof": "test/unit-test/ESDocCLI.test.js~describe213.describe214",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit-test/ESDocCLI.test.js~describe213.describe214.it215",
    "access": null,
    "description": "can show help",
    "lineNumber": 10
  },
  {
    "__docId__": 602,
    "kind": "test",
    "name": "it216",
    "testId": 216,
    "memberof": "test/unit-test/ESDocCLI.test.js~describe213.describe214",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit-test/ESDocCLI.test.js~describe213.describe214.it216",
    "access": null,
    "description": "can show version",
    "lineNumber": 18
  },
  {
    "__docId__": 603,
    "kind": "test",
    "name": "describe217",
    "testId": 217,
    "memberof": "test/unit-test/ESDocCLI.test.js~describe213",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit-test/ESDocCLI.test.js~describe213.describe217",
    "access": null,
    "description": "find configuration",
    "lineNumber": 27
  },
  {
    "__docId__": 604,
    "kind": "test",
    "name": "it218",
    "testId": 218,
    "memberof": "test/unit-test/ESDocCLI.test.js~describe213.describe217",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit-test/ESDocCLI.test.js~describe213.describe217.it218",
    "access": null,
    "description": "finds -c",
    "lineNumber": 28
  },
  {
    "__docId__": 605,
    "kind": "test",
    "name": "it219",
    "testId": 219,
    "memberof": "test/unit-test/ESDocCLI.test.js~describe213.describe217",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit-test/ESDocCLI.test.js~describe213.describe217.it219",
    "access": null,
    "description": "finds .esdoc.json",
    "lineNumber": 33
  },
  {
    "__docId__": 606,
    "kind": "test",
    "name": "it220",
    "testId": 220,
    "memberof": "test/unit-test/ESDocCLI.test.js~describe213.describe217",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit-test/ESDocCLI.test.js~describe213.describe217.it220",
    "access": null,
    "description": "finds .esdoc.js",
    "lineNumber": 42
  },
  {
    "__docId__": 607,
    "kind": "testFile",
    "name": "test/unit-test/ParamParser.test.js",
    "content": "import assert from 'assert';\nimport ParamParser from '../../src/Parser/ParamParser.js';\n\n/** @test {ParamParser} */\ndescribe('ParamParser:', ()=>{\n  /** @test {ParamParser.parseParamValue} */\n  it('parse param value.', ()=>{\n    const value = '{number} p1 this is desc';\n    const {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value);\n    assert.equal(typeText, 'number');\n    assert.equal(paramName, 'p1');\n    assert.equal(paramDesc, 'this is desc');\n  });\n\n  /** @test {ParamParser.parseParamValue} */\n  it('parse param value with hyphen prefix.', ()=>{\n    const value = '{number} p1 - this is desc';\n    const {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value);\n    assert.equal(typeText, 'number');\n    assert.equal(paramName, 'p1');\n    assert.equal(paramDesc, 'this is desc');\n  });\n\n  /** @test {ParamParser.parseParamValue} */\n  it('parse param value without param name', ()=>{\n    const value = '{number} this is desc';\n    const {typeText, paramDesc} = ParamParser.parseParamValue(value, true, false, true);\n    assert.equal(typeText, 'number');\n    assert.equal(paramDesc, 'this is desc');\n  });\n\n  /** @test {ParamParser.parseParamValue} */\n  it('parse param value without param desc', ()=>{\n    const value = '{number} p1';\n    const {typeText, paramName} = ParamParser.parseParamValue(value, true, true, false);\n    assert.equal(typeText, 'number');\n    assert.equal(paramName, 'p1');\n  });\n\n  /** @test {ParamParser.parseParamValue} */\n  it('parse param value with complex', ()=>{\n    const value = '{!(number|string|boolean[])} [p1=10] this is desc';\n    const {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value);\n    assert.equal(typeText, '!(number|string|boolean[])');\n    assert.equal(paramName, '[p1=10]');\n    assert.equal(paramDesc, 'this is desc');\n  });\n\n  /** @test {ParamParser.parseParam} */\n  it('parse param.', ()=>{\n    const value = '{number} p1 this is desc';\n    const {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value);\n    const result = ParamParser.parseParam(typeText, paramName, paramDesc);\n    assert.deepEqual(result, {\n      nullable: null,\n      types: ['number'],\n      spread: false,\n      optional: false,\n      name: 'p1',\n      description: 'this is desc'\n    });\n  });\n\n  /** @test {ParamParser.parseParam} */\n  it('parse param with complex.', ()=>{\n    const value = '{?(number|string|boolean[])} [p1] this is desc';\n    const {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value);\n    const result = ParamParser.parseParam(typeText, paramName, paramDesc);\n    assert.deepEqual(result, {\n      nullable: true,\n      types: ['number', 'string', 'boolean[]'],\n      spread: false,\n      optional: true,\n      name: 'p1',\n      description: 'this is desc',\n    });\n  });\n\n  /** @test {ParamParser.parseParam} */\n  it('parse param with object ({}) as default.', ()=>{\n    const value = '{!(number|string|boolean[])} [p1={}] this is desc';\n    const {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value);\n    const result = ParamParser.parseParam(typeText, paramName, paramDesc);\n    assert.deepEqual(result, {\n      nullable: false,\n      types: ['number', 'string', 'boolean[]'],\n      spread: false,\n      optional: true,\n      name: 'p1',\n      description: 'this is desc',\n      defaultValue: '{}',\n      defaultRaw: {}\n    });\n  });\n\n  /** @test {ParamParser.parseParam} */\n  it('parse param with complex.', ()=>{\n    const value = '{...number} [p1=[10,20,30]] this is desc';\n    const {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value);\n    const result = ParamParser.parseParam(typeText, paramName, paramDesc);\n    assert.deepEqual(result, {\n      nullable: null,\n      types: ['...number'],\n      spread: true,\n      optional: true,\n      name: 'p1',\n      description: 'this is desc',\n      defaultValue: '[10,20,30]',\n      defaultRaw: [10, 20, 30]\n    });\n  });\n\n  it('parse param even if description has {}.', ()=>{\n    const value = '{number} p1 foo {a: number} bar';\n    const {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value);\n    const result = ParamParser.parseParam(typeText, paramName, paramDesc);\n    assert.deepEqual(result, {\n      nullable: null,\n      types: ['number'],\n      spread: false,\n      optional: false,\n      name: 'p1',\n      description: 'foo {a: number} bar'\n    });\n  });\n\n  /** @test {ParamParser.parseParam} */\n  it('throws error when empty type.', ()=>{\n    const value = '{} foo bar';\n    const {typeText, paramName, paramDesc} = ParamParser.parseParamValue(value);\n\n    try {\n      ParamParser.parseParam(typeText, paramName, paramDesc);\n    } catch (e) {\n      assert.equal(e.message, 'Empty Type found name=foo desc=bar');\n      return;\n    }\n    assert(false);\n  });\n});\n",
    "static": true,
    "longname": "/home/aaron/Documents/esdoc2/test/unit-test/ParamParser.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 608,
    "kind": "test",
    "name": "describe221",
    "testId": 221,
    "memberof": "test/unit-test/ParamParser.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/unit-test/ParamParser.test.js~describe221",
    "access": null,
    "description": "ParamParser:",
    "lineNumber": 5,
    "testTargets": [
      "ParamParser"
    ]
  },
  {
    "__docId__": 609,
    "kind": "test",
    "name": "it222",
    "testId": 222,
    "memberof": "test/unit-test/ParamParser.test.js~describe221",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit-test/ParamParser.test.js~describe221.it222",
    "access": null,
    "description": "parse param value.",
    "lineNumber": 7,
    "testTargets": [
      "ParamParser.parseParamValue"
    ]
  },
  {
    "__docId__": 610,
    "kind": "test",
    "name": "it223",
    "testId": 223,
    "memberof": "test/unit-test/ParamParser.test.js~describe221",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit-test/ParamParser.test.js~describe221.it223",
    "access": null,
    "description": "parse param value with hyphen prefix.",
    "lineNumber": 16,
    "testTargets": [
      "ParamParser.parseParamValue"
    ]
  },
  {
    "__docId__": 611,
    "kind": "test",
    "name": "it224",
    "testId": 224,
    "memberof": "test/unit-test/ParamParser.test.js~describe221",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit-test/ParamParser.test.js~describe221.it224",
    "access": null,
    "description": "parse param value without param name",
    "lineNumber": 25,
    "testTargets": [
      "ParamParser.parseParamValue"
    ]
  },
  {
    "__docId__": 612,
    "kind": "test",
    "name": "it225",
    "testId": 225,
    "memberof": "test/unit-test/ParamParser.test.js~describe221",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit-test/ParamParser.test.js~describe221.it225",
    "access": null,
    "description": "parse param value without param desc",
    "lineNumber": 33,
    "testTargets": [
      "ParamParser.parseParamValue"
    ]
  },
  {
    "__docId__": 613,
    "kind": "test",
    "name": "it226",
    "testId": 226,
    "memberof": "test/unit-test/ParamParser.test.js~describe221",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit-test/ParamParser.test.js~describe221.it226",
    "access": null,
    "description": "parse param value with complex",
    "lineNumber": 41,
    "testTargets": [
      "ParamParser.parseParamValue"
    ]
  },
  {
    "__docId__": 614,
    "kind": "test",
    "name": "it227",
    "testId": 227,
    "memberof": "test/unit-test/ParamParser.test.js~describe221",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit-test/ParamParser.test.js~describe221.it227",
    "access": null,
    "description": "parse param.",
    "lineNumber": 50,
    "testTargets": [
      "ParamParser.parseParam"
    ]
  },
  {
    "__docId__": 615,
    "kind": "test",
    "name": "it228",
    "testId": 228,
    "memberof": "test/unit-test/ParamParser.test.js~describe221",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit-test/ParamParser.test.js~describe221.it228",
    "access": null,
    "description": "parse param with complex.",
    "lineNumber": 65,
    "testTargets": [
      "ParamParser.parseParam"
    ]
  },
  {
    "__docId__": 616,
    "kind": "test",
    "name": "it229",
    "testId": 229,
    "memberof": "test/unit-test/ParamParser.test.js~describe221",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit-test/ParamParser.test.js~describe221.it229",
    "access": null,
    "description": "parse param with object ({}) as default.",
    "lineNumber": 80,
    "testTargets": [
      "ParamParser.parseParam"
    ]
  },
  {
    "__docId__": 617,
    "kind": "test",
    "name": "it230",
    "testId": 230,
    "memberof": "test/unit-test/ParamParser.test.js~describe221",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit-test/ParamParser.test.js~describe221.it230",
    "access": null,
    "description": "parse param with complex.",
    "lineNumber": 97,
    "testTargets": [
      "ParamParser.parseParam"
    ]
  },
  {
    "__docId__": 618,
    "kind": "test",
    "name": "it231",
    "testId": 231,
    "memberof": "test/unit-test/ParamParser.test.js~describe221",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit-test/ParamParser.test.js~describe221.it231",
    "access": null,
    "description": "parse param even if description has {}.",
    "lineNumber": 113
  },
  {
    "__docId__": 619,
    "kind": "test",
    "name": "it232",
    "testId": 232,
    "memberof": "test/unit-test/ParamParser.test.js~describe221",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit-test/ParamParser.test.js~describe221.it232",
    "access": null,
    "description": "throws error when empty type.",
    "lineNumber": 128,
    "testTargets": [
      "ParamParser.parseParam"
    ]
  }
]